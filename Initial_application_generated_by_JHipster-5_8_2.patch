Index: .editorconfig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .editorconfig	(date 1552872226000)
+++ .editorconfig	(date 1552872226000)
@@ -0,0 +1,24 @@
+# EditorConfig helps developers define and maintain consistent
+# coding styles between different editors and IDEs
+# editorconfig.org
+
+root = true
+
+[*]
+
+# Change these settings to your own preference
+indent_style = space
+indent_size = 4
+
+# We recommend you to keep these unchanged
+end_of_line = lf
+charset = utf-8
+trim_trailing_whitespace = true
+insert_final_newline = true
+
+[*.md]
+trim_trailing_whitespace = false
+
+[package.json]
+indent_style = space
+indent_size = 2
Index: .gitattributes
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitattributes	(date 1552872226000)
+++ .gitattributes	(date 1552872226000)
@@ -0,0 +1,148 @@
+# This file is inspired by https://github.com/alexkaratarakis/gitattributes
+#
+# Auto detect text files and perform LF normalization
+# http://davidlaing.com/2012/09/19/customise-your-gitattributes-to-become-a-git-ninja/
+* text=auto
+
+# The above will handle all files NOT found below
+# These files are text and should be normalized (Convert crlf => lf)
+
+*.bat           text eol=crlf
+*.coffee        text
+*.css           text
+*.cql           text
+*.df            text
+*.ejs           text
+*.html          text
+*.java          text
+*.js            text
+*.json          text
+*.less          text
+*.properties    text
+*.sass          text
+*.scss          text
+*.sh            text eol=lf
+*.sql           text
+*.txt           text
+*.ts            text
+*.xml           text
+*.yaml          text
+*.yml           text
+
+# Documents
+*.doc           diff=astextplain
+*.DOC           diff=astextplain
+*.docx          diff=astextplain
+*.DOCX          diff=astextplain
+*.dot           diff=astextplain
+*.DOT           diff=astextplain
+*.pdf           diff=astextplain
+*.PDF           diff=astextplain
+*.rtf           diff=astextplain
+*.RTF           diff=astextplain
+*.markdown      text
+*.md            text
+*.adoc          text
+*.textile       text
+*.mustache      text
+*.csv           text
+*.tab           text
+*.tsv           text
+*.txt           text
+AUTHORS         text
+CHANGELOG       text
+CHANGES         text
+CONTRIBUTING    text
+COPYING         text
+copyright       text
+*COPYRIGHT*     text
+INSTALL         text
+license         text
+LICENSE         text
+NEWS            text
+readme          text
+*README*        text
+TODO            text
+
+# Graphics
+*.png           binary
+*.jpg           binary
+*.jpeg          binary
+*.gif           binary
+*.tif           binary
+*.tiff          binary
+*.ico           binary
+# SVG treated as an asset (binary) by default. If you want to treat it as text,
+# comment-out the following line and uncomment the line after.
+*.svg           binary
+#*.svg          text
+*.eps           binary
+
+# These files are binary and should be left untouched
+# (binary is a macro for -text -diff)
+*.class         binary
+*.jar           binary
+*.war           binary
+
+## LINTERS
+.csslintrc      text
+.eslintrc       text
+.jscsrc         text
+.jshintrc       text
+.jshintignore   text
+.stylelintrc    text
+
+## CONFIGS
+*.conf          text
+*.config        text
+.editorconfig   text
+.gitattributes  text
+.gitconfig      text
+.gitignore      text
+.htaccess       text
+*.npmignore     text
+
+## HEROKU
+Procfile        text
+.slugignore     text
+
+## AUDIO
+*.kar           binary
+*.m4a           binary
+*.mid           binary
+*.midi          binary
+*.mp3           binary
+*.ogg           binary
+*.ra            binary
+
+## VIDEO
+*.3gpp          binary
+*.3gp           binary
+*.as            binary
+*.asf           binary
+*.asx           binary
+*.fla           binary
+*.flv           binary
+*.m4v           binary
+*.mng           binary
+*.mov           binary
+*.mp4           binary
+*.mpeg          binary
+*.mpg           binary
+*.swc           binary
+*.swf           binary
+*.webm          binary
+
+## ARCHIVES
+*.7z            binary
+*.gz            binary
+*.rar           binary
+*.tar           binary
+*.zip           binary
+
+## FONTS
+*.ttf           binary
+*.eot           binary
+*.otf           binary
+*.woff          binary
+*.woff2         binary
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(date 1552872226000)
+++ .gitignore	(date 1552872226000)
@@ -0,0 +1,144 @@
+######################
+# Project Specific
+######################
+/target/www/**
+/src/test/javascript/coverage/
+
+######################
+# Node
+######################
+/node/
+node_tmp/
+node_modules/
+npm-debug.log.*
+/.awcache/*
+/.cache-loader/*
+
+######################
+# SASS
+######################
+.sass-cache/
+
+######################
+# Eclipse
+######################
+*.pydevproject
+.project
+.metadata
+tmp/
+tmp/**/*
+*.tmp
+*.bak
+*.swp
+*~.nib
+local.properties
+.classpath
+.settings/
+.loadpath
+.factorypath
+/src/main/resources/rebel.xml
+
+# External tool builders
+.externalToolBuilders/**
+
+# Locally stored "Eclipse launch configurations"
+*.launch
+
+# CDT-specific
+.cproject
+
+# PDT-specific
+.buildpath
+
+######################
+# Intellij
+######################
+.idea/
+*.iml
+*.iws
+*.ipr
+*.ids
+*.orig
+classes/
+out/
+
+######################
+# Visual Studio Code
+######################
+.vscode/
+
+######################
+# Maven
+######################
+/log/
+/target/
+
+######################
+# Gradle
+######################
+.gradle/
+/build/
+
+######################
+# Package Files
+######################
+*.jar
+*.war
+*.ear
+*.db
+
+######################
+# Windows
+######################
+# Windows image file caches
+Thumbs.db
+
+# Folder config file
+Desktop.ini
+
+######################
+# Mac OSX
+######################
+.DS_Store
+.svn
+
+# Thumbnails
+._*
+
+# Files that might appear on external disk
+.Spotlight-V100
+.Trashes
+
+######################
+# Directories
+######################
+/bin/
+/deploy/
+
+######################
+# Logs
+######################
+*.log*
+
+######################
+# Others
+######################
+*.class
+*.*~
+*~
+.merge_file*
+
+######################
+# Gradle Wrapper
+######################
+!gradle/wrapper/gradle-wrapper.jar
+
+######################
+# Maven Wrapper
+######################
+!.mvn/wrapper/maven-wrapper.jar
+
+######################
+# ESLint
+######################
+.eslintcache
Index: .mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .mvn/wrapper/MavenWrapperDownloader.java	(date 1552872226000)
+++ .mvn/wrapper/MavenWrapperDownloader.java	(date 1552872226000)
@@ -0,0 +1,110 @@
+/*
+Licensed to the Apache Software Foundation (ASF) under one
+or more contributor license agreements.  See the NOTICE file
+distributed with this work for additional information
+regarding copyright ownership.  The ASF licenses this file
+to you under the Apache License, Version 2.0 (the
+"License"); you may not use this file except in compliance
+with the License.  You may obtain a copy of the License at
+
+  http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing,
+software distributed under the License is distributed on an
+"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+KIND, either express or implied.  See the License for the
+specific language governing permissions and limitations
+under the License.
+*/
+
+import java.net.*;
+import java.io.*;
+import java.nio.channels.*;
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL =
+            "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: : " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output direcrory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: .mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .mvn/wrapper/maven-wrapper.properties	(date 1552872226000)
+++ .mvn/wrapper/maven-wrapper.properties	(date 1552872226000)
@@ -0,0 +1,1 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.0/apache-maven-3.6.0-bin.zip
Index: .prettierignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .prettierignore	(date 1552872226000)
+++ .prettierignore	(date 1552872226000)
@@ -0,0 +1,3 @@
+node_modules
+target
+package-lock.json
Index: .prettierrc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .prettierrc	(date 1552872226000)
+++ .prettierrc	(date 1552872226000)
@@ -0,0 +1,12 @@
+# Prettier configuration
+
+printWidth: 140
+singleQuote: true
+tabWidth: 4
+useTabs: false
+
+# js and ts rules:
+arrowParens: avoid
+
+# jsx and tsx rules:
+jsxBracketSameLine: false
Index: .yo-rc.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .yo-rc.json	(date 1552872226000)
+++ .yo-rc.json	(date 1552872226000)
@@ -0,0 +1,97 @@
+{
+  "generator-jhipster": {
+    "promptValues": {
+      "packageName": "de.iso.apps",
+      "nativeLanguage": "de"
+    },
+    "jhipsterVersion": "5.8.2",
+    "applicationType": "microservice",
+    "baseName": "efwservice",
+    "packageName": "de.iso.apps",
+    "packageFolder": "de/iso/apps",
+    "serverPort": "8081",
+    "authenticationType": "jwt",
+    "cacheProvider": "hazelcast",
+    "enableHibernateCache": true,
+    "websocket": false,
+    "databaseType": "sql",
+    "devDatabaseType": "h2Disk",
+    "prodDatabaseType": "postgresql",
+    "searchEngine": "elasticsearch",
+    "messageBroker": "kafka",
+    "serviceDiscoveryType": "eureka",
+    "buildTool": "maven",
+    "enableSwaggerCodegen": true,
+    "jwtSecretKey": "NjBkYWExZjI2NzRjY2NiNzRhMjNhMWE1MDViYjdhMDkxOWEwZmY1NWEwNTk4MWU4NWQzNDk0MjdhZmQ2NzU5Y2I0ZjJhMWZkNTlhMTEwYTBlNTUwNGM2OGE5NTIwYjQyOWUyMmI3MTg3ZWJiODBiNjcwOTEzMWFhNGM3Y2JlYWQ=",
+    "testFrameworks": [
+      "gatling",
+      "cucumber"
+    ],
+    "jhiPrefix": "jhi",
+    "entitySuffix": "",
+    "dtoSuffix": "DTO",
+    "otherModules": [
+      {
+        "name": "generator-jhipster-standalone-profile",
+        "version": "2.3.0"
+      },
+      {
+        "name": "generator-jhipster-docker",
+        "version": "2.5.0"
+      },
+      {
+        "name": "generator-jhipster-swagger-cli",
+        "version": "3.0.1"
+      },
+      {
+        "name": "generator-jhipster-spring-cloud-stream",
+        "version": "1.0.0"
+      },
+      {
+        "name": "generator-jhipster-electron",
+        "version": "1.0.0"
+      },
+      {
+        "name": "generator-codegen",
+        "version": "0.2.1"
+      },
+      {
+        "name": "generator-jhipster-translation",
+        "version": "1.0.4"
+      },
+      {
+        "name": "generator-jhipster-database-backup",
+        "version": "1.0.7"
+      },
+      {
+        "name": "generator-jhipster-administration-database",
+        "version": "1.0.4"
+      },
+      {
+        "name": "generator-jhipster-jgitver",
+        "version": "0.1.0"
+      },
+      {
+        "name": "generator-jhipster-obfuscation-at-rest",
+        "version": "0.3.0"
+      },
+      {
+        "name": "generator-jhipster-aeropost",
+        "version": "1.10.0"
+      },
+      {
+        "name": "generator-jhipster-file2url",
+        "version": "0.0.0"
+      }
+    ],
+    "enableTranslation": true,
+    "clientPackageManager": "npm",
+    "nativeLanguage": "de",
+    "languages": [
+      "de",
+      "en"
+    ],
+    "skipClient": true,
+    "skipUserManagement": true
+  }
+}
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- README.md	(date 1552872226000)
+++ README.md	(date 1552872226000)
@@ -0,0 +1,106 @@
+# efwservice
+
+This application was generated using JHipster 5.8.2, you can find documentation and help at [https://www.jhipster.tech/documentation-archive/v5.8.2](https://www.jhipster.tech/documentation-archive/v5.8.2).
+
+This is a "microservice" application intended to be part of a microservice architecture, please refer to the [Doing microservices with JHipster][] page of the documentation for more information.
+
+This application is configured for Service Discovery and Configuration with the JHipster-Registry. On launch, it will refuse to start if it is not able to connect to the JHipster-Registry at [http://localhost:8761](http://localhost:8761). For more information, read our documentation on [Service Discovery and Configuration with the JHipster-Registry][].
+
+## Development
+
+To start your application in the dev profile, simply run:
+
+    ./mvnw
+
+For further instructions on how to develop with JHipster, have a look at [Using JHipster in development][].
+
+### Doing API-First development using openapi-generator
+
+[OpenAPI-Generator]() is configured for this application. You can generate API code from the `src/main/resources/swagger/api.yml` definition file by running:
+
+```bash
+./mvnw generate-sources
+```
+
+Then implements the generated delegate classes with `@Service` classes.
+
+To edit the `api.yml` definition file, you can use a tool such as [Swagger-Editor](). Start a local instance of the swagger-editor using docker by running: `docker-compose -f src/main/docker/swagger-editor.yml up -d`. The editor will then be reachable at [http://localhost:7742](http://localhost:7742).
+
+Refer to [Doing API-First development][] for more details.
+
+## Building for production
+
+To optimize the efwservice application for production, run:
+
+    ./mvnw -Pprod clean package
+
+To ensure everything worked, run:
+
+    java -jar target/*.war
+
+Refer to [Using JHipster in production][] for more details.
+
+## Testing
+
+To launch your application's tests, run:
+
+    ./mvnw clean test
+
+For more information, refer to the [Running tests page][].
+
+### Code quality
+
+Sonar is used to analyse code quality. You can start a local Sonar server (accessible on http://localhost:9001) with:
+
+```
+docker-compose -f src/main/docker/sonar.yml up -d
+```
+
+Then, run a Sonar analysis:
+
+```
+./mvnw -Pprod clean test sonar:sonar
+```
+
+For more information, refer to the [Code quality page][].
+
+## Using Docker to simplify development (optional)
+
+You can use Docker to improve your JHipster development experience. A number of docker-compose configuration are available in the [src/main/docker](src/main/docker) folder to launch required third party services.
+
+For example, to start a postgresql database in a docker container, run:
+
+    docker-compose -f src/main/docker/postgresql.yml up -d
+
+To stop it and remove the container, run:
+
+    docker-compose -f src/main/docker/postgresql.yml down
+
+You can also fully dockerize your application and all the services that it depends on.
+To achieve this, first build a docker image of your app by running:
+
+    ./mvnw package -Pprod verify jib:dockerBuild
+
+Then run:
+
+    docker-compose -f src/main/docker/app.yml up -d
+
+For more information refer to [Using Docker and Docker-Compose][], this page also contains information on the docker-compose sub-generator (`jhipster docker-compose`), which is able to generate docker configurations for one or several JHipster applications.
+
+## Continuous Integration (optional)
+
+To configure CI for your project, run the ci-cd sub-generator (`jhipster ci-cd`), this will let you generate configuration files for a number of Continuous Integration systems. Consult the [Setting up Continuous Integration][] page for more information.
+
+[jhipster homepage and latest documentation]: https://www.jhipster.tech
+[jhipster 5.8.2 archive]: https://www.jhipster.tech/documentation-archive/v5.8.2
+[doing microservices with jhipster]: https://www.jhipster.tech/documentation-archive/v5.8.2/microservices-architecture/
+[using jhipster in development]: https://www.jhipster.tech/documentation-archive/v5.8.2/development/
+[service discovery and configuration with the jhipster-registry]: https://www.jhipster.tech/documentation-archive/v5.8.2/microservices-architecture/#jhipster-registry
+[using docker and docker-compose]: https://www.jhipster.tech/documentation-archive/v5.8.2/docker-compose
+[using jhipster in production]: https://www.jhipster.tech/documentation-archive/v5.8.2/production/
+[running tests page]: https://www.jhipster.tech/documentation-archive/v5.8.2/running-tests/
+[code quality page]: https://www.jhipster.tech/documentation-archive/v5.8.2/code-quality/
+[setting up continuous integration]: https://www.jhipster.tech/documentation-archive/v5.8.2/setting-up-ci/
+[openapi-generator]: https://openapi-generator.tech
+[swagger-editor]: http://editor.swagger.io
+[doing api-first development]: https://www.jhipster.tech/documentation-archive/v5.8.2/doing-api-first-development/
Index: mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mvnw	(date 1552872226000)
+++ mvnw	(date 1552872226000)
@@ -0,0 +1,286 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+  # TODO classpath?
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        wget "$jarUrl" -O "$wrapperJarPath"
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        curl -o "$wrapperJarPath" "$jarUrl"
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mvnw.cmd	(date 1552872226000)
+++ mvnw.cmd	(date 1552872226000)
@@ -0,0 +1,161 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    http://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"
+FOR /F "tokens=1,2 delims==" %%A IN (%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties) DO (
+	IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B 
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    echo Found %WRAPPER_JAR%
+) else (
+    echo Couldn't find %WRAPPER_JAR%, downloading it ...
+	echo Downloading from: %DOWNLOAD_URL%
+    powershell -Command "(New-Object Net.WebClient).DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"
+    echo Finished downloading %WRAPPER_JAR%
+)
+@REM End of extension
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package-lock.json	(date 1552872226000)
+++ package-lock.json	(date 1552872226000)
@@ -0,0 +1,8651 @@
+{
+    "name": "efwservice",
+    "version": "0.0.0",
+    "lockfileVersion": 1,
+    "requires": true,
+    "dependencies": {
+        "@mrmlnc/readdir-enhanced": {
+            "version": "2.2.1",
+            "resolved": "https://registry.npmjs.org/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz",
+            "integrity": "sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==",
+            "dev": true,
+            "requires": {
+                "call-me-maybe": "^1.0.1",
+                "glob-to-regexp": "^0.3.0"
+            }
+        },
+        "@nodelib/fs.stat": {
+            "version": "1.1.3",
+            "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",
+            "integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw==",
+            "dev": true
+        },
+        "@types/concat-stream": {
+            "version": "1.6.0",
+            "resolved": "https://registry.npmjs.org/@types/concat-stream/-/concat-stream-1.6.0.tgz",
+            "integrity": "sha1-OU2+C7X+5Gs42JZzXoto7yOQ0A0=",
+            "dev": true,
+            "requires": {
+                "@types/node": "*"
+            }
+        },
+        "@types/form-data": {
+            "version": "0.0.33",
+            "resolved": "https://registry.npmjs.org/@types/form-data/-/form-data-0.0.33.tgz",
+            "integrity": "sha1-yayFsqX9GENbjIXZ7LUObWyJP/g=",
+            "dev": true,
+            "requires": {
+                "@types/node": "*"
+            }
+        },
+        "@types/node": {
+            "version": "9.6.46",
+            "resolved": "https://registry.npmjs.org/@types/node/-/node-9.6.46.tgz",
+            "integrity": "sha512-W8W76mPzOkN1KuzB25yFIqv1ESj2gp8MILJByUnLcDhOZsuSaDhY8vXLEP9+6OWCqNe7W+3zh2L+rb8kg9rsFA==",
+            "dev": true
+        },
+        "@types/qs": {
+            "version": "6.5.2",
+            "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.5.2.tgz",
+            "integrity": "sha512-47kAAs3yV/hROraCTQYDMh4p/6zI9+gtssjD0kq9OWsGdLcBge59rl49FnCuJ+iWxEKiqFz6KXzeGH5DRVjNJA==",
+            "dev": true
+        },
+        "ajv": {
+            "version": "6.10.0",
+            "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.0.tgz",
+            "integrity": "sha512-nffhOpkymDECQyR0mnsUtoCE8RlX38G0rYP+wgLWFyZuUyuuojSSvi/+euOiQBIn63whYwYVIIH1TvE3tu4OEg==",
+            "dev": true,
+            "requires": {
+                "fast-deep-equal": "^2.0.1",
+                "fast-json-stable-stringify": "^2.0.0",
+                "json-schema-traverse": "^0.4.1",
+                "uri-js": "^4.2.2"
+            }
+        },
+        "ansi": {
+            "version": "0.3.1",
+            "resolved": "https://registry.npmjs.org/ansi/-/ansi-0.3.1.tgz",
+            "integrity": "sha1-DELU+xcWDVqa8eSEus4cZpIsGyE=",
+            "dev": true
+        },
+        "ansi-cyan": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/ansi-cyan/-/ansi-cyan-0.1.1.tgz",
+            "integrity": "sha1-U4rlKK+JgvKK4w2G8vF0VtJgmHM=",
+            "dev": true,
+            "requires": {
+                "ansi-wrap": "0.1.0"
+            }
+        },
+        "ansi-escapes": {
+            "version": "3.2.0",
+            "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
+            "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
+            "dev": true
+        },
+        "ansi-red": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/ansi-red/-/ansi-red-0.1.1.tgz",
+            "integrity": "sha1-jGOPnRCAgAo1PJwoyKgcpHBdlGw=",
+            "dev": true,
+            "requires": {
+                "ansi-wrap": "0.1.0"
+            }
+        },
+        "ansi-regex": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+            "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
+            "dev": true
+        },
+        "ansi-styles": {
+            "version": "3.2.1",
+            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
+            "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
+            "dev": true,
+            "requires": {
+                "color-convert": "^1.9.0"
+            }
+        },
+        "ansi-wrap": {
+            "version": "0.1.0",
+            "resolved": "https://registry.npmjs.org/ansi-wrap/-/ansi-wrap-0.1.0.tgz",
+            "integrity": "sha1-qCJQ3bABXponyoLoLqYDu/pF768=",
+            "dev": true
+        },
+        "are-we-there-yet": {
+            "version": "1.1.5",
+            "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.5.tgz",
+            "integrity": "sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==",
+            "dev": true,
+            "requires": {
+                "delegates": "^1.0.0",
+                "readable-stream": "^2.0.6"
+            }
+        },
+        "argparse": {
+            "version": "1.0.10",
+            "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
+            "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
+            "dev": true,
+            "requires": {
+                "sprintf-js": "~1.0.2"
+            }
+        },
+        "arr-diff": {
+            "version": "4.0.0",
+            "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
+            "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
+            "dev": true
+        },
+        "arr-flatten": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
+            "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==",
+            "dev": true
+        },
+        "arr-union": {
+            "version": "3.1.0",
+            "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
+            "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=",
+            "dev": true
+        },
+        "array-differ": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/array-differ/-/array-differ-1.0.0.tgz",
+            "integrity": "sha1-7/UuN1gknTO+QCuLuOVkuytdQDE=",
+            "dev": true
+        },
+        "array-find-index": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
+            "integrity": "sha1-3wEKoSh+Fku9pvlyOwqWoexBh6E=",
+            "dev": true
+        },
+        "array-slice": {
+            "version": "0.2.3",
+            "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",
+            "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU=",
+            "dev": true
+        },
+        "array-union": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
+            "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
+            "dev": true,
+            "requires": {
+                "array-uniq": "^1.0.1"
+            }
+        },
+        "array-uniq": {
+            "version": "1.0.3",
+            "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
+            "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
+            "dev": true
+        },
+        "array-unique": {
+            "version": "0.3.2",
+            "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
+            "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
+            "dev": true
+        },
+        "arrify": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
+            "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",
+            "dev": true
+        },
+        "asap": {
+            "version": "2.0.6",
+            "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
+            "integrity": "sha1-5QNHYR1+aQlDIIu9r+vLwvuGbUY=",
+            "dev": true
+        },
+        "asn1": {
+            "version": "0.2.4",
+            "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
+            "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
+            "dev": true,
+            "requires": {
+                "safer-buffer": "~2.1.0"
+            }
+        },
+        "assert-plus": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
+            "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
+            "dev": true
+        },
+        "assign-symbols": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",
+            "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=",
+            "dev": true
+        },
+        "async": {
+            "version": "2.6.2",
+            "resolved": "https://registry.npmjs.org/async/-/async-2.6.2.tgz",
+            "integrity": "sha512-H1qVYh1MYhEEFLsP97cVKqCGo7KfCyTt6uEWqsTBr9SO84oK9Uwbyd/yCW+6rKJLHksBNUVWZDAjfS+Ccx0Bbg==",
+            "dev": true,
+            "requires": {
+                "lodash": "^4.17.11"
+            }
+        },
+        "asynckit": {
+            "version": "0.4.0",
+            "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
+            "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k=",
+            "dev": true
+        },
+        "atob": {
+            "version": "2.1.2",
+            "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
+            "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==",
+            "dev": true
+        },
+        "aws-sign2": {
+            "version": "0.7.0",
+            "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
+            "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
+            "dev": true
+        },
+        "aws4": {
+            "version": "1.8.0",
+            "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.8.0.tgz",
+            "integrity": "sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ==",
+            "dev": true
+        },
+        "axios": {
+            "version": "0.18.0",
+            "resolved": "https://registry.npmjs.org/axios/-/axios-0.18.0.tgz",
+            "integrity": "sha1-MtU+SFHv3AoRmTts0AB4nXDAUQI=",
+            "dev": true,
+            "requires": {
+                "follow-redirects": "^1.3.0",
+                "is-buffer": "^1.1.5"
+            }
+        },
+        "babel-polyfill": {
+            "version": "6.23.0",
+            "resolved": "https://registry.npmjs.org/babel-polyfill/-/babel-polyfill-6.23.0.tgz",
+            "integrity": "sha1-g2TKYt+Or7gwSZ9pkXdGbDsDSZ0=",
+            "dev": true,
+            "requires": {
+                "babel-runtime": "^6.22.0",
+                "core-js": "^2.4.0",
+                "regenerator-runtime": "^0.10.0"
+            }
+        },
+        "babel-runtime": {
+            "version": "6.26.0",
+            "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
+            "integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
+            "dev": true,
+            "requires": {
+                "core-js": "^2.4.0",
+                "regenerator-runtime": "^0.11.0"
+            },
+            "dependencies": {
+                "regenerator-runtime": {
+                    "version": "0.11.1",
+                    "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",
+                    "integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg==",
+                    "dev": true
+                }
+            }
+        },
+        "balanced-match": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
+            "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
+            "dev": true
+        },
+        "base": {
+            "version": "0.11.2",
+            "resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",
+            "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",
+            "dev": true,
+            "requires": {
+                "cache-base": "^1.0.1",
+                "class-utils": "^0.3.5",
+                "component-emitter": "^1.2.1",
+                "define-property": "^1.0.0",
+                "isobject": "^3.0.1",
+                "mixin-deep": "^1.2.0",
+                "pascalcase": "^0.1.1"
+            },
+            "dependencies": {
+                "define-property": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
+                    "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+                    "dev": true,
+                    "requires": {
+                        "is-descriptor": "^1.0.0"
+                    }
+                },
+                "is-accessor-descriptor": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+                    "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^6.0.0"
+                    }
+                },
+                "is-data-descriptor": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+                    "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^6.0.0"
+                    }
+                },
+                "is-descriptor": {
+                    "version": "1.0.2",
+                    "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
+                    "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
+                    "dev": true,
+                    "requires": {
+                        "is-accessor-descriptor": "^1.0.0",
+                        "is-data-descriptor": "^1.0.0",
+                        "kind-of": "^6.0.2"
+                    }
+                }
+            }
+        },
+        "bcrypt-pbkdf": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
+            "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
+            "dev": true,
+            "requires": {
+                "tweetnacl": "^0.14.3"
+            }
+        },
+        "binaryextensions": {
+            "version": "2.1.2",
+            "resolved": "https://registry.npmjs.org/binaryextensions/-/binaryextensions-2.1.2.tgz",
+            "integrity": "sha512-xVNN69YGDghOqCCtA6FI7avYrr02mTJjOgB0/f1VPD3pJC8QEvjTKWc4epDx8AqxxA75NI0QpVM2gPJXUbE4Tg==",
+            "dev": true
+        },
+        "boolbase": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
+            "integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24=",
+            "dev": true
+        },
+        "brace-expansion": {
+            "version": "1.1.11",
+            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
+            "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
+            "dev": true,
+            "requires": {
+                "balanced-match": "^1.0.0",
+                "concat-map": "0.0.1"
+            }
+        },
+        "braces": {
+            "version": "2.3.2",
+            "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
+            "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
+            "dev": true,
+            "requires": {
+                "arr-flatten": "^1.1.0",
+                "array-unique": "^0.3.2",
+                "extend-shallow": "^2.0.1",
+                "fill-range": "^4.0.0",
+                "isobject": "^3.0.1",
+                "repeat-element": "^1.1.2",
+                "snapdragon": "^0.8.1",
+                "snapdragon-node": "^2.0.1",
+                "split-string": "^3.0.2",
+                "to-regex": "^3.0.1"
+            },
+            "dependencies": {
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                }
+            }
+        },
+        "buffer-alloc": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.2.0.tgz",
+            "integrity": "sha512-CFsHQgjtW1UChdXgbyJGtnm+O/uLQeZdtbDo8mfUgYXCHSM1wgrVxXm6bSyrUuErEb+4sYVGCzASBRot7zyrow==",
+            "dev": true,
+            "requires": {
+                "buffer-alloc-unsafe": "^1.1.0",
+                "buffer-fill": "^1.0.0"
+            }
+        },
+        "buffer-alloc-unsafe": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/buffer-alloc-unsafe/-/buffer-alloc-unsafe-1.1.0.tgz",
+            "integrity": "sha512-TEM2iMIEQdJ2yjPJoSIsldnleVaAk1oW3DBVUykyOLsEsFmEc9kn+SFFPz+gl54KQNxlDnAwCXosOS9Okx2xAg==",
+            "dev": true
+        },
+        "buffer-fill": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/buffer-fill/-/buffer-fill-1.0.0.tgz",
+            "integrity": "sha1-+PeLdniYiO858gXNY39o5wISKyw=",
+            "dev": true
+        },
+        "buffer-from": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
+            "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==",
+            "dev": true
+        },
+        "cache-base": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",
+            "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",
+            "dev": true,
+            "requires": {
+                "collection-visit": "^1.0.0",
+                "component-emitter": "^1.2.1",
+                "get-value": "^2.0.6",
+                "has-value": "^1.0.0",
+                "isobject": "^3.0.1",
+                "set-value": "^2.0.0",
+                "to-object-path": "^0.3.0",
+                "union-value": "^1.0.0",
+                "unset-value": "^1.0.0"
+            }
+        },
+        "call-me-maybe": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.1.tgz",
+            "integrity": "sha1-JtII6onje1y95gJQoV8DHBak1ms=",
+            "dev": true
+        },
+        "camelcase": {
+            "version": "4.1.0",
+            "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz",
+            "integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0=",
+            "dev": true
+        },
+        "camelcase-keys": {
+            "version": "4.2.0",
+            "resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-4.2.0.tgz",
+            "integrity": "sha1-oqpfsa9oh1glnDLBQUJteJI7m3c=",
+            "dev": true,
+            "requires": {
+                "camelcase": "^4.1.0",
+                "map-obj": "^2.0.0",
+                "quick-lru": "^1.0.0"
+            }
+        },
+        "caseless": {
+            "version": "0.12.0",
+            "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
+            "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=",
+            "dev": true
+        },
+        "chalk": {
+            "version": "2.4.2",
+            "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
+            "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
+            "dev": true,
+            "requires": {
+                "ansi-styles": "^3.2.1",
+                "escape-string-regexp": "^1.0.5",
+                "supports-color": "^5.3.0"
+            }
+        },
+        "chardet": {
+            "version": "0.7.0",
+            "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
+            "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==",
+            "dev": true
+        },
+        "cheerio": {
+            "version": "0.22.0",
+            "resolved": "https://registry.npmjs.org/cheerio/-/cheerio-0.22.0.tgz",
+            "integrity": "sha1-qbqoYKP5tZWmuBsahocxIe06Jp4=",
+            "dev": true,
+            "requires": {
+                "css-select": "~1.2.0",
+                "dom-serializer": "~0.1.0",
+                "entities": "~1.1.1",
+                "htmlparser2": "^3.9.1",
+                "lodash.assignin": "^4.0.9",
+                "lodash.bind": "^4.1.4",
+                "lodash.defaults": "^4.0.1",
+                "lodash.filter": "^4.4.0",
+                "lodash.flatten": "^4.2.0",
+                "lodash.foreach": "^4.3.0",
+                "lodash.map": "^4.4.0",
+                "lodash.merge": "^4.4.0",
+                "lodash.pick": "^4.2.1",
+                "lodash.reduce": "^4.4.0",
+                "lodash.reject": "^4.4.0",
+                "lodash.some": "^4.4.0"
+            }
+        },
+        "chevrotain": {
+            "version": "4.2.0",
+            "resolved": "https://registry.npmjs.org/chevrotain/-/chevrotain-4.2.0.tgz",
+            "integrity": "sha512-uiwhNpkudwrk3rHxKKfrvsWNe4SBDjnswbF2FDqDfrqsfYr4gY0Yl1k2m9yPKR0fqfbiIP67EbgOv4e+JP+GGg==",
+            "dev": true,
+            "requires": {
+                "regexp-to-ast": "0.3.5"
+            }
+        },
+        "class-utils": {
+            "version": "0.3.6",
+            "resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",
+            "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",
+            "dev": true,
+            "requires": {
+                "arr-union": "^3.1.0",
+                "define-property": "^0.2.5",
+                "isobject": "^3.0.0",
+                "static-extend": "^0.1.1"
+            },
+            "dependencies": {
+                "define-property": {
+                    "version": "0.2.5",
+                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+                    "dev": true,
+                    "requires": {
+                        "is-descriptor": "^0.1.0"
+                    }
+                }
+            }
+        },
+        "cli-cursor": {
+            "version": "2.1.0",
+            "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
+            "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
+            "dev": true,
+            "requires": {
+                "restore-cursor": "^2.0.0"
+            }
+        },
+        "cli-table": {
+            "version": "0.3.1",
+            "resolved": "https://registry.npmjs.org/cli-table/-/cli-table-0.3.1.tgz",
+            "integrity": "sha1-9TsFJmqLGguTSz0IIebi3FkUriM=",
+            "dev": true,
+            "requires": {
+                "colors": "1.0.3"
+            }
+        },
+        "cli-width": {
+            "version": "2.2.0",
+            "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
+            "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=",
+            "dev": true
+        },
+        "clone": {
+            "version": "2.1.2",
+            "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
+            "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
+            "dev": true
+        },
+        "clone-buffer": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/clone-buffer/-/clone-buffer-1.0.0.tgz",
+            "integrity": "sha1-4+JbIHrE5wGvch4staFnksrD3Fg=",
+            "dev": true
+        },
+        "clone-stats": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",
+            "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA=",
+            "dev": true
+        },
+        "cloneable-readable": {
+            "version": "1.1.2",
+            "resolved": "https://registry.npmjs.org/cloneable-readable/-/cloneable-readable-1.1.2.tgz",
+            "integrity": "sha512-Bq6+4t+lbM8vhTs/Bef5c5AdEMtapp/iFb6+s4/Hh9MVTt8OLKH7ZOOZSCT+Ys7hsHvqv0GuMPJ1lnQJVHvxpg==",
+            "dev": true,
+            "requires": {
+                "inherits": "^2.0.1",
+                "process-nextick-args": "^2.0.0",
+                "readable-stream": "^2.3.5"
+            }
+        },
+        "co": {
+            "version": "4.6.0",
+            "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
+            "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",
+            "dev": true
+        },
+        "code-point-at": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
+            "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=",
+            "dev": true
+        },
+        "collection-visit": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",
+            "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",
+            "dev": true,
+            "requires": {
+                "map-visit": "^1.0.0",
+                "object-visit": "^1.0.0"
+            }
+        },
+        "color": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/color/-/color-3.0.0.tgz",
+            "integrity": "sha512-jCpd5+s0s0t7p3pHQKpnJ0TpQKKdleP71LWcA0aqiljpiuAkOSUFN/dyH8ZwF0hRmFlrIuRhufds1QyEP9EB+w==",
+            "dev": true,
+            "requires": {
+                "color-convert": "^1.9.1",
+                "color-string": "^1.5.2"
+            }
+        },
+        "color-convert": {
+            "version": "1.9.3",
+            "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
+            "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
+            "dev": true,
+            "requires": {
+                "color-name": "1.1.3"
+            }
+        },
+        "color-name": {
+            "version": "1.1.3",
+            "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
+            "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
+            "dev": true
+        },
+        "color-string": {
+            "version": "1.5.3",
+            "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.3.tgz",
+            "integrity": "sha512-dC2C5qeWoYkxki5UAXapdjqO672AM4vZuPGRQfO8b5HKuKGBbKWpITyDYN7TOFKvRW7kOgAn3746clDBMDJyQw==",
+            "dev": true,
+            "requires": {
+                "color-name": "^1.0.0",
+                "simple-swizzle": "^0.2.2"
+            }
+        },
+        "colornames": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/colornames/-/colornames-1.1.1.tgz",
+            "integrity": "sha1-+IiQMGhcfE/54qVZ9Qd+t2qBb5Y=",
+            "dev": true
+        },
+        "colors": {
+            "version": "1.0.3",
+            "resolved": "https://registry.npmjs.org/colors/-/colors-1.0.3.tgz",
+            "integrity": "sha1-BDP0TYCWgP3rYO0mDxsMJi6CpAs=",
+            "dev": true
+        },
+        "colorspace": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/colorspace/-/colorspace-1.1.1.tgz",
+            "integrity": "sha512-pI3btWyiuz7Ken0BWh9Elzsmv2bM9AhA7psXib4anUXy/orfZ/E0MbQwhSOG/9L8hLlalqrU0UhOuqxW1YjmVw==",
+            "dev": true,
+            "requires": {
+                "color": "3.0.x",
+                "text-hex": "1.0.x"
+            }
+        },
+        "combined-stream": {
+            "version": "1.0.7",
+            "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.7.tgz",
+            "integrity": "sha512-brWl9y6vOB1xYPZcpZde3N9zDByXTosAeMDo4p1wzo6UMOX4vumB+TP1RZ76sfE6Md68Q0NJSrE/gbezd4Ul+w==",
+            "dev": true,
+            "requires": {
+                "delayed-stream": "~1.0.0"
+            }
+        },
+        "commander": {
+            "version": "2.16.0",
+            "resolved": "https://registry.npmjs.org/commander/-/commander-2.16.0.tgz",
+            "integrity": "sha512-sVXqklSaotK9at437sFlFpyOcJonxe0yST/AG9DkQKUdIE6IqGIMv4SfAQSKaJbSdVEJYItASCrBiVQHq1HQew==",
+            "dev": true
+        },
+        "commondir": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
+            "integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=",
+            "dev": true
+        },
+        "component-emitter": {
+            "version": "1.2.1",
+            "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz",
+            "integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=",
+            "dev": true
+        },
+        "concat-map": {
+            "version": "0.0.1",
+            "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+            "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
+            "dev": true
+        },
+        "concat-stream": {
+            "version": "1.6.2",
+            "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
+            "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
+            "dev": true,
+            "requires": {
+                "buffer-from": "^1.0.0",
+                "inherits": "^2.0.3",
+                "readable-stream": "^2.2.2",
+                "typedarray": "^0.0.6"
+            }
+        },
+        "conf": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/conf/-/conf-2.0.0.tgz",
+            "integrity": "sha512-iCLzBsGFi8S73EANsEJZz0JnJ/e5VZef/kSaxydYZLAvw0rFNAUx5R7K5leC/CXXR2mZfXWhUvcZOO/dM2D5xg==",
+            "dev": true,
+            "requires": {
+                "dot-prop": "^4.1.0",
+                "env-paths": "^1.0.0",
+                "make-dir": "^1.0.0",
+                "pkg-up": "^2.0.0",
+                "write-file-atomic": "^2.3.0"
+            }
+        },
+        "configstore": {
+            "version": "1.4.0",
+            "resolved": "https://registry.npmjs.org/configstore/-/configstore-1.4.0.tgz",
+            "integrity": "sha1-w1eB0FAdJowlxUuLF/YkDopPsCE=",
+            "dev": true,
+            "requires": {
+                "graceful-fs": "^4.1.2",
+                "mkdirp": "^0.5.0",
+                "object-assign": "^4.0.1",
+                "os-tmpdir": "^1.0.0",
+                "osenv": "^0.1.0",
+                "uuid": "^2.0.1",
+                "write-file-atomic": "^1.1.2",
+                "xdg-basedir": "^2.0.0"
+            },
+            "dependencies": {
+                "uuid": {
+                    "version": "2.0.3",
+                    "resolved": "https://registry.npmjs.org/uuid/-/uuid-2.0.3.tgz",
+                    "integrity": "sha1-Z+LoY3lyFVMN/zGOW/nc6/1Hsho=",
+                    "dev": true
+                },
+                "write-file-atomic": {
+                    "version": "1.3.4",
+                    "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-1.3.4.tgz",
+                    "integrity": "sha1-+Aek8LHZ6ROuekgRLmzDrxmRtF8=",
+                    "dev": true,
+                    "requires": {
+                        "graceful-fs": "^4.1.11",
+                        "imurmurhash": "^0.1.4",
+                        "slide": "^1.1.5"
+                    }
+                }
+            }
+        },
+        "copy-descriptor": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
+            "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=",
+            "dev": true
+        },
+        "core-js": {
+            "version": "2.6.5",
+            "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.5.tgz",
+            "integrity": "sha512-klh/kDpwX8hryYL14M9w/xei6vrv6sE8gTHDG7/T/+SEovB/G4ejwcfE/CBzO6Edsu+OETZMZ3wcX/EjUkrl5A==",
+            "dev": true
+        },
+        "core-util-is": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
+            "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=",
+            "dev": true
+        },
+        "cross-spawn": {
+            "version": "6.0.5",
+            "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
+            "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
+            "dev": true,
+            "requires": {
+                "nice-try": "^1.0.4",
+                "path-key": "^2.0.1",
+                "semver": "^5.5.0",
+                "shebang-command": "^1.2.0",
+                "which": "^1.2.9"
+            }
+        },
+        "css-select": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz",
+            "integrity": "sha1-KzoRBTnFNV8c2NMUYj6HCxIeyFg=",
+            "dev": true,
+            "requires": {
+                "boolbase": "~1.0.0",
+                "css-what": "2.1",
+                "domutils": "1.5.1",
+                "nth-check": "~1.0.1"
+            }
+        },
+        "css-what": {
+            "version": "2.1.3",
+            "resolved": "https://registry.npmjs.org/css-what/-/css-what-2.1.3.tgz",
+            "integrity": "sha512-a+EPoD+uZiNfh+5fxw2nO9QwFa6nJe2Or35fGY6Ipw1R3R4AGz1d1TEZrCegvw2YTmZ0jXirGYlzxxpYSHwpEg==",
+            "dev": true
+        },
+        "currently-unhandled": {
+            "version": "0.4.1",
+            "resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
+            "integrity": "sha1-mI3zP+qxke95mmE2nddsF635V+o=",
+            "dev": true,
+            "requires": {
+                "array-find-index": "^1.0.1"
+            }
+        },
+        "cycle": {
+            "version": "1.0.3",
+            "resolved": "https://registry.npmjs.org/cycle/-/cycle-1.0.3.tgz",
+            "integrity": "sha1-IegLK+hYD5i0aPN5QwZisEbDStI=",
+            "dev": true
+        },
+        "dargs": {
+            "version": "6.0.0",
+            "resolved": "https://registry.npmjs.org/dargs/-/dargs-6.0.0.tgz",
+            "integrity": "sha512-6lJauzNaI7MiM8EHQWmGj+s3rP5/i1nYs8GAvKrLAx/9dpc9xS/4seFb1ioR39A+kcfu4v3jnEa/EE5qWYnitQ==",
+            "dev": true
+        },
+        "dashdash": {
+            "version": "1.14.1",
+            "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
+            "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
+            "dev": true,
+            "requires": {
+                "assert-plus": "^1.0.0"
+            }
+        },
+        "dateformat": {
+            "version": "3.0.3",
+            "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-3.0.3.tgz",
+            "integrity": "sha512-jyCETtSl3VMZMWeRo7iY1FL19ges1t55hMo5yaam4Jrsm5EPL89UQkoQRyiI+Yf4k8r2ZpdngkV8hr1lIdjb3Q==",
+            "dev": true
+        },
+        "debug": {
+            "version": "4.1.1",
+            "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
+            "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
+            "dev": true,
+            "requires": {
+                "ms": "^2.1.1"
+            }
+        },
+        "decamelize": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
+            "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",
+            "dev": true
+        },
+        "decamelize-keys": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/decamelize-keys/-/decamelize-keys-1.1.0.tgz",
+            "integrity": "sha1-0XGoeTMlKAfrPLYdwcFEXQeN8tk=",
+            "dev": true,
+            "requires": {
+                "decamelize": "^1.1.0",
+                "map-obj": "^1.0.0"
+            },
+            "dependencies": {
+                "map-obj": {
+                    "version": "1.0.1",
+                    "resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
+                    "integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=",
+                    "dev": true
+                }
+            }
+        },
+        "decode-uri-component": {
+            "version": "0.2.0",
+            "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
+            "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=",
+            "dev": true
+        },
+        "decompress-response": {
+            "version": "3.3.0",
+            "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
+            "integrity": "sha1-gKTdMjdIOEv6JICDYirt7Jgq3/M=",
+            "dev": true,
+            "requires": {
+                "mimic-response": "^1.0.0"
+            }
+        },
+        "deep-extend": {
+            "version": "0.6.0",
+            "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
+            "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
+            "dev": true
+        },
+        "define-property": {
+            "version": "2.0.2",
+            "resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",
+            "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",
+            "dev": true,
+            "requires": {
+                "is-descriptor": "^1.0.2",
+                "isobject": "^3.0.1"
+            },
+            "dependencies": {
+                "is-accessor-descriptor": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+                    "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^6.0.0"
+                    }
+                },
+                "is-data-descriptor": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+                    "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^6.0.0"
+                    }
+                },
+                "is-descriptor": {
+                    "version": "1.0.2",
+                    "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
+                    "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
+                    "dev": true,
+                    "requires": {
+                        "is-accessor-descriptor": "^1.0.0",
+                        "is-data-descriptor": "^1.0.0",
+                        "kind-of": "^6.0.2"
+                    }
+                }
+            }
+        },
+        "delayed-stream": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
+            "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",
+            "dev": true
+        },
+        "delegates": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
+            "integrity": "sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o=",
+            "dev": true
+        },
+        "detect-conflict": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/detect-conflict/-/detect-conflict-1.0.1.tgz",
+            "integrity": "sha1-CIZXpmqWHAUBnbfEIwiDsca0F24=",
+            "dev": true
+        },
+        "detect-newline": {
+            "version": "1.0.3",
+            "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-1.0.3.tgz",
+            "integrity": "sha1-6XsQA4d9cMCa8a81v63/Fo3kkg0=",
+            "dev": true,
+            "requires": {
+                "get-stdin": "^4.0.1",
+                "minimist": "^1.1.0"
+            }
+        },
+        "diagnostics": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/diagnostics/-/diagnostics-1.1.1.tgz",
+            "integrity": "sha512-8wn1PmdunLJ9Tqbx+Fx/ZEuHfJf4NKSN2ZBj7SJC/OWRWha843+WsTjqMe1B5E3p28jqBlp+mJ2fPVxPyNgYKQ==",
+            "dev": true,
+            "requires": {
+                "colorspace": "1.1.x",
+                "enabled": "1.0.x",
+                "kuler": "1.0.x"
+            }
+        },
+        "didyoumean": {
+            "version": "1.2.1",
+            "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.1.tgz",
+            "integrity": "sha1-6S7f2tplN9SE1zwBcv0eugxJdv8=",
+            "dev": true
+        },
+        "diff": {
+            "version": "3.5.0",
+            "resolved": "https://registry.npmjs.org/diff/-/diff-3.5.0.tgz",
+            "integrity": "sha512-A46qtFgd+g7pDZinpnwiRJtxbC1hpgf0uzP3iG89scHk0AUC7A1TGxf5OiiOUv/JMZR8GOt8hL900hV0bOy5xA==",
+            "dev": true
+        },
+        "dir-glob": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.0.0.tgz",
+            "integrity": "sha512-37qirFDz8cA5fimp9feo43fSuRo2gHwaIn6dXL8Ber1dGwUosDrGZeCCXq57WnIqE4aQ+u3eQZzsk1yOzhdwag==",
+            "dev": true,
+            "requires": {
+                "arrify": "^1.0.1",
+                "path-type": "^3.0.0"
+            }
+        },
+        "discontinuous-range": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/discontinuous-range/-/discontinuous-range-1.0.0.tgz",
+            "integrity": "sha1-44Mx8IRLukm5qctxx3FYWqsbxlo=",
+            "dev": true
+        },
+        "dom-serializer": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.1.tgz",
+            "integrity": "sha512-l0IU0pPzLWSHBcieZbpOKgkIn3ts3vAh7ZuFyXNwJxJXk/c4Gwj9xaTJwIDVQCXawWD0qb3IzMGH5rglQaO0XA==",
+            "dev": true,
+            "requires": {
+                "domelementtype": "^1.3.0",
+                "entities": "^1.1.1"
+            }
+        },
+        "dom-walk": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.1.tgz",
+            "integrity": "sha1-ZyIm3HTI95mtNTB9+TaroRrNYBg=",
+            "dev": true
+        },
+        "domelementtype": {
+            "version": "1.3.1",
+            "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.1.tgz",
+            "integrity": "sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w==",
+            "dev": true
+        },
+        "domhandler": {
+            "version": "2.4.2",
+            "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",
+            "integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",
+            "dev": true,
+            "requires": {
+                "domelementtype": "1"
+            }
+        },
+        "domutils": {
+            "version": "1.5.1",
+            "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz",
+            "integrity": "sha1-3NhIiib1Y9YQeeSMn3t+Mjc2gs8=",
+            "dev": true,
+            "requires": {
+                "dom-serializer": "0",
+                "domelementtype": "1"
+            }
+        },
+        "dot-prop": {
+            "version": "4.2.0",
+            "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-4.2.0.tgz",
+            "integrity": "sha512-tUMXrxlExSW6U2EXiiKGSBVdYgtV8qlHL+C10TsW4PURY/ic+eaysnSkwB4kA/mBlCyy/IKDJ+Lc3wbWeaXtuQ==",
+            "dev": true,
+            "requires": {
+                "is-obj": "^1.0.0"
+            }
+        },
+        "drange": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/drange/-/drange-1.1.1.tgz",
+            "integrity": "sha512-pYxfDYpued//QpnLIm4Avk7rsNtAtQkUES2cwAYSvD/wd2pKD71gN2Ebj3e7klzXwjocvE8c5vx/1fxwpqmSxA==",
+            "dev": true
+        },
+        "duplexer3": {
+            "version": "0.1.4",
+            "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.4.tgz",
+            "integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI=",
+            "dev": true
+        },
+        "ecc-jsbn": {
+            "version": "0.1.2",
+            "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
+            "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
+            "dev": true,
+            "requires": {
+                "jsbn": "~0.1.0",
+                "safer-buffer": "^2.1.0"
+            }
+        },
+        "editions": {
+            "version": "2.1.3",
+            "resolved": "https://registry.npmjs.org/editions/-/editions-2.1.3.tgz",
+            "integrity": "sha512-xDZyVm0A4nLgMNWVVLJvcwMjI80ShiH/27RyLiCnW1L273TcJIA25C4pwJ33AWV01OX6UriP35Xu+lH4S7HWQw==",
+            "dev": true,
+            "requires": {
+                "errlop": "^1.1.1",
+                "semver": "^5.6.0"
+            }
+        },
+        "ejs": {
+            "version": "2.6.1",
+            "resolved": "https://registry.npmjs.org/ejs/-/ejs-2.6.1.tgz",
+            "integrity": "sha512-0xy4A/twfrRCnkhfk8ErDi5DqdAsAqeGxht4xkCUrsvhhbQNs7E+4jV0CN7+NKIY0aHE72+XvqtBIXzD31ZbXQ==",
+            "dev": true
+        },
+        "enabled": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/enabled/-/enabled-1.0.2.tgz",
+            "integrity": "sha1-ll9lE9LC0cX0ZStkouM5ZGf8L5M=",
+            "dev": true,
+            "requires": {
+                "env-variable": "0.0.x"
+            }
+        },
+        "encoding": {
+            "version": "0.1.12",
+            "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.12.tgz",
+            "integrity": "sha1-U4tm8+5izRq1HsMjgp0flIDHS+s=",
+            "dev": true,
+            "requires": {
+                "iconv-lite": "~0.4.13"
+            }
+        },
+        "entities": {
+            "version": "1.1.2",
+            "resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",
+            "integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==",
+            "dev": true
+        },
+        "env-paths": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/env-paths/-/env-paths-1.0.0.tgz",
+            "integrity": "sha1-QWgTO0K7BcOKNbGuQ5fIKYqzaeA=",
+            "dev": true
+        },
+        "env-variable": {
+            "version": "0.0.5",
+            "resolved": "https://registry.npmjs.org/env-variable/-/env-variable-0.0.5.tgz",
+            "integrity": "sha512-zoB603vQReOFvTg5xMl9I1P2PnHsHQQKTEowsKKD7nseUfJq6UWzK+4YtlWUO1nhiQUxe6XMkk+JleSZD1NZFA==",
+            "dev": true
+        },
+        "errlop": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/errlop/-/errlop-1.1.1.tgz",
+            "integrity": "sha512-WX7QjiPHhsny7/PQvrhS5VMizXXKoKCS3udaBp8gjlARdbn+XmK300eKBAAN0hGyRaTCtRpOaxK+xFVPUJ3zkw==",
+            "dev": true,
+            "requires": {
+                "editions": "^2.1.2"
+            }
+        },
+        "error": {
+            "version": "7.0.2",
+            "resolved": "https://registry.npmjs.org/error/-/error-7.0.2.tgz",
+            "integrity": "sha1-pfdf/02ZJhJt2sDqXcOOaJFTywI=",
+            "dev": true,
+            "requires": {
+                "string-template": "~0.2.1",
+                "xtend": "~4.0.0"
+            }
+        },
+        "error-ex": {
+            "version": "1.3.2",
+            "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
+            "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
+            "dev": true,
+            "requires": {
+                "is-arrayish": "^0.2.1"
+            }
+        },
+        "escape-string-regexp": {
+            "version": "1.0.5",
+            "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
+            "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
+            "dev": true
+        },
+        "esprima": {
+            "version": "4.0.1",
+            "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
+            "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
+            "dev": true
+        },
+        "execa": {
+            "version": "0.7.0",
+            "resolved": "https://registry.npmjs.org/execa/-/execa-0.7.0.tgz",
+            "integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
+            "dev": true,
+            "requires": {
+                "cross-spawn": "^5.0.1",
+                "get-stream": "^3.0.0",
+                "is-stream": "^1.1.0",
+                "npm-run-path": "^2.0.0",
+                "p-finally": "^1.0.0",
+                "signal-exit": "^3.0.0",
+                "strip-eof": "^1.0.0"
+            },
+            "dependencies": {
+                "cross-spawn": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
+                    "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
+                    "dev": true,
+                    "requires": {
+                        "lru-cache": "^4.0.1",
+                        "shebang-command": "^1.2.0",
+                        "which": "^1.2.9"
+                    }
+                }
+            }
+        },
+        "exit-hook": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/exit-hook/-/exit-hook-1.1.1.tgz",
+            "integrity": "sha1-8FyiM7SMBdVP/wd2XfhQfpXAL/g=",
+            "dev": true
+        },
+        "expand-brackets": {
+            "version": "2.1.4",
+            "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",
+            "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
+            "dev": true,
+            "requires": {
+                "debug": "^2.3.3",
+                "define-property": "^0.2.5",
+                "extend-shallow": "^2.0.1",
+                "posix-character-classes": "^0.1.0",
+                "regex-not": "^1.0.0",
+                "snapdragon": "^0.8.1",
+                "to-regex": "^3.0.1"
+            },
+            "dependencies": {
+                "debug": {
+                    "version": "2.6.9",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+                    "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "2.0.0"
+                    }
+                },
+                "define-property": {
+                    "version": "0.2.5",
+                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+                    "dev": true,
+                    "requires": {
+                        "is-descriptor": "^0.1.0"
+                    }
+                },
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                },
+                "ms": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+                    "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
+                    "dev": true
+                }
+            }
+        },
+        "extend": {
+            "version": "3.0.2",
+            "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
+            "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
+            "dev": true
+        },
+        "extend-shallow": {
+            "version": "3.0.2",
+            "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",
+            "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",
+            "dev": true,
+            "requires": {
+                "assign-symbols": "^1.0.0",
+                "is-extendable": "^1.0.1"
+            },
+            "dependencies": {
+                "is-extendable": {
+                    "version": "1.0.1",
+                    "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
+                    "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
+                    "dev": true,
+                    "requires": {
+                        "is-plain-object": "^2.0.4"
+                    }
+                }
+            }
+        },
+        "external-editor": {
+            "version": "3.0.3",
+            "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.0.3.tgz",
+            "integrity": "sha512-bn71H9+qWoOQKyZDo25mOMVpSmXROAsTJVVVYzrrtol3d4y+AsKjf4Iwl2Q+IuT0kFSQ1qo166UuIwqYq7mGnA==",
+            "dev": true,
+            "requires": {
+                "chardet": "^0.7.0",
+                "iconv-lite": "^0.4.24",
+                "tmp": "^0.0.33"
+            }
+        },
+        "extglob": {
+            "version": "2.0.4",
+            "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",
+            "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
+            "dev": true,
+            "requires": {
+                "array-unique": "^0.3.2",
+                "define-property": "^1.0.0",
+                "expand-brackets": "^2.1.4",
+                "extend-shallow": "^2.0.1",
+                "fragment-cache": "^0.2.1",
+                "regex-not": "^1.0.0",
+                "snapdragon": "^0.8.1",
+                "to-regex": "^3.0.1"
+            },
+            "dependencies": {
+                "define-property": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
+                    "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+                    "dev": true,
+                    "requires": {
+                        "is-descriptor": "^1.0.0"
+                    }
+                },
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                },
+                "is-accessor-descriptor": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+                    "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^6.0.0"
+                    }
+                },
+                "is-data-descriptor": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+                    "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^6.0.0"
+                    }
+                },
+                "is-descriptor": {
+                    "version": "1.0.2",
+                    "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
+                    "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
+                    "dev": true,
+                    "requires": {
+                        "is-accessor-descriptor": "^1.0.0",
+                        "is-data-descriptor": "^1.0.0",
+                        "kind-of": "^6.0.2"
+                    }
+                }
+            }
+        },
+        "extsprintf": {
+            "version": "1.3.0",
+            "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
+            "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
+            "dev": true
+        },
+        "eyes": {
+            "version": "0.1.8",
+            "resolved": "https://registry.npmjs.org/eyes/-/eyes-0.1.8.tgz",
+            "integrity": "sha1-Ys8SAjTGg3hdkCNIqADvPgzCC8A=",
+            "dev": true
+        },
+        "fast-deep-equal": {
+            "version": "2.0.1",
+            "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",
+            "integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk=",
+            "dev": true
+        },
+        "fast-glob": {
+            "version": "2.2.6",
+            "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.6.tgz",
+            "integrity": "sha512-0BvMaZc1k9F+MeWWMe8pL6YltFzZYcJsYU7D4JyDA6PAczaXvxqQQ/z+mDF7/4Mw01DeUc+i3CTKajnkANkV4w==",
+            "dev": true,
+            "requires": {
+                "@mrmlnc/readdir-enhanced": "^2.2.1",
+                "@nodelib/fs.stat": "^1.1.2",
+                "glob-parent": "^3.1.0",
+                "is-glob": "^4.0.0",
+                "merge2": "^1.2.3",
+                "micromatch": "^3.1.10"
+            }
+        },
+        "fast-json-stable-stringify": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
+            "integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I=",
+            "dev": true
+        },
+        "fast-safe-stringify": {
+            "version": "2.0.6",
+            "resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.0.6.tgz",
+            "integrity": "sha512-q8BZ89jjc+mz08rSxROs8VsrBBcn1SIw1kq9NjolL509tkABRk9io01RAjSaEv1Xb2uFLt8VtRiZbGp5H8iDtg==",
+            "dev": true
+        },
+        "fecha": {
+            "version": "2.3.3",
+            "resolved": "https://registry.npmjs.org/fecha/-/fecha-2.3.3.tgz",
+            "integrity": "sha512-lUGBnIamTAwk4znq5BcqsDaxSmZ9nDVJaij6NvRt/Tg4R69gERA+otPKbS86ROw9nxVMw2/mp1fnaiWqbs6Sdg==",
+            "dev": true
+        },
+        "figures": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
+            "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
+            "dev": true,
+            "requires": {
+                "escape-string-regexp": "^1.0.5"
+            }
+        },
+        "fill-range": {
+            "version": "4.0.0",
+            "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
+            "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
+            "dev": true,
+            "requires": {
+                "extend-shallow": "^2.0.1",
+                "is-number": "^3.0.0",
+                "repeat-string": "^1.6.1",
+                "to-regex-range": "^2.1.0"
+            },
+            "dependencies": {
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                }
+            }
+        },
+        "find-up": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
+            "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
+            "dev": true,
+            "requires": {
+                "locate-path": "^3.0.0"
+            }
+        },
+        "first-chunk-stream": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-2.0.0.tgz",
+            "integrity": "sha1-G97NuOCDwGZLkZRVgVd6Q6nzHXA=",
+            "dev": true,
+            "requires": {
+                "readable-stream": "^2.0.2"
+            }
+        },
+        "follow-redirects": {
+            "version": "1.7.0",
+            "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.7.0.tgz",
+            "integrity": "sha512-m/pZQy4Gj287eNy94nivy5wchN3Kp+Q5WgUPNy5lJSZ3sgkVKSYV/ZChMAQVIgx1SqfZ2zBZtPA2YlXIWxxJOQ==",
+            "dev": true,
+            "requires": {
+                "debug": "^3.2.6"
+            },
+            "dependencies": {
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                }
+            }
+        },
+        "for-in": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
+            "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",
+            "dev": true
+        },
+        "forever-agent": {
+            "version": "0.6.1",
+            "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
+            "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=",
+            "dev": true
+        },
+        "form-data": {
+            "version": "2.3.3",
+            "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
+            "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
+            "dev": true,
+            "requires": {
+                "asynckit": "^0.4.0",
+                "combined-stream": "^1.0.6",
+                "mime-types": "^2.1.12"
+            }
+        },
+        "fragment-cache": {
+            "version": "0.2.1",
+            "resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",
+            "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
+            "dev": true,
+            "requires": {
+                "map-cache": "^0.2.2"
+            }
+        },
+        "fs": {
+            "version": "0.0.1-security",
+            "resolved": "https://registry.npmjs.org/fs/-/fs-0.0.1-security.tgz",
+            "integrity": "sha1-invTcYa23d84E/I4WLV+yq9eQdQ=",
+            "dev": true
+        },
+        "fs-exists-sync": {
+            "version": "0.1.0",
+            "resolved": "https://registry.npmjs.org/fs-exists-sync/-/fs-exists-sync-0.1.0.tgz",
+            "integrity": "sha1-mC1ok6+RjnLQjeyehnP/K1qNat0=",
+            "dev": true
+        },
+        "fs-extra": {
+            "version": "7.0.1",
+            "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
+            "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
+            "dev": true,
+            "requires": {
+                "graceful-fs": "^4.1.2",
+                "jsonfile": "^4.0.0",
+                "universalify": "^0.1.0"
+            }
+        },
+        "fs.realpath": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
+            "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
+            "dev": true
+        },
+        "gauge": {
+            "version": "1.2.7",
+            "resolved": "https://registry.npmjs.org/gauge/-/gauge-1.2.7.tgz",
+            "integrity": "sha1-6c7FSD09TuDvRLYKfZnkk14TbZM=",
+            "dev": true,
+            "requires": {
+                "ansi": "^0.3.0",
+                "has-unicode": "^2.0.0",
+                "lodash.pad": "^4.1.0",
+                "lodash.padend": "^4.1.0",
+                "lodash.padstart": "^4.1.0"
+            }
+        },
+        "generator-codegen": {
+            "version": "0.2.1",
+            "resolved": "https://registry.npmjs.org/generator-codegen/-/generator-codegen-0.2.1.tgz",
+            "integrity": "sha512-hJIt2xXFGG9DusEGbkd2KuJ8hElmhCB4MIeQXlRhdG4KuUdKNxg5ZPEJxWYXm9qxIBgAVuZI4a38RZx6O8cHoQ==",
+            "dev": true,
+            "requires": {
+                "chalk": "^2.4.1",
+                "yeoman-generator": "^3.1.1"
+            }
+        },
+        "generator-jhipster": {
+            "version": "5.8.2",
+            "resolved": "https://registry.npmjs.org/generator-jhipster/-/generator-jhipster-5.8.2.tgz",
+            "integrity": "sha512-GW33cKnIf0wWuK411U9GDiNKwKVLbL4BpAqyR4b9JD6ClhwHsQg3HRlItN8pV0iTHJtyFnSfcV/9nJIHFWwvKA==",
+            "dev": true,
+            "requires": {
+                "axios": "0.18.0",
+                "chalk": "2.4.1",
+                "commander": "2.16.0",
+                "conf": "2.0.0",
+                "didyoumean": "1.2.1",
+                "ejs": "2.6.1",
+                "glob": "7.1.2",
+                "gulp-filter": "5.1.0",
+                "insight": "0.10.1",
+                "jhipster-core": "3.6.11",
+                "js-object-pretty-print": "0.3.0",
+                "js-yaml": "3.12.0",
+                "lodash": "4.17.10",
+                "meow": "5.0.0",
+                "mkdirp": "0.5.1",
+                "os-locale": "2.1.0",
+                "parse-gitignore": "1.0.1",
+                "pluralize": "7.0.0",
+                "prettier": "1.13.7",
+                "randexp": "0.4.9",
+                "semver": "5.5.0",
+                "shelljs": "0.8.2",
+                "tabtab": "2.2.2",
+                "through2": "2.0.3",
+                "uuid": "3.3.2",
+                "yeoman-environment": "2.3.0",
+                "yeoman-generator": "3.0.0"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.4.1",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
+                    "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.2.1",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^5.3.0"
+                    }
+                },
+                "chardet": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",
+                    "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I=",
+                    "dev": true
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "external-editor": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",
+                    "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",
+                    "dev": true,
+                    "requires": {
+                        "chardet": "^0.4.0",
+                        "iconv-lite": "^0.4.17",
+                        "tmp": "^0.0.33"
+                    }
+                },
+                "glob": {
+                    "version": "7.1.2",
+                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+                    "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+                    "dev": true,
+                    "requires": {
+                        "fs.realpath": "^1.0.0",
+                        "inflight": "^1.0.4",
+                        "inherits": "2",
+                        "minimatch": "^3.0.4",
+                        "once": "^1.3.0",
+                        "path-is-absolute": "^1.0.0"
+                    }
+                },
+                "inquirer": {
+                    "version": "5.2.0",
+                    "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-5.2.0.tgz",
+                    "integrity": "sha512-E9BmnJbAKLPGonz0HeWHtbKf+EeSP93paWO3ZYoUpq/aowXvYGjjCSuashhXPpzbArIjBbji39THkxTz9ZeEUQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-escapes": "^3.0.0",
+                        "chalk": "^2.0.0",
+                        "cli-cursor": "^2.1.0",
+                        "cli-width": "^2.0.0",
+                        "external-editor": "^2.1.0",
+                        "figures": "^2.0.0",
+                        "lodash": "^4.3.0",
+                        "mute-stream": "0.0.7",
+                        "run-async": "^2.2.0",
+                        "rxjs": "^5.5.2",
+                        "string-width": "^2.1.0",
+                        "strip-ansi": "^4.0.0",
+                        "through": "^2.3.6"
+                    }
+                },
+                "lodash": {
+                    "version": "4.17.10",
+                    "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.10.tgz",
+                    "integrity": "sha512-UejweD1pDoXu+AD825lWwp4ZGtSwgnpZxb3JDViD7StjQz+Nb/6l093lx4OQ0foGWNRoc19mWy7BzL+UAK2iVg==",
+                    "dev": true
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    }
+                },
+                "rxjs": {
+                    "version": "5.5.12",
+                    "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-5.5.12.tgz",
+                    "integrity": "sha512-xx2itnL5sBbqeeiVgNPVuQQ1nC8Jp2WfNJhXWHmElW9YmrpS9UVnNzhP3EH3HFqexO5Tlp8GhYY+WEcqcVMvGw==",
+                    "dev": true,
+                    "requires": {
+                        "symbol-observable": "1.0.1"
+                    }
+                },
+                "semver": {
+                    "version": "5.5.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.5.0.tgz",
+                    "integrity": "sha512-4SJ3dm0WAwWy/NVeioZh5AntkdJoWKxHxcmyP622fOkgHa4z3R0TdBJICINyaSDE6uNwVc8gZr+ZinwZAH4xIA==",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.8.2",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.2.tgz",
+                    "integrity": "sha512-pRXeNrCA2Wd9itwhvLp5LZQvPJ0wU6bcjaTMywHHGX5XWhVN2nzSu7WV0q+oUY7mGK3mgSkDDzP3MgjqdyIgbQ==",
+                    "dev": true,
+                    "requires": {
+                        "glob": "^7.0.0",
+                        "interpret": "^1.0.0",
+                        "rechoir": "^0.6.2"
+                    }
+                },
+                "through2": {
+                    "version": "2.0.3",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.3.tgz",
+                    "integrity": "sha1-AARWmzfHx0ujnEPzzteNGtlBQL4=",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "^2.1.5",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-environment": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/yeoman-environment/-/yeoman-environment-2.3.0.tgz",
+                    "integrity": "sha512-PHSAkVOqYdcR+C+Uht1SGC4eVD/9OhygYFkYaI66xF8vKIeS1RNYay+umj2ZrQeJ50tF5Q/RSO6qGDz9y3Ifug==",
+                    "dev": true,
+                    "requires": {
+                        "chalk": "^2.1.0",
+                        "cross-spawn": "^6.0.5",
+                        "debug": "^3.1.0",
+                        "diff": "^3.3.1",
+                        "escape-string-regexp": "^1.0.2",
+                        "globby": "^8.0.1",
+                        "grouped-queue": "^0.3.3",
+                        "inquirer": "^5.2.0",
+                        "is-scoped": "^1.0.0",
+                        "lodash": "^4.17.10",
+                        "log-symbols": "^2.1.0",
+                        "mem-fs": "^1.1.0",
+                        "strip-ansi": "^4.0.0",
+                        "text-table": "^0.2.0",
+                        "untildify": "^3.0.2"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "3.0.0",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-3.0.0.tgz",
+                    "integrity": "sha512-aHsNXzkdgAoakZTZsDX7T56wYWYd1O5E/GBIFAVMJLH7TKRr+1MiEJszZQbbCSA+J+lpT743/8L88j35yNdTLQ==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.6.0",
+                        "chalk": "^2.3.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^6.0.5",
+                        "dargs": "^6.0.0",
+                        "dateformat": "^3.0.3",
+                        "debug": "^3.1.0",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^3.0.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.2.1",
+                        "lodash": "^4.17.10",
+                        "make-dir": "^1.1.0",
+                        "mem-fs-editor": "^5.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^5.1.0",
+                        "read-chunk": "^2.1.0",
+                        "read-pkg-up": "^4.0.0",
+                        "rimraf": "^2.6.2",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.8.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.5"
+                    }
+                }
+            }
+        },
+        "generator-jhipster-administration-database": {
+            "version": "1.0.4",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-administration-database/-/generator-jhipster-administration-database-1.0.4.tgz",
+            "integrity": "sha512-ho2jgsX9EJCxUoAa00pJYgt7YE8wbUlehNYsdAO/x2DVUdragYG7egJ3DBS3Zd5qZArkk1ERetmRQPgU9o0oig==",
+            "dev": true,
+            "requires": {
+                "chalk": "^2.4.1",
+                "fs": "0.0.1-security",
+                "generator-jhipster": ">=5.0.0",
+                "mkdirp": "0.5.1",
+                "semver": "5.3.0",
+                "shelljs": "0.5.3",
+                "yeoman-generator": "3.1.1"
+            },
+            "dependencies": {
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    }
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.5.3",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
+                    "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
+                    "dev": true
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "3.1.1",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-3.1.1.tgz",
+                    "integrity": "sha512-ur4+vzXQEkyJNV+uBf9wLIo8gcuwRJkPyYU8CbKoXjfaVDMF0hYjO242UKK9eVx5uL2IvZAG/tLS/g7QaFdn/A==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.6.0",
+                        "chalk": "^2.3.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^6.0.5",
+                        "dargs": "^6.0.0",
+                        "dateformat": "^3.0.3",
+                        "debug": "^3.1.0",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^3.0.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.2.1",
+                        "lodash": "^4.17.10",
+                        "make-dir": "^1.1.0",
+                        "mem-fs-editor": "^5.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^5.1.0",
+                        "read-chunk": "^2.1.0",
+                        "read-pkg-up": "^4.0.0",
+                        "rimraf": "^2.6.2",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.8.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.5"
+                    },
+                    "dependencies": {
+                        "shelljs": {
+                            "version": "0.8.3",
+                            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.3.tgz",
+                            "integrity": "sha512-fc0BKlAWiLpwZljmOvAOTE/gXawtCoNrP5oaY7KIaQbbyHeQVg01pSEuEGvGh3HEdBU4baCD7wQBwADmM/7f7A==",
+                            "dev": true,
+                            "requires": {
+                                "glob": "^7.0.0",
+                                "interpret": "^1.0.0",
+                                "rechoir": "^0.6.2"
+                            }
+                        }
+                    }
+                }
+            }
+        },
+        "generator-jhipster-aeropost": {
+            "version": "1.10.0",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-aeropost/-/generator-jhipster-aeropost-1.10.0.tgz",
+            "integrity": "sha512-g31msCxni285DFMJJ1XkEfrA5dPb+/pYW6CqjoOf4OFdw/D4WXQ6hPtO6n1k/zvm0ifmG4AuDLoj1FliUScfog==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.1.0",
+                "generator-jhipster": ">=4.6.0",
+                "jenkins-api": "^0.3.1",
+                "mkdirp": "0.5.1",
+                "semver": "5.3.0",
+                "shelljs": "0.5.3",
+                "xml2js": "^0.4.19",
+                "yeoman-generator": "^3.1.1"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.1.0.tgz",
+                    "integrity": "sha512-LUHGS/dge4ujbXMJrnihYMcL4AoOweGnw9Tp3kQuqy1Kx5c1qKjqvMJZ6nVJPMWJtKCTN72ZogH3oeSO9g9rXQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.1.0",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^4.0.0"
+                    }
+                },
+                "has-flag": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
+                    "integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=",
+                    "dev": true
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.5.3",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
+                    "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
+                    "dev": true
+                },
+                "supports-color": {
+                    "version": "4.5.0",
+                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-4.5.0.tgz",
+                    "integrity": "sha1-vnoN5ITexcXN34s9WRJQRJEvY1s=",
+                    "dev": true,
+                    "requires": {
+                        "has-flag": "^2.0.0"
+                    }
+                }
+            }
+        },
+        "generator-jhipster-database-backup": {
+            "version": "1.0.7",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-database-backup/-/generator-jhipster-database-backup-1.0.7.tgz",
+            "integrity": "sha512-KO5c9kpuulEu1fJeOVMFkQNI+6YHkv5nGZBEim/wvBkddQZSDE5BsxTgLS4CPl75zP9GfSWITgKAGAumftYGHg==",
+            "dev": true,
+            "requires": {
+                "chalk": "^2.4.1",
+                "fs": "0.0.1-security",
+                "generator-jhipster": ">=5.0.0",
+                "line-reader": "^0.4.0",
+                "mkdirp": "0.5.1",
+                "semver": "5.3.0",
+                "shelljs": "0.5.3",
+                "yeoman-generator": "3.1.1"
+            },
+            "dependencies": {
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    }
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.5.3",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
+                    "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
+                    "dev": true
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "3.1.1",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-3.1.1.tgz",
+                    "integrity": "sha512-ur4+vzXQEkyJNV+uBf9wLIo8gcuwRJkPyYU8CbKoXjfaVDMF0hYjO242UKK9eVx5uL2IvZAG/tLS/g7QaFdn/A==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.6.0",
+                        "chalk": "^2.3.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^6.0.5",
+                        "dargs": "^6.0.0",
+                        "dateformat": "^3.0.3",
+                        "debug": "^3.1.0",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^3.0.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.2.1",
+                        "lodash": "^4.17.10",
+                        "make-dir": "^1.1.0",
+                        "mem-fs-editor": "^5.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^5.1.0",
+                        "read-chunk": "^2.1.0",
+                        "read-pkg-up": "^4.0.0",
+                        "rimraf": "^2.6.2",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.8.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.5"
+                    },
+                    "dependencies": {
+                        "shelljs": {
+                            "version": "0.8.3",
+                            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.3.tgz",
+                            "integrity": "sha512-fc0BKlAWiLpwZljmOvAOTE/gXawtCoNrP5oaY7KIaQbbyHeQVg01pSEuEGvGh3HEdBU4baCD7wQBwADmM/7f7A==",
+                            "dev": true,
+                            "requires": {
+                                "glob": "^7.0.0",
+                                "interpret": "^1.0.0",
+                                "rechoir": "^0.6.2"
+                            }
+                        }
+                    }
+                }
+            }
+        },
+        "generator-jhipster-docker": {
+            "version": "2.5.0",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-docker/-/generator-jhipster-docker-2.5.0.tgz",
+            "integrity": "sha512-uORKBTe3eJtfbgfmJxXTXU7aGPBia/mNdZxr7inaonvlMjTiVB0YP53qqumDdvszqjh2qUhbd7UmpYZWphQ2jw==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.3.0",
+                "generator-jhipster": ">=4.6.0",
+                "mkdirp": "0.5.1",
+                "remote-origin-url": "1.0.0",
+                "yeoman-generator": "2.0.2"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.3.0.tgz",
+                    "integrity": "sha512-Az5zJR2CBujap2rqXGaJKaPHyJ0IrUimvYNX+ncCy8PJP4ltOGTrHUIo097ZaL2zMeKYpiCdqDvS6zdrTFok3Q==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.1.0",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^4.0.0"
+                    }
+                },
+                "cross-spawn": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
+                    "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
+                    "dev": true,
+                    "requires": {
+                        "lru-cache": "^4.0.1",
+                        "shebang-command": "^1.2.0",
+                        "which": "^1.2.9"
+                    }
+                },
+                "dargs": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/dargs/-/dargs-5.1.0.tgz",
+                    "integrity": "sha1-7H6lDHhWTNNsnV7Bj2Yyn63ieCk=",
+                    "dev": true
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "deep-extend": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.4.2.tgz",
+                    "integrity": "sha1-SLaZwn4zS/ifEIkr5DL25MfTSn8=",
+                    "dev": true
+                },
+                "find-up": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+                    "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+                    "dev": true,
+                    "requires": {
+                        "locate-path": "^2.0.0"
+                    }
+                },
+                "globby": {
+                    "version": "6.1.0",
+                    "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
+                    "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
+                    "dev": true,
+                    "requires": {
+                        "array-union": "^1.0.1",
+                        "glob": "^7.0.3",
+                        "object-assign": "^4.0.1",
+                        "pify": "^2.0.0",
+                        "pinkie-promise": "^2.0.0"
+                    }
+                },
+                "has-flag": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
+                    "integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=",
+                    "dev": true
+                },
+                "locate-path": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+                    "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+                    "dev": true,
+                    "requires": {
+                        "p-locate": "^2.0.0",
+                        "path-exists": "^3.0.0"
+                    }
+                },
+                "mem-fs-editor": {
+                    "version": "3.0.2",
+                    "resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-3.0.2.tgz",
+                    "integrity": "sha1-3Qpuryu4prN3QAZ6pUnrUwEFr58=",
+                    "dev": true,
+                    "requires": {
+                        "commondir": "^1.0.1",
+                        "deep-extend": "^0.4.0",
+                        "ejs": "^2.3.1",
+                        "glob": "^7.0.3",
+                        "globby": "^6.1.0",
+                        "mkdirp": "^0.5.0",
+                        "multimatch": "^2.0.0",
+                        "rimraf": "^2.2.8",
+                        "through2": "^2.0.0",
+                        "vinyl": "^2.0.1"
+                    }
+                },
+                "p-limit": {
+                    "version": "1.3.0",
+                    "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+                    "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+                    "dev": true,
+                    "requires": {
+                        "p-try": "^1.0.0"
+                    }
+                },
+                "p-locate": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+                    "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+                    "dev": true,
+                    "requires": {
+                        "p-limit": "^1.1.0"
+                    }
+                },
+                "p-try": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+                    "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
+                    "dev": true
+                },
+                "pify": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+                    "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
+                    "dev": true
+                },
+                "pretty-bytes": {
+                    "version": "4.0.2",
+                    "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-4.0.2.tgz",
+                    "integrity": "sha1-sr+C5zUNZcbDOqlaqlpPYyf2HNk=",
+                    "dev": true
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    },
+                    "dependencies": {
+                        "pify": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
+                            "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
+                            "dev": true
+                        }
+                    }
+                },
+                "read-pkg-up": {
+                    "version": "3.0.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-3.0.0.tgz",
+                    "integrity": "sha1-PtSWaF26D4/hGNBpHcUfSh/5bwc=",
+                    "dev": true,
+                    "requires": {
+                        "find-up": "^2.0.0",
+                        "read-pkg": "^3.0.0"
+                    }
+                },
+                "shelljs": {
+                    "version": "0.7.8",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.7.8.tgz",
+                    "integrity": "sha1-3svPh0sNHl+3LhSxZKloMEjprLM=",
+                    "dev": true,
+                    "requires": {
+                        "glob": "^7.0.0",
+                        "interpret": "^1.0.0",
+                        "rechoir": "^0.6.2"
+                    }
+                },
+                "supports-color": {
+                    "version": "4.5.0",
+                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-4.5.0.tgz",
+                    "integrity": "sha1-vnoN5ITexcXN34s9WRJQRJEvY1s=",
+                    "dev": true,
+                    "requires": {
+                        "has-flag": "^2.0.0"
+                    }
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "2.0.2",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-2.0.2.tgz",
+                    "integrity": "sha512-YWqEq5WLc+DuIp5HgqPNrglgPUGMvww4GLbQ44YQ/z9je5K+D+t4A25sNTG24Cikz0dvC4Id+u6SjWTkEwC6Ew==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.5.0",
+                        "chalk": "^2.1.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^5.1.0",
+                        "dargs": "^5.1.0",
+                        "dateformat": "^3.0.2",
+                        "debug": "^3.1.0",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^2.1.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.1.0",
+                        "lodash": "^4.11.1",
+                        "make-dir": "^1.0.0",
+                        "mem-fs-editor": "^3.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^4.0.2",
+                        "read-chunk": "^2.1.0",
+                        "read-pkg-up": "^3.0.0",
+                        "rimraf": "^2.6.2",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.7.8",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.3"
+                    }
+                }
+            }
+        },
+        "generator-jhipster-electron": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-electron/-/generator-jhipster-electron-1.0.0.tgz",
+            "integrity": "sha512-o3FkTK8tnJjJgVf4XkE9FHfFJDoaS6myRauG/AurusKU3Bb5mCgf5ALnTbiLQ1Da3Q/xEZRu1fZlbLucRDBpUQ==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.1.0",
+                "generator-jhipster": ">=5.0.0",
+                "mkdirp": "0.5.1",
+                "semver": "5.3.0",
+                "shelljs": "0.5.3",
+                "yeoman-generator": "2.0.0"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.1.0.tgz",
+                    "integrity": "sha512-LUHGS/dge4ujbXMJrnihYMcL4AoOweGnw9Tp3kQuqy1Kx5c1qKjqvMJZ6nVJPMWJtKCTN72ZogH3oeSO9g9rXQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.1.0",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^4.0.0"
+                    }
+                },
+                "cross-spawn": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
+                    "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
+                    "dev": true,
+                    "requires": {
+                        "lru-cache": "^4.0.1",
+                        "shebang-command": "^1.2.0",
+                        "which": "^1.2.9"
+                    }
+                },
+                "dargs": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/dargs/-/dargs-5.1.0.tgz",
+                    "integrity": "sha1-7H6lDHhWTNNsnV7Bj2Yyn63ieCk=",
+                    "dev": true
+                },
+                "dateformat": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-2.2.0.tgz",
+                    "integrity": "sha1-QGXiATz5+5Ft39gu+1Bq1MZ2kGI=",
+                    "dev": true
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "deep-extend": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.4.2.tgz",
+                    "integrity": "sha1-SLaZwn4zS/ifEIkr5DL25MfTSn8=",
+                    "dev": true
+                },
+                "find-up": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+                    "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+                    "dev": true,
+                    "requires": {
+                        "locate-path": "^2.0.0"
+                    }
+                },
+                "globby": {
+                    "version": "6.1.0",
+                    "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
+                    "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
+                    "dev": true,
+                    "requires": {
+                        "array-union": "^1.0.1",
+                        "glob": "^7.0.3",
+                        "object-assign": "^4.0.1",
+                        "pify": "^2.0.0",
+                        "pinkie-promise": "^2.0.0"
+                    }
+                },
+                "has-flag": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
+                    "integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=",
+                    "dev": true
+                },
+                "load-json-file": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
+                    "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
+                    "dev": true,
+                    "requires": {
+                        "graceful-fs": "^4.1.2",
+                        "parse-json": "^2.2.0",
+                        "pify": "^2.0.0",
+                        "strip-bom": "^3.0.0"
+                    }
+                },
+                "locate-path": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+                    "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+                    "dev": true,
+                    "requires": {
+                        "p-locate": "^2.0.0",
+                        "path-exists": "^3.0.0"
+                    }
+                },
+                "mem-fs-editor": {
+                    "version": "3.0.2",
+                    "resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-3.0.2.tgz",
+                    "integrity": "sha1-3Qpuryu4prN3QAZ6pUnrUwEFr58=",
+                    "dev": true,
+                    "requires": {
+                        "commondir": "^1.0.1",
+                        "deep-extend": "^0.4.0",
+                        "ejs": "^2.3.1",
+                        "glob": "^7.0.3",
+                        "globby": "^6.1.0",
+                        "mkdirp": "^0.5.0",
+                        "multimatch": "^2.0.0",
+                        "rimraf": "^2.2.8",
+                        "through2": "^2.0.0",
+                        "vinyl": "^2.0.1"
+                    }
+                },
+                "p-limit": {
+                    "version": "1.3.0",
+                    "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+                    "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+                    "dev": true,
+                    "requires": {
+                        "p-try": "^1.0.0"
+                    }
+                },
+                "p-locate": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+                    "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+                    "dev": true,
+                    "requires": {
+                        "p-limit": "^1.1.0"
+                    }
+                },
+                "p-try": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+                    "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
+                    "dev": true
+                },
+                "parse-json": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
+                    "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
+                    "dev": true,
+                    "requires": {
+                        "error-ex": "^1.2.0"
+                    }
+                },
+                "path-type": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
+                    "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^2.0.0"
+                    }
+                },
+                "pify": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+                    "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
+                    "dev": true
+                },
+                "pretty-bytes": {
+                    "version": "4.0.2",
+                    "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-4.0.2.tgz",
+                    "integrity": "sha1-sr+C5zUNZcbDOqlaqlpPYyf2HNk=",
+                    "dev": true
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    },
+                    "dependencies": {
+                        "pify": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
+                            "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
+                            "dev": true
+                        }
+                    }
+                },
+                "read-pkg": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
+                    "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
+                    "dev": true,
+                    "requires": {
+                        "load-json-file": "^2.0.0",
+                        "normalize-package-data": "^2.3.2",
+                        "path-type": "^2.0.0"
+                    }
+                },
+                "read-pkg-up": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
+                    "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
+                    "dev": true,
+                    "requires": {
+                        "find-up": "^2.0.0",
+                        "read-pkg": "^2.0.0"
+                    }
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.5.3",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
+                    "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
+                    "dev": true
+                },
+                "supports-color": {
+                    "version": "4.5.0",
+                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-4.5.0.tgz",
+                    "integrity": "sha1-vnoN5ITexcXN34s9WRJQRJEvY1s=",
+                    "dev": true,
+                    "requires": {
+                        "has-flag": "^2.0.0"
+                    }
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-2.0.0.tgz",
+                    "integrity": "sha512-p7I+t+UCwZY1D3BzAXVPvkYyPkZ4Aa9snVK/3IO8alL5yqsp2gM6plq9B12Wrhne0PCH/SOQ+ifC4GPlw2tFwg==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.0.0",
+                        "chalk": "^2.1.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^5.0.1",
+                        "dargs": "^5.1.0",
+                        "dateformat": "^2.0.0",
+                        "debug": "^3.0.1",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^2.1.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.1.0",
+                        "lodash": "^4.11.1",
+                        "make-dir": "^1.0.0",
+                        "mem-fs-editor": "^3.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^4.0.2",
+                        "read-chunk": "^2.0.0",
+                        "read-pkg-up": "^2.0.0",
+                        "rimraf": "^2.2.0",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.7.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.3"
+                    },
+                    "dependencies": {
+                        "shelljs": {
+                            "version": "0.7.8",
+                            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.7.8.tgz",
+                            "integrity": "sha1-3svPh0sNHl+3LhSxZKloMEjprLM=",
+                            "dev": true,
+                            "requires": {
+                                "glob": "^7.0.0",
+                                "interpret": "^1.0.0",
+                                "rechoir": "^0.6.2"
+                            }
+                        }
+                    }
+                }
+            }
+        },
+        "generator-jhipster-file2url": {
+            "version": "0.0.0",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-file2url/-/generator-jhipster-file2url-0.0.0.tgz",
+            "integrity": "sha512-OdMmkIDYJ7qQsngcQME86TLPA6pgUH5wAkPIvNYMaaILsdnWBKtHWkKbXZ+OMBHWxZ6r6dqNRDtWwaK/oE6rMQ==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.1.0",
+                "generator-jhipster": ">=4.6.0",
+                "gulp-filter": "^5.1.0",
+                "mkdirp": "0.5.1",
+                "prettier": "^1.12.0",
+                "semver": "5.3.0",
+                "shelljs": "0.5.3",
+                "yeoman-generator": "2.0.0"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.1.0.tgz",
+                    "integrity": "sha512-LUHGS/dge4ujbXMJrnihYMcL4AoOweGnw9Tp3kQuqy1Kx5c1qKjqvMJZ6nVJPMWJtKCTN72ZogH3oeSO9g9rXQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.1.0",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^4.0.0"
+                    }
+                },
+                "cross-spawn": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
+                    "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
+                    "dev": true,
+                    "requires": {
+                        "lru-cache": "^4.0.1",
+                        "shebang-command": "^1.2.0",
+                        "which": "^1.2.9"
+                    }
+                },
+                "dargs": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/dargs/-/dargs-5.1.0.tgz",
+                    "integrity": "sha1-7H6lDHhWTNNsnV7Bj2Yyn63ieCk=",
+                    "dev": true
+                },
+                "dateformat": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-2.2.0.tgz",
+                    "integrity": "sha1-QGXiATz5+5Ft39gu+1Bq1MZ2kGI=",
+                    "dev": true
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "deep-extend": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.4.2.tgz",
+                    "integrity": "sha1-SLaZwn4zS/ifEIkr5DL25MfTSn8=",
+                    "dev": true
+                },
+                "find-up": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+                    "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+                    "dev": true,
+                    "requires": {
+                        "locate-path": "^2.0.0"
+                    }
+                },
+                "globby": {
+                    "version": "6.1.0",
+                    "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
+                    "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
+                    "dev": true,
+                    "requires": {
+                        "array-union": "^1.0.1",
+                        "glob": "^7.0.3",
+                        "object-assign": "^4.0.1",
+                        "pify": "^2.0.0",
+                        "pinkie-promise": "^2.0.0"
+                    }
+                },
+                "has-flag": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
+                    "integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=",
+                    "dev": true
+                },
+                "load-json-file": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
+                    "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
+                    "dev": true,
+                    "requires": {
+                        "graceful-fs": "^4.1.2",
+                        "parse-json": "^2.2.0",
+                        "pify": "^2.0.0",
+                        "strip-bom": "^3.0.0"
+                    }
+                },
+                "locate-path": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+                    "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+                    "dev": true,
+                    "requires": {
+                        "p-locate": "^2.0.0",
+                        "path-exists": "^3.0.0"
+                    }
+                },
+                "mem-fs-editor": {
+                    "version": "3.0.2",
+                    "resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-3.0.2.tgz",
+                    "integrity": "sha1-3Qpuryu4prN3QAZ6pUnrUwEFr58=",
+                    "dev": true,
+                    "requires": {
+                        "commondir": "^1.0.1",
+                        "deep-extend": "^0.4.0",
+                        "ejs": "^2.3.1",
+                        "glob": "^7.0.3",
+                        "globby": "^6.1.0",
+                        "mkdirp": "^0.5.0",
+                        "multimatch": "^2.0.0",
+                        "rimraf": "^2.2.8",
+                        "through2": "^2.0.0",
+                        "vinyl": "^2.0.1"
+                    }
+                },
+                "p-limit": {
+                    "version": "1.3.0",
+                    "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+                    "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+                    "dev": true,
+                    "requires": {
+                        "p-try": "^1.0.0"
+                    }
+                },
+                "p-locate": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+                    "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+                    "dev": true,
+                    "requires": {
+                        "p-limit": "^1.1.0"
+                    }
+                },
+                "p-try": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+                    "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
+                    "dev": true
+                },
+                "parse-json": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
+                    "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
+                    "dev": true,
+                    "requires": {
+                        "error-ex": "^1.2.0"
+                    }
+                },
+                "path-type": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
+                    "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^2.0.0"
+                    }
+                },
+                "pify": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+                    "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
+                    "dev": true
+                },
+                "pretty-bytes": {
+                    "version": "4.0.2",
+                    "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-4.0.2.tgz",
+                    "integrity": "sha1-sr+C5zUNZcbDOqlaqlpPYyf2HNk=",
+                    "dev": true
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    },
+                    "dependencies": {
+                        "pify": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
+                            "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
+                            "dev": true
+                        }
+                    }
+                },
+                "read-pkg": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
+                    "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
+                    "dev": true,
+                    "requires": {
+                        "load-json-file": "^2.0.0",
+                        "normalize-package-data": "^2.3.2",
+                        "path-type": "^2.0.0"
+                    }
+                },
+                "read-pkg-up": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
+                    "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
+                    "dev": true,
+                    "requires": {
+                        "find-up": "^2.0.0",
+                        "read-pkg": "^2.0.0"
+                    }
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.5.3",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
+                    "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
+                    "dev": true
+                },
+                "supports-color": {
+                    "version": "4.5.0",
+                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-4.5.0.tgz",
+                    "integrity": "sha1-vnoN5ITexcXN34s9WRJQRJEvY1s=",
+                    "dev": true,
+                    "requires": {
+                        "has-flag": "^2.0.0"
+                    }
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-2.0.0.tgz",
+                    "integrity": "sha512-p7I+t+UCwZY1D3BzAXVPvkYyPkZ4Aa9snVK/3IO8alL5yqsp2gM6plq9B12Wrhne0PCH/SOQ+ifC4GPlw2tFwg==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.0.0",
+                        "chalk": "^2.1.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^5.0.1",
+                        "dargs": "^5.1.0",
+                        "dateformat": "^2.0.0",
+                        "debug": "^3.0.1",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^2.1.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.1.0",
+                        "lodash": "^4.11.1",
+                        "make-dir": "^1.0.0",
+                        "mem-fs-editor": "^3.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^4.0.2",
+                        "read-chunk": "^2.0.0",
+                        "read-pkg-up": "^2.0.0",
+                        "rimraf": "^2.2.0",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.7.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.3"
+                    },
+                    "dependencies": {
+                        "shelljs": {
+                            "version": "0.7.8",
+                            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.7.8.tgz",
+                            "integrity": "sha1-3svPh0sNHl+3LhSxZKloMEjprLM=",
+                            "dev": true,
+                            "requires": {
+                                "glob": "^7.0.0",
+                                "interpret": "^1.0.0",
+                                "rechoir": "^0.6.2"
+                            }
+                        }
+                    }
+                }
+            }
+        },
+        "generator-jhipster-jgitver": {
+            "version": "0.1.0",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-jgitver/-/generator-jhipster-jgitver-0.1.0.tgz",
+            "integrity": "sha512-GLhzihYxVyMN+0Ypge8RzvwT3jC+SaFU2ihvp8XqbVBXECMPRcsRJA9ipvCMtO1G98ocvlw4sDHI5ySSwCtOxQ==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.4.1",
+                "generator-jhipster": "^5.7.2",
+                "global": "^4.3.2",
+                "jhipster-core": "^3.4.0",
+                "lodash": "^4.17.11",
+                "mkdirp": "0.5.1",
+                "semver": "5.3.0",
+                "shelljs": "0.5.3",
+                "yeoman-generator": "3.1.1"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.4.1",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
+                    "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.2.1",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^5.3.0"
+                    }
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    }
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.5.3",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
+                    "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
+                    "dev": true
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "3.1.1",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-3.1.1.tgz",
+                    "integrity": "sha512-ur4+vzXQEkyJNV+uBf9wLIo8gcuwRJkPyYU8CbKoXjfaVDMF0hYjO242UKK9eVx5uL2IvZAG/tLS/g7QaFdn/A==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.6.0",
+                        "chalk": "^2.3.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^6.0.5",
+                        "dargs": "^6.0.0",
+                        "dateformat": "^3.0.3",
+                        "debug": "^3.1.0",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^3.0.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.2.1",
+                        "lodash": "^4.17.10",
+                        "make-dir": "^1.1.0",
+                        "mem-fs-editor": "^5.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^5.1.0",
+                        "read-chunk": "^2.1.0",
+                        "read-pkg-up": "^4.0.0",
+                        "rimraf": "^2.6.2",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.8.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.5"
+                    },
+                    "dependencies": {
+                        "shelljs": {
+                            "version": "0.8.3",
+                            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.3.tgz",
+                            "integrity": "sha512-fc0BKlAWiLpwZljmOvAOTE/gXawtCoNrP5oaY7KIaQbbyHeQVg01pSEuEGvGh3HEdBU4baCD7wQBwADmM/7f7A==",
+                            "dev": true,
+                            "requires": {
+                                "glob": "^7.0.0",
+                                "interpret": "^1.0.0",
+                                "rechoir": "^0.6.2"
+                            }
+                        }
+                    }
+                }
+            }
+        },
+        "generator-jhipster-obfuscation-at-rest": {
+            "version": "0.3.0",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-obfuscation-at-rest/-/generator-jhipster-obfuscation-at-rest-0.3.0.tgz",
+            "integrity": "sha512-EB3ScQRThRNt+Hq7WkZR9BjlIgZVjlKiKJOM2K2VOuZMg9rO3iMD/teXlCiYlrOtzTjQkkVITE1MhCunxVV/sA==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.1.0",
+                "generator-jhipster": "^4.14.4",
+                "mkdirp": "0.5.1",
+                "semver": "5.3.0",
+                "shelljs": "0.5.3",
+                "yeoman-generator": "2.0.0"
+            },
+            "dependencies": {
+                "ansi-escapes": {
+                    "version": "1.4.0",
+                    "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-1.4.0.tgz",
+                    "integrity": "sha1-06ioOzGapneTZisT52HHkRQiMG4=",
+                    "dev": true
+                },
+                "ansi-regex": {
+                    "version": "2.1.1",
+                    "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+                    "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
+                    "dev": true
+                },
+                "async": {
+                    "version": "1.5.2",
+                    "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",
+                    "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=",
+                    "dev": true
+                },
+                "camelcase": {
+                    "version": "2.1.1",
+                    "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
+                    "integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8=",
+                    "dev": true
+                },
+                "camelcase-keys": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz",
+                    "integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
+                    "dev": true,
+                    "requires": {
+                        "camelcase": "^2.0.0",
+                        "map-obj": "^1.0.0"
+                    }
+                },
+                "chalk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.1.0.tgz",
+                    "integrity": "sha512-LUHGS/dge4ujbXMJrnihYMcL4AoOweGnw9Tp3kQuqy1Kx5c1qKjqvMJZ6nVJPMWJtKCTN72ZogH3oeSO9g9rXQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.1.0",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^4.0.0"
+                    }
+                },
+                "chardet": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",
+                    "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I=",
+                    "dev": true
+                },
+                "cli-cursor": {
+                    "version": "1.0.2",
+                    "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-1.0.2.tgz",
+                    "integrity": "sha1-ZNo/fValRBLll5S9Ytw1KV6PKYc=",
+                    "dev": true,
+                    "requires": {
+                        "restore-cursor": "^1.0.1"
+                    }
+                },
+                "cli-width": {
+                    "version": "1.1.1",
+                    "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-1.1.1.tgz",
+                    "integrity": "sha1-pNKT72frt7iNSk1CwMzwDE0eNm0=",
+                    "dev": true
+                },
+                "commander": {
+                    "version": "2.12.2",
+                    "resolved": "https://registry.npmjs.org/commander/-/commander-2.12.2.tgz",
+                    "integrity": "sha512-BFnaq5ZOGcDN7FlrtBT4xxkgIToalIIxwjxLWVJ8bGTpe1LroqMiqQXdA7ygc7CRvaYS+9zfPGFnJqFSayx+AA==",
+                    "dev": true
+                },
+                "cross-spawn": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
+                    "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
+                    "dev": true,
+                    "requires": {
+                        "lru-cache": "^4.0.1",
+                        "shebang-command": "^1.2.0",
+                        "which": "^1.2.9"
+                    }
+                },
+                "dargs": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/dargs/-/dargs-5.1.0.tgz",
+                    "integrity": "sha1-7H6lDHhWTNNsnV7Bj2Yyn63ieCk=",
+                    "dev": true
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "deep-extend": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.4.2.tgz",
+                    "integrity": "sha1-SLaZwn4zS/ifEIkr5DL25MfTSn8=",
+                    "dev": true
+                },
+                "ejs": {
+                    "version": "2.5.7",
+                    "resolved": "https://registry.npmjs.org/ejs/-/ejs-2.5.7.tgz",
+                    "integrity": "sha1-zIcsFoiArjxxiXYv1f/ACJbJUYo=",
+                    "dev": true
+                },
+                "external-editor": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",
+                    "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",
+                    "dev": true,
+                    "requires": {
+                        "chardet": "^0.4.0",
+                        "iconv-lite": "^0.4.17",
+                        "tmp": "^0.0.33"
+                    }
+                },
+                "figures": {
+                    "version": "1.7.0",
+                    "resolved": "https://registry.npmjs.org/figures/-/figures-1.7.0.tgz",
+                    "integrity": "sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=",
+                    "dev": true,
+                    "requires": {
+                        "escape-string-regexp": "^1.0.5",
+                        "object-assign": "^4.1.0"
+                    }
+                },
+                "find-up": {
+                    "version": "1.1.2",
+                    "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
+                    "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
+                    "dev": true,
+                    "requires": {
+                        "path-exists": "^2.0.0",
+                        "pinkie-promise": "^2.0.0"
+                    }
+                },
+                "generator-jhipster": {
+                    "version": "4.14.5",
+                    "resolved": "https://registry.npmjs.org/generator-jhipster/-/generator-jhipster-4.14.5.tgz",
+                    "integrity": "sha512-D9pfVeAQiDGmhZDfBMxcFx4dlAQ2sxxvt7vA3JF/CjAP4qtnl9Df0mNUQVR1z0wYkXT/tykTNuvmHXfCcO1a7Q==",
+                    "dev": true,
+                    "requires": {
+                        "chalk": "2.3.0",
+                        "cheerio": "0.22.0",
+                        "commander": "2.12.2",
+                        "didyoumean": "1.2.1",
+                        "ejs": "2.5.7",
+                        "glob": "7.1.2",
+                        "html-wiring": "1.2.0",
+                        "insight": "0.8.4",
+                        "jhipster-core": "1.4.4",
+                        "js-yaml": "3.10.0",
+                        "lodash": "4.17.4",
+                        "meow": "3.7.0",
+                        "mkdirp": "0.5.1",
+                        "opencollective": "1.0.3",
+                        "pluralize": "7.0.0",
+                        "randexp": "0.4.6",
+                        "semver": "5.4.1",
+                        "shelljs": "0.7.8",
+                        "tabtab": "2.2.2",
+                        "yeoman-environment": "2.0.5",
+                        "yeoman-generator": "2.0.1"
+                    },
+                    "dependencies": {
+                        "async": {
+                            "version": "2.6.2",
+                            "resolved": "https://registry.npmjs.org/async/-/async-2.6.2.tgz",
+                            "integrity": "sha512-H1qVYh1MYhEEFLsP97cVKqCGo7KfCyTt6uEWqsTBr9SO84oK9Uwbyd/yCW+6rKJLHksBNUVWZDAjfS+Ccx0Bbg==",
+                            "dev": true,
+                            "requires": {
+                                "lodash": "^4.17.11"
+                            },
+                            "dependencies": {
+                                "lodash": {
+                                    "version": "4.17.11",
+                                    "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",
+                                    "integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==",
+                                    "dev": true
+                                }
+                            }
+                        },
+                        "chalk": {
+                            "version": "2.3.0",
+                            "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.3.0.tgz",
+                            "integrity": "sha512-Az5zJR2CBujap2rqXGaJKaPHyJ0IrUimvYNX+ncCy8PJP4ltOGTrHUIo097ZaL2zMeKYpiCdqDvS6zdrTFok3Q==",
+                            "dev": true,
+                            "requires": {
+                                "ansi-styles": "^3.1.0",
+                                "escape-string-regexp": "^1.0.5",
+                                "supports-color": "^4.0.0"
+                            }
+                        },
+                        "find-up": {
+                            "version": "2.1.0",
+                            "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+                            "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+                            "dev": true,
+                            "requires": {
+                                "locate-path": "^2.0.0"
+                            }
+                        },
+                        "load-json-file": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
+                            "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
+                            "dev": true,
+                            "requires": {
+                                "graceful-fs": "^4.1.2",
+                                "parse-json": "^2.2.0",
+                                "pify": "^2.0.0",
+                                "strip-bom": "^3.0.0"
+                            }
+                        },
+                        "path-type": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
+                            "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
+                            "dev": true,
+                            "requires": {
+                                "pify": "^2.0.0"
+                            }
+                        },
+                        "read-pkg": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
+                            "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
+                            "dev": true,
+                            "requires": {
+                                "load-json-file": "^2.0.0",
+                                "normalize-package-data": "^2.3.2",
+                                "path-type": "^2.0.0"
+                            }
+                        },
+                        "read-pkg-up": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
+                            "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
+                            "dev": true,
+                            "requires": {
+                                "find-up": "^2.0.0",
+                                "read-pkg": "^2.0.0"
+                            }
+                        },
+                        "run-async": {
+                            "version": "2.3.0",
+                            "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",
+                            "integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
+                            "dev": true,
+                            "requires": {
+                                "is-promise": "^2.1.0"
+                            }
+                        },
+                        "semver": {
+                            "version": "5.4.1",
+                            "resolved": "https://registry.npmjs.org/semver/-/semver-5.4.1.tgz",
+                            "integrity": "sha512-WfG/X9+oATh81XtllIo/I8gOiY9EXRdv1cQdyykeXK17YcUW3EXUAi2To4pcH6nZtJPr7ZOpM5OMyWJZm+8Rsg==",
+                            "dev": true
+                        },
+                        "shelljs": {
+                            "version": "0.7.8",
+                            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.7.8.tgz",
+                            "integrity": "sha1-3svPh0sNHl+3LhSxZKloMEjprLM=",
+                            "dev": true,
+                            "requires": {
+                                "glob": "^7.0.0",
+                                "interpret": "^1.0.0",
+                                "rechoir": "^0.6.2"
+                            }
+                        },
+                        "strip-bom": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
+                            "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
+                            "dev": true
+                        },
+                        "yeoman-generator": {
+                            "version": "2.0.1",
+                            "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-2.0.1.tgz",
+                            "integrity": "sha512-28aWklXHNWwlH1OcRNx1f/oIyAkTBhvzAgpIt5CpQsTAZR4ZDfei83jpNGN46OSkZnZ3enRjFWJqSGWAph04gQ==",
+                            "dev": true,
+                            "requires": {
+                                "async": "^2.5.0",
+                                "chalk": "^2.1.0",
+                                "cli-table": "^0.3.1",
+                                "cross-spawn": "^5.1.0",
+                                "dargs": "^5.1.0",
+                                "dateformat": "^3.0.2",
+                                "debug": "^3.1.0",
+                                "detect-conflict": "^1.0.0",
+                                "error": "^7.0.2",
+                                "find-up": "^2.1.0",
+                                "github-username": "^4.0.0",
+                                "istextorbinary": "^2.1.0",
+                                "lodash": "^4.11.1",
+                                "make-dir": "^1.0.0",
+                                "mem-fs-editor": "^3.0.0",
+                                "minimist": "^1.2.0",
+                                "pretty-bytes": "^4.0.2",
+                                "read-chunk": "^2.1.0",
+                                "read-pkg-up": "^2.0.0",
+                                "rimraf": "^2.6.2",
+                                "run-async": "^2.0.0",
+                                "shelljs": "^0.7.8",
+                                "text-table": "^0.2.0",
+                                "through2": "^2.0.0",
+                                "yeoman-environment": "^2.0.3"
+                            }
+                        }
+                    }
+                },
+                "glob": {
+                    "version": "7.1.2",
+                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
+                    "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
+                    "dev": true,
+                    "requires": {
+                        "fs.realpath": "^1.0.0",
+                        "inflight": "^1.0.4",
+                        "inherits": "2",
+                        "minimatch": "^3.0.4",
+                        "once": "^1.3.0",
+                        "path-is-absolute": "^1.0.0"
+                    }
+                },
+                "globby": {
+                    "version": "6.1.0",
+                    "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
+                    "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
+                    "dev": true,
+                    "requires": {
+                        "array-union": "^1.0.1",
+                        "glob": "^7.0.3",
+                        "object-assign": "^4.0.1",
+                        "pify": "^2.0.0",
+                        "pinkie-promise": "^2.0.0"
+                    }
+                },
+                "has-flag": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
+                    "integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=",
+                    "dev": true
+                },
+                "indent-string": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz",
+                    "integrity": "sha1-ji1INIdCEhtKghi3oTfppSBJ3IA=",
+                    "dev": true,
+                    "requires": {
+                        "repeating": "^2.0.0"
+                    }
+                },
+                "inquirer": {
+                    "version": "0.10.1",
+                    "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-0.10.1.tgz",
+                    "integrity": "sha1-6iXkzmnKFF4FyZ5G3P7AXkASWUo=",
+                    "dev": true,
+                    "requires": {
+                        "ansi-escapes": "^1.1.0",
+                        "ansi-regex": "^2.0.0",
+                        "chalk": "^1.0.0",
+                        "cli-cursor": "^1.0.1",
+                        "cli-width": "^1.0.1",
+                        "figures": "^1.3.5",
+                        "lodash": "^3.3.1",
+                        "readline2": "^1.0.1",
+                        "run-async": "^0.1.0",
+                        "rx-lite": "^3.1.2",
+                        "strip-ansi": "^3.0.0",
+                        "through": "^2.3.6"
+                    },
+                    "dependencies": {
+                        "ansi-styles": {
+                            "version": "2.2.1",
+                            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+                            "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
+                            "dev": true
+                        },
+                        "chalk": {
+                            "version": "1.1.3",
+                            "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+                            "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+                            "dev": true,
+                            "requires": {
+                                "ansi-styles": "^2.2.1",
+                                "escape-string-regexp": "^1.0.2",
+                                "has-ansi": "^2.0.0",
+                                "strip-ansi": "^3.0.0",
+                                "supports-color": "^2.0.0"
+                            }
+                        },
+                        "lodash": {
+                            "version": "3.10.1",
+                            "resolved": "https://registry.npmjs.org/lodash/-/lodash-3.10.1.tgz",
+                            "integrity": "sha1-W/Rejkm6QYnhfUgnid/RW9FAt7Y=",
+                            "dev": true
+                        },
+                        "supports-color": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+                            "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
+                            "dev": true
+                        }
+                    }
+                },
+                "insight": {
+                    "version": "0.8.4",
+                    "resolved": "https://registry.npmjs.org/insight/-/insight-0.8.4.tgz",
+                    "integrity": "sha1-ZxyvZbR8n+jD0bMgbPRbshG3WIQ=",
+                    "dev": true,
+                    "requires": {
+                        "async": "^1.4.2",
+                        "chalk": "^1.0.0",
+                        "configstore": "^1.0.0",
+                        "inquirer": "^0.10.0",
+                        "lodash.debounce": "^3.0.1",
+                        "object-assign": "^4.0.1",
+                        "os-name": "^1.0.0",
+                        "request": "^2.74.0",
+                        "tough-cookie": "^2.0.0",
+                        "uuid": "^3.0.0"
+                    },
+                    "dependencies": {
+                        "ansi-styles": {
+                            "version": "2.2.1",
+                            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+                            "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
+                            "dev": true
+                        },
+                        "chalk": {
+                            "version": "1.1.3",
+                            "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+                            "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+                            "dev": true,
+                            "requires": {
+                                "ansi-styles": "^2.2.1",
+                                "escape-string-regexp": "^1.0.2",
+                                "has-ansi": "^2.0.0",
+                                "strip-ansi": "^3.0.0",
+                                "supports-color": "^2.0.0"
+                            }
+                        },
+                        "supports-color": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+                            "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
+                            "dev": true
+                        }
+                    }
+                },
+                "jhipster-core": {
+                    "version": "1.4.4",
+                    "resolved": "https://registry.npmjs.org/jhipster-core/-/jhipster-core-1.4.4.tgz",
+                    "integrity": "sha512-5cbUGesqTgM+adJqTE5QYNSc9Zo/97zYaDIcMgiGFkvf4Ke4H4F3+k0BuPxwSpFarQp5xyczyrmSOvBXXcB4ww==",
+                    "dev": true,
+                    "requires": {
+                        "lodash": "4.17.4",
+                        "winston": "2.4.0"
+                    }
+                },
+                "js-yaml": {
+                    "version": "3.10.0",
+                    "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.10.0.tgz",
+                    "integrity": "sha512-O2v52ffjLa9VeM43J4XocZE//WT9N0IiwDa3KSHH7Tu8CtH+1qM8SIZvnsTh6v+4yFy5KUY3BHUVwjpfAWsjIA==",
+                    "dev": true,
+                    "requires": {
+                        "argparse": "^1.0.7",
+                        "esprima": "^4.0.0"
+                    }
+                },
+                "load-json-file": {
+                    "version": "1.1.0",
+                    "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
+                    "integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
+                    "dev": true,
+                    "requires": {
+                        "graceful-fs": "^4.1.2",
+                        "parse-json": "^2.2.0",
+                        "pify": "^2.0.0",
+                        "pinkie-promise": "^2.0.0",
+                        "strip-bom": "^2.0.0"
+                    }
+                },
+                "locate-path": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+                    "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+                    "dev": true,
+                    "requires": {
+                        "p-locate": "^2.0.0",
+                        "path-exists": "^3.0.0"
+                    },
+                    "dependencies": {
+                        "path-exists": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
+                            "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
+                            "dev": true
+                        }
+                    }
+                },
+                "lodash": {
+                    "version": "4.17.4",
+                    "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
+                    "integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
+                    "dev": true
+                },
+                "lodash.debounce": {
+                    "version": "3.1.1",
+                    "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-3.1.1.tgz",
+                    "integrity": "sha1-gSIRw3ipTMKdWqTjNGzwv846ffU=",
+                    "dev": true,
+                    "requires": {
+                        "lodash._getnative": "^3.0.0"
+                    }
+                },
+                "map-obj": {
+                    "version": "1.0.1",
+                    "resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
+                    "integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=",
+                    "dev": true
+                },
+                "mem-fs-editor": {
+                    "version": "3.0.2",
+                    "resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-3.0.2.tgz",
+                    "integrity": "sha1-3Qpuryu4prN3QAZ6pUnrUwEFr58=",
+                    "dev": true,
+                    "requires": {
+                        "commondir": "^1.0.1",
+                        "deep-extend": "^0.4.0",
+                        "ejs": "^2.3.1",
+                        "glob": "^7.0.3",
+                        "globby": "^6.1.0",
+                        "mkdirp": "^0.5.0",
+                        "multimatch": "^2.0.0",
+                        "rimraf": "^2.2.8",
+                        "through2": "^2.0.0",
+                        "vinyl": "^2.0.1"
+                    }
+                },
+                "meow": {
+                    "version": "3.7.0",
+                    "resolved": "https://registry.npmjs.org/meow/-/meow-3.7.0.tgz",
+                    "integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
+                    "dev": true,
+                    "requires": {
+                        "camelcase-keys": "^2.0.0",
+                        "decamelize": "^1.1.2",
+                        "loud-rejection": "^1.0.0",
+                        "map-obj": "^1.0.1",
+                        "minimist": "^1.1.3",
+                        "normalize-package-data": "^2.3.4",
+                        "object-assign": "^4.0.1",
+                        "read-pkg-up": "^1.0.1",
+                        "redent": "^1.0.0",
+                        "trim-newlines": "^1.0.0"
+                    }
+                },
+                "onetime": {
+                    "version": "1.1.0",
+                    "resolved": "https://registry.npmjs.org/onetime/-/onetime-1.1.0.tgz",
+                    "integrity": "sha1-ofeDj4MUxRbwXs78vEzP4EtO14k=",
+                    "dev": true
+                },
+                "os-name": {
+                    "version": "1.0.3",
+                    "resolved": "https://registry.npmjs.org/os-name/-/os-name-1.0.3.tgz",
+                    "integrity": "sha1-GzefZINa98Wn9JizV8uVIVwVnt8=",
+                    "dev": true,
+                    "requires": {
+                        "osx-release": "^1.0.0",
+                        "win-release": "^1.0.0"
+                    }
+                },
+                "p-limit": {
+                    "version": "1.3.0",
+                    "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+                    "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+                    "dev": true,
+                    "requires": {
+                        "p-try": "^1.0.0"
+                    }
+                },
+                "p-locate": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+                    "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+                    "dev": true,
+                    "requires": {
+                        "p-limit": "^1.1.0"
+                    }
+                },
+                "p-try": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+                    "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
+                    "dev": true
+                },
+                "parse-json": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
+                    "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
+                    "dev": true,
+                    "requires": {
+                        "error-ex": "^1.2.0"
+                    }
+                },
+                "path-exists": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
+                    "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
+                    "dev": true,
+                    "requires": {
+                        "pinkie-promise": "^2.0.0"
+                    }
+                },
+                "path-type": {
+                    "version": "1.1.0",
+                    "resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
+                    "integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
+                    "dev": true,
+                    "requires": {
+                        "graceful-fs": "^4.1.2",
+                        "pify": "^2.0.0",
+                        "pinkie-promise": "^2.0.0"
+                    }
+                },
+                "pify": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+                    "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
+                    "dev": true
+                },
+                "pretty-bytes": {
+                    "version": "4.0.2",
+                    "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-4.0.2.tgz",
+                    "integrity": "sha1-sr+C5zUNZcbDOqlaqlpPYyf2HNk=",
+                    "dev": true
+                },
+                "randexp": {
+                    "version": "0.4.6",
+                    "resolved": "https://registry.npmjs.org/randexp/-/randexp-0.4.6.tgz",
+                    "integrity": "sha512-80WNmd9DA0tmZrw9qQa62GPPWfuXJknrmVmLcxvq4uZBdYqb1wYoKTmnlGUchvVWe0XiLupYkBoXVOxz3C8DYQ==",
+                    "dev": true,
+                    "requires": {
+                        "discontinuous-range": "1.0.0",
+                        "ret": "~0.1.10"
+                    }
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    },
+                    "dependencies": {
+                        "pify": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
+                            "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
+                            "dev": true
+                        }
+                    }
+                },
+                "read-pkg": {
+                    "version": "1.1.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
+                    "integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
+                    "dev": true,
+                    "requires": {
+                        "load-json-file": "^1.0.0",
+                        "normalize-package-data": "^2.3.2",
+                        "path-type": "^1.0.0"
+                    }
+                },
+                "read-pkg-up": {
+                    "version": "1.0.1",
+                    "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
+                    "integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
+                    "dev": true,
+                    "requires": {
+                        "find-up": "^1.0.0",
+                        "read-pkg": "^1.0.0"
+                    }
+                },
+                "redent": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/redent/-/redent-1.0.0.tgz",
+                    "integrity": "sha1-z5Fqsf1fHxbfsggi3W7H9zDCr94=",
+                    "dev": true,
+                    "requires": {
+                        "indent-string": "^2.1.0",
+                        "strip-indent": "^1.0.1"
+                    }
+                },
+                "restore-cursor": {
+                    "version": "1.0.1",
+                    "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-1.0.1.tgz",
+                    "integrity": "sha1-NGYfRohjJ/7SmRR5FSJS35LapUE=",
+                    "dev": true,
+                    "requires": {
+                        "exit-hook": "^1.0.0",
+                        "onetime": "^1.0.0"
+                    }
+                },
+                "run-async": {
+                    "version": "0.1.0",
+                    "resolved": "https://registry.npmjs.org/run-async/-/run-async-0.1.0.tgz",
+                    "integrity": "sha1-yK1KXhEGYeQCp9IbUw4AnyX444k=",
+                    "dev": true,
+                    "requires": {
+                        "once": "^1.3.0"
+                    }
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.5.3",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
+                    "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
+                    "dev": true
+                },
+                "strip-ansi": {
+                    "version": "3.0.1",
+                    "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+                    "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+                    "dev": true,
+                    "requires": {
+                        "ansi-regex": "^2.0.0"
+                    }
+                },
+                "strip-bom": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
+                    "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
+                    "dev": true,
+                    "requires": {
+                        "is-utf8": "^0.2.0"
+                    }
+                },
+                "strip-indent": {
+                    "version": "1.0.1",
+                    "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz",
+                    "integrity": "sha1-DHlipq3vp7vUrDZkYKY4VSrhoKI=",
+                    "dev": true,
+                    "requires": {
+                        "get-stdin": "^4.0.1"
+                    }
+                },
+                "supports-color": {
+                    "version": "4.5.0",
+                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-4.5.0.tgz",
+                    "integrity": "sha1-vnoN5ITexcXN34s9WRJQRJEvY1s=",
+                    "dev": true,
+                    "requires": {
+                        "has-flag": "^2.0.0"
+                    }
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "trim-newlines": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz",
+                    "integrity": "sha1-WIeWa7WCpFA6QetST301ARgVphM=",
+                    "dev": true
+                },
+                "winston": {
+                    "version": "2.4.0",
+                    "resolved": "https://registry.npmjs.org/winston/-/winston-2.4.0.tgz",
+                    "integrity": "sha1-gIBQuT1SZh7Z+2wms/DIJnCLCu4=",
+                    "dev": true,
+                    "requires": {
+                        "async": "~1.0.0",
+                        "colors": "1.0.x",
+                        "cycle": "1.0.x",
+                        "eyes": "0.1.x",
+                        "isstream": "0.1.x",
+                        "stack-trace": "0.0.x"
+                    },
+                    "dependencies": {
+                        "async": {
+                            "version": "1.0.0",
+                            "resolved": "https://registry.npmjs.org/async/-/async-1.0.0.tgz",
+                            "integrity": "sha1-+PwEyjoTeErenhZBr5hXjPvWR6k=",
+                            "dev": true
+                        }
+                    }
+                },
+                "yeoman-environment": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/yeoman-environment/-/yeoman-environment-2.0.5.tgz",
+                    "integrity": "sha512-6/W7/B54OPHJXob0n0+pmkwFsirC8cokuQkPSmT/D0lCcSxkKtg/BA6ZnjUBIwjuGqmw3DTrT4en++htaUju5g==",
+                    "dev": true,
+                    "requires": {
+                        "chalk": "^2.1.0",
+                        "debug": "^3.1.0",
+                        "diff": "^3.3.1",
+                        "escape-string-regexp": "^1.0.2",
+                        "globby": "^6.1.0",
+                        "grouped-queue": "^0.3.3",
+                        "inquirer": "^3.3.0",
+                        "is-scoped": "^1.0.0",
+                        "lodash": "^4.17.4",
+                        "log-symbols": "^2.1.0",
+                        "mem-fs": "^1.1.0",
+                        "text-table": "^0.2.0",
+                        "untildify": "^3.0.2"
+                    },
+                    "dependencies": {
+                        "ansi-escapes": {
+                            "version": "3.2.0",
+                            "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
+                            "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
+                            "dev": true
+                        },
+                        "ansi-regex": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
+                            "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
+                            "dev": true
+                        },
+                        "cli-cursor": {
+                            "version": "2.1.0",
+                            "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
+                            "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
+                            "dev": true,
+                            "requires": {
+                                "restore-cursor": "^2.0.0"
+                            }
+                        },
+                        "cli-width": {
+                            "version": "2.2.0",
+                            "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
+                            "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=",
+                            "dev": true
+                        },
+                        "figures": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
+                            "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
+                            "dev": true,
+                            "requires": {
+                                "escape-string-regexp": "^1.0.5"
+                            }
+                        },
+                        "inquirer": {
+                            "version": "3.3.0",
+                            "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-3.3.0.tgz",
+                            "integrity": "sha512-h+xtnyk4EwKvFWHrUYsWErEVR+igKtLdchu+o0Z1RL7VU/jVMFbYir2bp6bAj8efFNxWqHX0dIss6fJQ+/+qeQ==",
+                            "dev": true,
+                            "requires": {
+                                "ansi-escapes": "^3.0.0",
+                                "chalk": "^2.0.0",
+                                "cli-cursor": "^2.1.0",
+                                "cli-width": "^2.0.0",
+                                "external-editor": "^2.0.4",
+                                "figures": "^2.0.0",
+                                "lodash": "^4.3.0",
+                                "mute-stream": "0.0.7",
+                                "run-async": "^2.2.0",
+                                "rx-lite": "^4.0.8",
+                                "rx-lite-aggregates": "^4.0.8",
+                                "string-width": "^2.1.0",
+                                "strip-ansi": "^4.0.0",
+                                "through": "^2.3.6"
+                            }
+                        },
+                        "onetime": {
+                            "version": "2.0.1",
+                            "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
+                            "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
+                            "dev": true,
+                            "requires": {
+                                "mimic-fn": "^1.0.0"
+                            }
+                        },
+                        "restore-cursor": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
+                            "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
+                            "dev": true,
+                            "requires": {
+                                "onetime": "^2.0.0",
+                                "signal-exit": "^3.0.2"
+                            }
+                        },
+                        "run-async": {
+                            "version": "2.3.0",
+                            "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",
+                            "integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
+                            "dev": true,
+                            "requires": {
+                                "is-promise": "^2.1.0"
+                            }
+                        },
+                        "rx-lite": {
+                            "version": "4.0.8",
+                            "resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-4.0.8.tgz",
+                            "integrity": "sha1-Cx4Rr4vESDbwSmQH6S2kJGe3lEQ=",
+                            "dev": true
+                        },
+                        "strip-ansi": {
+                            "version": "4.0.0",
+                            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+                            "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+                            "dev": true,
+                            "requires": {
+                                "ansi-regex": "^3.0.0"
+                            }
+                        }
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-2.0.0.tgz",
+                    "integrity": "sha512-p7I+t+UCwZY1D3BzAXVPvkYyPkZ4Aa9snVK/3IO8alL5yqsp2gM6plq9B12Wrhne0PCH/SOQ+ifC4GPlw2tFwg==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.0.0",
+                        "chalk": "^2.1.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^5.0.1",
+                        "dargs": "^5.1.0",
+                        "dateformat": "^2.0.0",
+                        "debug": "^3.0.1",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^2.1.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.1.0",
+                        "lodash": "^4.11.1",
+                        "make-dir": "^1.0.0",
+                        "mem-fs-editor": "^3.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^4.0.2",
+                        "read-chunk": "^2.0.0",
+                        "read-pkg-up": "^2.0.0",
+                        "rimraf": "^2.2.0",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.7.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.3"
+                    },
+                    "dependencies": {
+                        "async": {
+                            "version": "2.6.2",
+                            "resolved": "https://registry.npmjs.org/async/-/async-2.6.2.tgz",
+                            "integrity": "sha512-H1qVYh1MYhEEFLsP97cVKqCGo7KfCyTt6uEWqsTBr9SO84oK9Uwbyd/yCW+6rKJLHksBNUVWZDAjfS+Ccx0Bbg==",
+                            "dev": true,
+                            "requires": {
+                                "lodash": "^4.17.11"
+                            },
+                            "dependencies": {
+                                "lodash": {
+                                    "version": "4.17.11",
+                                    "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",
+                                    "integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==",
+                                    "dev": true
+                                }
+                            }
+                        },
+                        "dateformat": {
+                            "version": "2.2.0",
+                            "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-2.2.0.tgz",
+                            "integrity": "sha1-QGXiATz5+5Ft39gu+1Bq1MZ2kGI=",
+                            "dev": true
+                        },
+                        "find-up": {
+                            "version": "2.1.0",
+                            "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+                            "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+                            "dev": true,
+                            "requires": {
+                                "locate-path": "^2.0.0"
+                            }
+                        },
+                        "load-json-file": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
+                            "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
+                            "dev": true,
+                            "requires": {
+                                "graceful-fs": "^4.1.2",
+                                "parse-json": "^2.2.0",
+                                "pify": "^2.0.0",
+                                "strip-bom": "^3.0.0"
+                            }
+                        },
+                        "path-type": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
+                            "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
+                            "dev": true,
+                            "requires": {
+                                "pify": "^2.0.0"
+                            }
+                        },
+                        "read-pkg": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
+                            "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
+                            "dev": true,
+                            "requires": {
+                                "load-json-file": "^2.0.0",
+                                "normalize-package-data": "^2.3.2",
+                                "path-type": "^2.0.0"
+                            }
+                        },
+                        "read-pkg-up": {
+                            "version": "2.0.0",
+                            "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
+                            "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
+                            "dev": true,
+                            "requires": {
+                                "find-up": "^2.0.0",
+                                "read-pkg": "^2.0.0"
+                            }
+                        },
+                        "run-async": {
+                            "version": "2.3.0",
+                            "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",
+                            "integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
+                            "dev": true,
+                            "requires": {
+                                "is-promise": "^2.1.0"
+                            }
+                        },
+                        "shelljs": {
+                            "version": "0.7.8",
+                            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.7.8.tgz",
+                            "integrity": "sha1-3svPh0sNHl+3LhSxZKloMEjprLM=",
+                            "dev": true,
+                            "requires": {
+                                "glob": "^7.0.0",
+                                "interpret": "^1.0.0",
+                                "rechoir": "^0.6.2"
+                            }
+                        },
+                        "strip-bom": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
+                            "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
+                            "dev": true
+                        }
+                    }
+                }
+            }
+        },
+        "generator-jhipster-spring-cloud-stream": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-spring-cloud-stream/-/generator-jhipster-spring-cloud-stream-1.0.0.tgz",
+            "integrity": "sha512-8+bwqhh+sQa12x917Kn+2bB6JRMTF2PU2Ezvw97fuUfBXTTzD86A8zB0qpqPnZEBa/ZluuGjlLW5zbPCwMaUsQ==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.4.1",
+                "fs-extra": "7.0.0",
+                "generator-jhipster": ">=5.0.0",
+                "js-yaml": "3.12.0",
+                "lodash": "4.17.11",
+                "mkdirp": "0.5.1",
+                "semver": "5.6.0",
+                "shelljs": "0.8.2",
+                "yeoman-generator": "3.1.1"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.4.1",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
+                    "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.2.1",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^5.3.0"
+                    }
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "fs-extra": {
+                    "version": "7.0.0",
+                    "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.0.tgz",
+                    "integrity": "sha512-EglNDLRpmaTWiD/qraZn6HREAEAHJcJOmxNEYwq6xeMKnVMAy3GUcFB+wXt2C6k4CNvB/mP1y/U3dzvKKj5OtQ==",
+                    "dev": true,
+                    "requires": {
+                        "graceful-fs": "^4.1.2",
+                        "jsonfile": "^4.0.0",
+                        "universalify": "^0.1.0"
+                    }
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    }
+                },
+                "shelljs": {
+                    "version": "0.8.2",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.2.tgz",
+                    "integrity": "sha512-pRXeNrCA2Wd9itwhvLp5LZQvPJ0wU6bcjaTMywHHGX5XWhVN2nzSu7WV0q+oUY7mGK3mgSkDDzP3MgjqdyIgbQ==",
+                    "dev": true,
+                    "requires": {
+                        "glob": "^7.0.0",
+                        "interpret": "^1.0.0",
+                        "rechoir": "^0.6.2"
+                    }
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "3.1.1",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-3.1.1.tgz",
+                    "integrity": "sha512-ur4+vzXQEkyJNV+uBf9wLIo8gcuwRJkPyYU8CbKoXjfaVDMF0hYjO242UKK9eVx5uL2IvZAG/tLS/g7QaFdn/A==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.6.0",
+                        "chalk": "^2.3.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^6.0.5",
+                        "dargs": "^6.0.0",
+                        "dateformat": "^3.0.3",
+                        "debug": "^3.1.0",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^3.0.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.2.1",
+                        "lodash": "^4.17.10",
+                        "make-dir": "^1.1.0",
+                        "mem-fs-editor": "^5.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^5.1.0",
+                        "read-chunk": "^2.1.0",
+                        "read-pkg-up": "^4.0.0",
+                        "rimraf": "^2.6.2",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.8.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.5"
+                    }
+                }
+            }
+        },
+        "generator-jhipster-standalone-profile": {
+            "version": "2.3.0",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-standalone-profile/-/generator-jhipster-standalone-profile-2.3.0.tgz",
+            "integrity": "sha512-9PF1PuDISGe/pXB4xVPY36ggL6dr/NSDaK6IJ6Our5NuLcdDkQcoSbzLqWeis6wCppqY4IQAOF0KEtHlJv9dfQ==",
+            "dev": true,
+            "requires": {
+                "chalk": "^2.4.1",
+                "generator-jhipster": ">=5.0.0",
+                "yeoman-generator": "^3.2.0"
+            }
+        },
+        "generator-jhipster-swagger-cli": {
+            "version": "3.0.1",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-swagger-cli/-/generator-jhipster-swagger-cli-3.0.1.tgz",
+            "integrity": "sha512-1GJTmqUdm8rOG+qgnjHPVRdjMSIkFWQeWCfUa+HaQH48gJO9/6VD64Cj+dceZeArWEp2b575OGHZKMtuqRW1KA==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.1.0",
+                "generator-jhipster": ">=5.0.0",
+                "mkdirp": "0.5.1",
+                "path": "0.12.7",
+                "semver": "5.3.0",
+                "shelljs": "0.7.5",
+                "sync-request": "6.0.0",
+                "underscore.string": "3.3.4",
+                "yeoman-generator": "2.0.0"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.1.0.tgz",
+                    "integrity": "sha512-LUHGS/dge4ujbXMJrnihYMcL4AoOweGnw9Tp3kQuqy1Kx5c1qKjqvMJZ6nVJPMWJtKCTN72ZogH3oeSO9g9rXQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.1.0",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^4.0.0"
+                    }
+                },
+                "cross-spawn": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
+                    "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
+                    "dev": true,
+                    "requires": {
+                        "lru-cache": "^4.0.1",
+                        "shebang-command": "^1.2.0",
+                        "which": "^1.2.9"
+                    }
+                },
+                "dargs": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/dargs/-/dargs-5.1.0.tgz",
+                    "integrity": "sha1-7H6lDHhWTNNsnV7Bj2Yyn63ieCk=",
+                    "dev": true
+                },
+                "dateformat": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-2.2.0.tgz",
+                    "integrity": "sha1-QGXiATz5+5Ft39gu+1Bq1MZ2kGI=",
+                    "dev": true
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "deep-extend": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.4.2.tgz",
+                    "integrity": "sha1-SLaZwn4zS/ifEIkr5DL25MfTSn8=",
+                    "dev": true
+                },
+                "find-up": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+                    "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+                    "dev": true,
+                    "requires": {
+                        "locate-path": "^2.0.0"
+                    }
+                },
+                "globby": {
+                    "version": "6.1.0",
+                    "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
+                    "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
+                    "dev": true,
+                    "requires": {
+                        "array-union": "^1.0.1",
+                        "glob": "^7.0.3",
+                        "object-assign": "^4.0.1",
+                        "pify": "^2.0.0",
+                        "pinkie-promise": "^2.0.0"
+                    }
+                },
+                "has-flag": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
+                    "integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=",
+                    "dev": true
+                },
+                "load-json-file": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
+                    "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
+                    "dev": true,
+                    "requires": {
+                        "graceful-fs": "^4.1.2",
+                        "parse-json": "^2.2.0",
+                        "pify": "^2.0.0",
+                        "strip-bom": "^3.0.0"
+                    }
+                },
+                "locate-path": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+                    "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+                    "dev": true,
+                    "requires": {
+                        "p-locate": "^2.0.0",
+                        "path-exists": "^3.0.0"
+                    }
+                },
+                "mem-fs-editor": {
+                    "version": "3.0.2",
+                    "resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-3.0.2.tgz",
+                    "integrity": "sha1-3Qpuryu4prN3QAZ6pUnrUwEFr58=",
+                    "dev": true,
+                    "requires": {
+                        "commondir": "^1.0.1",
+                        "deep-extend": "^0.4.0",
+                        "ejs": "^2.3.1",
+                        "glob": "^7.0.3",
+                        "globby": "^6.1.0",
+                        "mkdirp": "^0.5.0",
+                        "multimatch": "^2.0.0",
+                        "rimraf": "^2.2.8",
+                        "through2": "^2.0.0",
+                        "vinyl": "^2.0.1"
+                    }
+                },
+                "p-limit": {
+                    "version": "1.3.0",
+                    "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+                    "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+                    "dev": true,
+                    "requires": {
+                        "p-try": "^1.0.0"
+                    }
+                },
+                "p-locate": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+                    "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+                    "dev": true,
+                    "requires": {
+                        "p-limit": "^1.1.0"
+                    }
+                },
+                "p-try": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+                    "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
+                    "dev": true
+                },
+                "parse-json": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
+                    "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
+                    "dev": true,
+                    "requires": {
+                        "error-ex": "^1.2.0"
+                    }
+                },
+                "path-type": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
+                    "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^2.0.0"
+                    }
+                },
+                "pify": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+                    "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
+                    "dev": true
+                },
+                "pretty-bytes": {
+                    "version": "4.0.2",
+                    "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-4.0.2.tgz",
+                    "integrity": "sha1-sr+C5zUNZcbDOqlaqlpPYyf2HNk=",
+                    "dev": true
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    },
+                    "dependencies": {
+                        "pify": {
+                            "version": "3.0.0",
+                            "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
+                            "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
+                            "dev": true
+                        }
+                    }
+                },
+                "read-pkg": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
+                    "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
+                    "dev": true,
+                    "requires": {
+                        "load-json-file": "^2.0.0",
+                        "normalize-package-data": "^2.3.2",
+                        "path-type": "^2.0.0"
+                    }
+                },
+                "read-pkg-up": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
+                    "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
+                    "dev": true,
+                    "requires": {
+                        "find-up": "^2.0.0",
+                        "read-pkg": "^2.0.0"
+                    }
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.7.5",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.7.5.tgz",
+                    "integrity": "sha1-Lu96UKIeHM832gDfdn7GnjCtBnU=",
+                    "dev": true,
+                    "requires": {
+                        "glob": "^7.0.0",
+                        "interpret": "^1.0.0",
+                        "rechoir": "^0.6.2"
+                    }
+                },
+                "supports-color": {
+                    "version": "4.5.0",
+                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-4.5.0.tgz",
+                    "integrity": "sha1-vnoN5ITexcXN34s9WRJQRJEvY1s=",
+                    "dev": true,
+                    "requires": {
+                        "has-flag": "^2.0.0"
+                    }
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-2.0.0.tgz",
+                    "integrity": "sha512-p7I+t+UCwZY1D3BzAXVPvkYyPkZ4Aa9snVK/3IO8alL5yqsp2gM6plq9B12Wrhne0PCH/SOQ+ifC4GPlw2tFwg==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.0.0",
+                        "chalk": "^2.1.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^5.0.1",
+                        "dargs": "^5.1.0",
+                        "dateformat": "^2.0.0",
+                        "debug": "^3.0.1",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^2.1.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.1.0",
+                        "lodash": "^4.11.1",
+                        "make-dir": "^1.0.0",
+                        "mem-fs-editor": "^3.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^4.0.2",
+                        "read-chunk": "^2.0.0",
+                        "read-pkg-up": "^2.0.0",
+                        "rimraf": "^2.2.0",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.7.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.3"
+                    }
+                }
+            }
+        },
+        "generator-jhipster-translation": {
+            "version": "1.0.4",
+            "resolved": "https://registry.npmjs.org/generator-jhipster-translation/-/generator-jhipster-translation-1.0.4.tgz",
+            "integrity": "sha512-IdTD/Qi8gNXdr8cXzFqYBz3g2yaf2vXU/pNZwxPxjFJgG8NWeaRXLpRAOzRoZ67NPPnIRzkHsnyZPgvIpXyhew==",
+            "dev": true,
+            "requires": {
+                "chalk": "2.4.1",
+                "fs": "0.0.1-security",
+                "generator-jhipster": ">=5.0.0",
+                "google-translate": "^2.2.0",
+                "mkdirp": "0.5.1",
+                "semver": "5.3.0",
+                "shelljs": "0.5.3",
+                "yeoman-generator": "3.1.1"
+            },
+            "dependencies": {
+                "chalk": {
+                    "version": "2.4.1",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
+                    "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^3.2.1",
+                        "escape-string-regexp": "^1.0.5",
+                        "supports-color": "^5.3.0"
+                    }
+                },
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                },
+                "read-chunk": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-2.1.0.tgz",
+                    "integrity": "sha1-agTAkoAF7Z1C4aasVgDhnLx/9lU=",
+                    "dev": true,
+                    "requires": {
+                        "pify": "^3.0.0",
+                        "safe-buffer": "^5.1.1"
+                    }
+                },
+                "semver": {
+                    "version": "5.3.0",
+                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
+                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
+                    "dev": true
+                },
+                "shelljs": {
+                    "version": "0.5.3",
+                    "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
+                    "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
+                    "dev": true
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "yeoman-generator": {
+                    "version": "3.1.1",
+                    "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-3.1.1.tgz",
+                    "integrity": "sha512-ur4+vzXQEkyJNV+uBf9wLIo8gcuwRJkPyYU8CbKoXjfaVDMF0hYjO242UKK9eVx5uL2IvZAG/tLS/g7QaFdn/A==",
+                    "dev": true,
+                    "requires": {
+                        "async": "^2.6.0",
+                        "chalk": "^2.3.0",
+                        "cli-table": "^0.3.1",
+                        "cross-spawn": "^6.0.5",
+                        "dargs": "^6.0.0",
+                        "dateformat": "^3.0.3",
+                        "debug": "^3.1.0",
+                        "detect-conflict": "^1.0.0",
+                        "error": "^7.0.2",
+                        "find-up": "^3.0.0",
+                        "github-username": "^4.0.0",
+                        "istextorbinary": "^2.2.1",
+                        "lodash": "^4.17.10",
+                        "make-dir": "^1.1.0",
+                        "mem-fs-editor": "^5.0.0",
+                        "minimist": "^1.2.0",
+                        "pretty-bytes": "^5.1.0",
+                        "read-chunk": "^2.1.0",
+                        "read-pkg-up": "^4.0.0",
+                        "rimraf": "^2.6.2",
+                        "run-async": "^2.0.0",
+                        "shelljs": "^0.8.0",
+                        "text-table": "^0.2.0",
+                        "through2": "^2.0.0",
+                        "yeoman-environment": "^2.0.5"
+                    },
+                    "dependencies": {
+                        "shelljs": {
+                            "version": "0.8.3",
+                            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.3.tgz",
+                            "integrity": "sha512-fc0BKlAWiLpwZljmOvAOTE/gXawtCoNrP5oaY7KIaQbbyHeQVg01pSEuEGvGh3HEdBU4baCD7wQBwADmM/7f7A==",
+                            "dev": true,
+                            "requires": {
+                                "glob": "^7.0.0",
+                                "interpret": "^1.0.0",
+                                "rechoir": "^0.6.2"
+                            }
+                        }
+                    }
+                }
+            }
+        },
+        "get-port": {
+            "version": "3.2.0",
+            "resolved": "https://registry.npmjs.org/get-port/-/get-port-3.2.0.tgz",
+            "integrity": "sha1-3Xzn3hh8Bsi/NTeWrHHgmfCYDrw=",
+            "dev": true
+        },
+        "get-stdin": {
+            "version": "4.0.1",
+            "resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-4.0.1.tgz",
+            "integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4=",
+            "dev": true
+        },
+        "get-stream": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
+            "integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ=",
+            "dev": true
+        },
+        "get-value": {
+            "version": "2.0.6",
+            "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",
+            "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=",
+            "dev": true
+        },
+        "getpass": {
+            "version": "0.1.7",
+            "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
+            "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
+            "dev": true,
+            "requires": {
+                "assert-plus": "^1.0.0"
+            }
+        },
+        "gh-got": {
+            "version": "6.0.0",
+            "resolved": "https://registry.npmjs.org/gh-got/-/gh-got-6.0.0.tgz",
+            "integrity": "sha512-F/mS+fsWQMo1zfgG9MD8KWvTWPPzzhuVwY++fhQ5Ggd+0P+CAMHtzMZhNxG+TqGfHDChJKsbh6otfMGqO2AKBw==",
+            "dev": true,
+            "requires": {
+                "got": "^7.0.0",
+                "is-plain-obj": "^1.1.0"
+            }
+        },
+        "git-config-path": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/git-config-path/-/git-config-path-1.0.1.tgz",
+            "integrity": "sha1-bTP37WPbDQ4RgTFQO6s6ykfVRmQ=",
+            "dev": true,
+            "requires": {
+                "extend-shallow": "^2.0.1",
+                "fs-exists-sync": "^0.1.0",
+                "homedir-polyfill": "^1.0.0"
+            },
+            "dependencies": {
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                }
+            }
+        },
+        "github-username": {
+            "version": "4.1.0",
+            "resolved": "https://registry.npmjs.org/github-username/-/github-username-4.1.0.tgz",
+            "integrity": "sha1-y+KABBiDIG2kISrp5LXxacML9Bc=",
+            "dev": true,
+            "requires": {
+                "gh-got": "^6.0.0"
+            }
+        },
+        "glob": {
+            "version": "7.1.3",
+            "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
+            "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
+            "dev": true,
+            "requires": {
+                "fs.realpath": "^1.0.0",
+                "inflight": "^1.0.4",
+                "inherits": "2",
+                "minimatch": "^3.0.4",
+                "once": "^1.3.0",
+                "path-is-absolute": "^1.0.0"
+            }
+        },
+        "glob-parent": {
+            "version": "3.1.0",
+            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
+            "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
+            "dev": true,
+            "requires": {
+                "is-glob": "^3.1.0",
+                "path-dirname": "^1.0.0"
+            },
+            "dependencies": {
+                "is-glob": {
+                    "version": "3.1.0",
+                    "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
+                    "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
+                    "dev": true,
+                    "requires": {
+                        "is-extglob": "^2.1.0"
+                    }
+                }
+            }
+        },
+        "glob-to-regexp": {
+            "version": "0.3.0",
+            "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz",
+            "integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs=",
+            "dev": true
+        },
+        "global": {
+            "version": "4.3.2",
+            "resolved": "https://registry.npmjs.org/global/-/global-4.3.2.tgz",
+            "integrity": "sha1-52mJJopsdMOJCLEwWxD8DjlOnQ8=",
+            "dev": true,
+            "requires": {
+                "min-document": "^2.19.0",
+                "process": "~0.5.1"
+            }
+        },
+        "globby": {
+            "version": "8.0.2",
+            "resolved": "https://registry.npmjs.org/globby/-/globby-8.0.2.tgz",
+            "integrity": "sha512-yTzMmKygLp8RUpG1Ymu2VXPSJQZjNAZPD4ywgYEaG7e4tBJeUQBO8OpXrf1RCNcEs5alsoJYPAMiIHP0cmeC7w==",
+            "dev": true,
+            "requires": {
+                "array-union": "^1.0.1",
+                "dir-glob": "2.0.0",
+                "fast-glob": "^2.0.2",
+                "glob": "^7.1.2",
+                "ignore": "^3.3.5",
+                "pify": "^3.0.0",
+                "slash": "^1.0.0"
+            }
+        },
+        "google-translate": {
+            "version": "2.2.0",
+            "resolved": "https://registry.npmjs.org/google-translate/-/google-translate-2.2.0.tgz",
+            "integrity": "sha512-k9MuJIRUAhEpdd732mKWxONOmpA8gX4bJtwsOQCEwFVcm+V0eIGBq4uMWw69Lu9GvJO77w+STma5rh4W+62p+g==",
+            "dev": true,
+            "requires": {
+                "async": "2.6.1",
+                "he": "1.1.1",
+                "request": "2.87.0",
+                "underscore": "1.9.1"
+            },
+            "dependencies": {
+                "ajv": {
+                    "version": "5.5.2",
+                    "resolved": "https://registry.npmjs.org/ajv/-/ajv-5.5.2.tgz",
+                    "integrity": "sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=",
+                    "dev": true,
+                    "requires": {
+                        "co": "^4.6.0",
+                        "fast-deep-equal": "^1.0.0",
+                        "fast-json-stable-stringify": "^2.0.0",
+                        "json-schema-traverse": "^0.3.0"
+                    }
+                },
+                "async": {
+                    "version": "2.6.1",
+                    "resolved": "https://registry.npmjs.org/async/-/async-2.6.1.tgz",
+                    "integrity": "sha512-fNEiL2+AZt6AlAw/29Cr0UDe4sRAHCpEHh54WMz+Bb7QfNcFw4h3loofyJpLeQs4Yx7yuqu/2dLgM5hKOs6HlQ==",
+                    "dev": true,
+                    "requires": {
+                        "lodash": "^4.17.10"
+                    }
+                },
+                "fast-deep-equal": {
+                    "version": "1.1.0",
+                    "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-1.1.0.tgz",
+                    "integrity": "sha1-wFNHeBfIa1HaqFPIHgWbcz0CNhQ=",
+                    "dev": true
+                },
+                "har-validator": {
+                    "version": "5.0.3",
+                    "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.0.3.tgz",
+                    "integrity": "sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=",
+                    "dev": true,
+                    "requires": {
+                        "ajv": "^5.1.0",
+                        "har-schema": "^2.0.0"
+                    }
+                },
+                "json-schema-traverse": {
+                    "version": "0.3.1",
+                    "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.3.1.tgz",
+                    "integrity": "sha1-NJptRMU6Ud6JtAgFxdXlm0F9M0A=",
+                    "dev": true
+                },
+                "oauth-sign": {
+                    "version": "0.8.2",
+                    "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz",
+                    "integrity": "sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=",
+                    "dev": true
+                },
+                "punycode": {
+                    "version": "1.4.1",
+                    "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
+                    "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4=",
+                    "dev": true
+                },
+                "request": {
+                    "version": "2.87.0",
+                    "resolved": "https://registry.npmjs.org/request/-/request-2.87.0.tgz",
+                    "integrity": "sha512-fcogkm7Az5bsS6Sl0sibkbhcKsnyon/jV1kF3ajGmF0c8HrttdKTPRT9hieOaQHA5HEq6r8OyWOo/o781C1tNw==",
+                    "dev": true,
+                    "requires": {
+                        "aws-sign2": "~0.7.0",
+                        "aws4": "^1.6.0",
+                        "caseless": "~0.12.0",
+                        "combined-stream": "~1.0.5",
+                        "extend": "~3.0.1",
+                        "forever-agent": "~0.6.1",
+                        "form-data": "~2.3.1",
+                        "har-validator": "~5.0.3",
+                        "http-signature": "~1.2.0",
+                        "is-typedarray": "~1.0.0",
+                        "isstream": "~0.1.2",
+                        "json-stringify-safe": "~5.0.1",
+                        "mime-types": "~2.1.17",
+                        "oauth-sign": "~0.8.2",
+                        "performance-now": "^2.1.0",
+                        "qs": "~6.5.1",
+                        "safe-buffer": "^5.1.1",
+                        "tough-cookie": "~2.3.3",
+                        "tunnel-agent": "^0.6.0",
+                        "uuid": "^3.1.0"
+                    }
+                },
+                "tough-cookie": {
+                    "version": "2.3.4",
+                    "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz",
+                    "integrity": "sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==",
+                    "dev": true,
+                    "requires": {
+                        "punycode": "^1.4.1"
+                    }
+                }
+            }
+        },
+        "got": {
+            "version": "7.1.0",
+            "resolved": "https://registry.npmjs.org/got/-/got-7.1.0.tgz",
+            "integrity": "sha512-Y5WMo7xKKq1muPsxD+KmrR8DH5auG7fBdDVueZwETwV6VytKyU9OX/ddpq2/1hp1vIPvVb4T81dKQz3BivkNLw==",
+            "dev": true,
+            "requires": {
+                "decompress-response": "^3.2.0",
+                "duplexer3": "^0.1.4",
+                "get-stream": "^3.0.0",
+                "is-plain-obj": "^1.1.0",
+                "is-retry-allowed": "^1.0.0",
+                "is-stream": "^1.0.0",
+                "isurl": "^1.0.0-alpha5",
+                "lowercase-keys": "^1.0.0",
+                "p-cancelable": "^0.3.0",
+                "p-timeout": "^1.1.1",
+                "safe-buffer": "^5.0.1",
+                "timed-out": "^4.0.0",
+                "url-parse-lax": "^1.0.0",
+                "url-to-options": "^1.0.1"
+            }
+        },
+        "graceful-fs": {
+            "version": "4.1.15",
+            "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.15.tgz",
+            "integrity": "sha512-6uHUhOPEBgQ24HM+r6b/QwWfZq+yiFcipKFrOFiBEnWdy5sdzYoi+pJeQaPI5qOLRFqWmAXUPQNsielzdLoecA==",
+            "dev": true
+        },
+        "grouped-queue": {
+            "version": "0.3.3",
+            "resolved": "https://registry.npmjs.org/grouped-queue/-/grouped-queue-0.3.3.tgz",
+            "integrity": "sha1-wWfSpTGcWg4JZO9qJbfC34mWyFw=",
+            "dev": true,
+            "requires": {
+                "lodash": "^4.17.2"
+            }
+        },
+        "gulp-filter": {
+            "version": "5.1.0",
+            "resolved": "https://registry.npmjs.org/gulp-filter/-/gulp-filter-5.1.0.tgz",
+            "integrity": "sha1-oF4Rr/sHz33PQafeHLe2OsN4PnM=",
+            "dev": true,
+            "requires": {
+                "multimatch": "^2.0.0",
+                "plugin-error": "^0.1.2",
+                "streamfilter": "^1.0.5"
+            }
+        },
+        "har-schema": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
+            "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
+            "dev": true
+        },
+        "har-validator": {
+            "version": "5.1.3",
+            "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
+            "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
+            "dev": true,
+            "requires": {
+                "ajv": "^6.5.5",
+                "har-schema": "^2.0.0"
+            }
+        },
+        "has-ansi": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
+            "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
+            "dev": true,
+            "requires": {
+                "ansi-regex": "^2.0.0"
+            },
+            "dependencies": {
+                "ansi-regex": {
+                    "version": "2.1.1",
+                    "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+                    "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
+                    "dev": true
+                }
+            }
+        },
+        "has-flag": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
+            "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
+            "dev": true
+        },
+        "has-symbol-support-x": {
+            "version": "1.4.2",
+            "resolved": "https://registry.npmjs.org/has-symbol-support-x/-/has-symbol-support-x-1.4.2.tgz",
+            "integrity": "sha512-3ToOva++HaW+eCpgqZrCfN51IPB+7bJNVT6CUATzueB5Heb8o6Nam0V3HG5dlDvZU1Gn5QLcbahiKw/XVk5JJw==",
+            "dev": true
+        },
+        "has-to-string-tag-x": {
+            "version": "1.4.1",
+            "resolved": "https://registry.npmjs.org/has-to-string-tag-x/-/has-to-string-tag-x-1.4.1.tgz",
+            "integrity": "sha512-vdbKfmw+3LoOYVr+mtxHaX5a96+0f3DljYd8JOqvOLsf5mw2Otda2qCDT9qRqLAhrjyQ0h7ual5nOiASpsGNFw==",
+            "dev": true,
+            "requires": {
+                "has-symbol-support-x": "^1.4.1"
+            }
+        },
+        "has-unicode": {
+            "version": "2.0.1",
+            "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
+            "integrity": "sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk=",
+            "dev": true
+        },
+        "has-value": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",
+            "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",
+            "dev": true,
+            "requires": {
+                "get-value": "^2.0.6",
+                "has-values": "^1.0.0",
+                "isobject": "^3.0.0"
+            }
+        },
+        "has-values": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",
+            "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
+            "dev": true,
+            "requires": {
+                "is-number": "^3.0.0",
+                "kind-of": "^4.0.0"
+            },
+            "dependencies": {
+                "kind-of": {
+                    "version": "4.0.0",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
+                    "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
+                    "dev": true,
+                    "requires": {
+                        "is-buffer": "^1.1.5"
+                    }
+                }
+            }
+        },
+        "he": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/he/-/he-1.1.1.tgz",
+            "integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0=",
+            "dev": true
+        },
+        "homedir-polyfill": {
+            "version": "1.0.3",
+            "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",
+            "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",
+            "dev": true,
+            "requires": {
+                "parse-passwd": "^1.0.0"
+            }
+        },
+        "hosted-git-info": {
+            "version": "2.7.1",
+            "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.7.1.tgz",
+            "integrity": "sha512-7T/BxH19zbcCTa8XkMlbK5lTo1WtgkFi3GvdWEyNuc4Vex7/9Dqbnpsf4JMydcfj9HCg4zUWFTL3Za6lapg5/w==",
+            "dev": true
+        },
+        "html-wiring": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/html-wiring/-/html-wiring-1.2.0.tgz",
+            "integrity": "sha1-xfkKd24KJyQdxt+QIsNxhtAnD54=",
+            "dev": true,
+            "requires": {
+                "cheerio": "^0.19.0",
+                "detect-newline": "^1.0.3"
+            },
+            "dependencies": {
+                "cheerio": {
+                    "version": "0.19.0",
+                    "resolved": "https://registry.npmjs.org/cheerio/-/cheerio-0.19.0.tgz",
+                    "integrity": "sha1-dy5wFfLuKZZQltcepBdbdas1SSU=",
+                    "dev": true,
+                    "requires": {
+                        "css-select": "~1.0.0",
+                        "dom-serializer": "~0.1.0",
+                        "entities": "~1.1.1",
+                        "htmlparser2": "~3.8.1",
+                        "lodash": "^3.2.0"
+                    }
+                },
+                "css-select": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/css-select/-/css-select-1.0.0.tgz",
+                    "integrity": "sha1-sRIcpRhI3SZOIkTQWM7iVN7rRLA=",
+                    "dev": true,
+                    "requires": {
+                        "boolbase": "~1.0.0",
+                        "css-what": "1.0",
+                        "domutils": "1.4",
+                        "nth-check": "~1.0.0"
+                    }
+                },
+                "css-what": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/css-what/-/css-what-1.0.0.tgz",
+                    "integrity": "sha1-18wt9FGAZm+Z0rFEYmOUaeAPc2w=",
+                    "dev": true
+                },
+                "domhandler": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.3.0.tgz",
+                    "integrity": "sha1-LeWaCCLVAn+r/28DLCsloqir5zg=",
+                    "dev": true,
+                    "requires": {
+                        "domelementtype": "1"
+                    }
+                },
+                "domutils": {
+                    "version": "1.4.3",
+                    "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.4.3.tgz",
+                    "integrity": "sha1-CGVRN5bGswYDGFDhdVFrr4C3Km8=",
+                    "dev": true,
+                    "requires": {
+                        "domelementtype": "1"
+                    }
+                },
+                "htmlparser2": {
+                    "version": "3.8.3",
+                    "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.8.3.tgz",
+                    "integrity": "sha1-mWwosZFRaovoZQGn15dX5ccMEGg=",
+                    "dev": true,
+                    "requires": {
+                        "domelementtype": "1",
+                        "domhandler": "2.3",
+                        "domutils": "1.5",
+                        "entities": "1.0",
+                        "readable-stream": "1.1"
+                    },
+                    "dependencies": {
+                        "domutils": {
+                            "version": "1.5.1",
+                            "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz",
+                            "integrity": "sha1-3NhIiib1Y9YQeeSMn3t+Mjc2gs8=",
+                            "dev": true,
+                            "requires": {
+                                "dom-serializer": "0",
+                                "domelementtype": "1"
+                            }
+                        },
+                        "entities": {
+                            "version": "1.0.0",
+                            "resolved": "https://registry.npmjs.org/entities/-/entities-1.0.0.tgz",
+                            "integrity": "sha1-sph6o4ITR/zeZCsk/fyeT7cSvyY=",
+                            "dev": true
+                        }
+                    }
+                },
+                "isarray": {
+                    "version": "0.0.1",
+                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
+                    "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
+                    "dev": true
+                },
+                "lodash": {
+                    "version": "3.10.1",
+                    "resolved": "https://registry.npmjs.org/lodash/-/lodash-3.10.1.tgz",
+                    "integrity": "sha1-W/Rejkm6QYnhfUgnid/RW9FAt7Y=",
+                    "dev": true
+                },
+                "readable-stream": {
+                    "version": "1.1.14",
+                    "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",
+                    "integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",
+                    "dev": true,
+                    "requires": {
+                        "core-util-is": "~1.0.0",
+                        "inherits": "~2.0.1",
+                        "isarray": "0.0.1",
+                        "string_decoder": "~0.10.x"
+                    }
+                },
+                "string_decoder": {
+                    "version": "0.10.31",
+                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
+                    "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
+                    "dev": true
+                }
+            }
+        },
+        "htmlparser2": {
+            "version": "3.10.1",
+            "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.1.tgz",
+            "integrity": "sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==",
+            "dev": true,
+            "requires": {
+                "domelementtype": "^1.3.1",
+                "domhandler": "^2.3.0",
+                "domutils": "^1.5.1",
+                "entities": "^1.1.1",
+                "inherits": "^2.0.1",
+                "readable-stream": "^3.1.1"
+            },
+            "dependencies": {
+                "readable-stream": {
+                    "version": "3.2.0",
+                    "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.2.0.tgz",
+                    "integrity": "sha512-RV20kLjdmpZuTF1INEb9IA3L68Nmi+Ri7ppZqo78wj//Pn62fCoJyV9zalccNzDD/OuJpMG4f+pfMl8+L6QdGw==",
+                    "dev": true,
+                    "requires": {
+                        "inherits": "^2.0.3",
+                        "string_decoder": "^1.1.1",
+                        "util-deprecate": "^1.0.1"
+                    }
+                }
+            }
+        },
+        "http-basic": {
+            "version": "7.0.0",
+            "resolved": "https://registry.npmjs.org/http-basic/-/http-basic-7.0.0.tgz",
+            "integrity": "sha1-gvClBr6UJzLsje6+6A50bvVzbbo=",
+            "dev": true,
+            "requires": {
+                "@types/concat-stream": "^1.6.0",
+                "@types/node": "^9.4.1",
+                "caseless": "~0.12.0",
+                "concat-stream": "^1.4.6",
+                "http-response-object": "^3.0.1",
+                "parse-cache-control": "^1.0.1"
+            }
+        },
+        "http-response-object": {
+            "version": "3.0.1",
+            "resolved": "https://registry.npmjs.org/http-response-object/-/http-response-object-3.0.1.tgz",
+            "integrity": "sha512-6L0Fkd6TozA8kFSfh9Widst0wfza3U1Ex2RjJ6zNDK0vR1U1auUR6jY4Nn2Xl7CCy0ikFmxW1XcspVpb9RvwTg==",
+            "dev": true,
+            "requires": {
+                "@types/node": "^9.3.0"
+            }
+        },
+        "http-signature": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
+            "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
+            "dev": true,
+            "requires": {
+                "assert-plus": "^1.0.0",
+                "jsprim": "^1.2.2",
+                "sshpk": "^1.7.0"
+            }
+        },
+        "iconv-lite": {
+            "version": "0.4.24",
+            "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
+            "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
+            "dev": true,
+            "requires": {
+                "safer-buffer": ">= 2.1.2 < 3"
+            }
+        },
+        "ignore": {
+            "version": "3.3.10",
+            "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
+            "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug==",
+            "dev": true
+        },
+        "imurmurhash": {
+            "version": "0.1.4",
+            "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
+            "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
+            "dev": true
+        },
+        "indent-string": {
+            "version": "3.2.0",
+            "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-3.2.0.tgz",
+            "integrity": "sha1-Sl/W0nzDMvN+VBmlBNu4NxBckok=",
+            "dev": true
+        },
+        "inflight": {
+            "version": "1.0.6",
+            "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
+            "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
+            "dev": true,
+            "requires": {
+                "once": "^1.3.0",
+                "wrappy": "1"
+            }
+        },
+        "inherits": {
+            "version": "2.0.3",
+            "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
+            "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
+            "dev": true
+        },
+        "ini": {
+            "version": "1.3.5",
+            "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",
+            "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==",
+            "dev": true
+        },
+        "inquirer": {
+            "version": "6.2.2",
+            "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.2.2.tgz",
+            "integrity": "sha512-Z2rREiXA6cHRR9KBOarR3WuLlFzlIfAEIiB45ll5SSadMg7WqOh1MKEjjndfuH5ewXdixWCxqnVfGOQzPeiztA==",
+            "dev": true,
+            "requires": {
+                "ansi-escapes": "^3.2.0",
+                "chalk": "^2.4.2",
+                "cli-cursor": "^2.1.0",
+                "cli-width": "^2.0.0",
+                "external-editor": "^3.0.3",
+                "figures": "^2.0.0",
+                "lodash": "^4.17.11",
+                "mute-stream": "0.0.7",
+                "run-async": "^2.2.0",
+                "rxjs": "^6.4.0",
+                "string-width": "^2.1.0",
+                "strip-ansi": "^5.0.0",
+                "through": "^2.3.6"
+            },
+            "dependencies": {
+                "ansi-regex": {
+                    "version": "4.1.0",
+                    "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
+                    "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
+                    "dev": true
+                },
+                "strip-ansi": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.1.0.tgz",
+                    "integrity": "sha512-TjxrkPONqO2Z8QDCpeE2j6n0M6EwxzyDgzEeGp+FbdvaJAt//ClYi6W5my+3ROlC/hZX2KACUwDfK49Ka5eDvg==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-regex": "^4.1.0"
+                    }
+                }
+            }
+        },
+        "insight": {
+            "version": "0.10.1",
+            "resolved": "https://registry.npmjs.org/insight/-/insight-0.10.1.tgz",
+            "integrity": "sha512-kLGeYQkh18f8KuC68QKdi0iwUcIaayJVB/STpX7x452/7pAUm1yfG4giJwcxbrTh0zNYtc8kBR+6maLMOzglOQ==",
+            "dev": true,
+            "requires": {
+                "async": "^2.1.4",
+                "chalk": "^2.3.0",
+                "conf": "^1.3.1",
+                "inquirer": "^5.0.0",
+                "lodash.debounce": "^4.0.8",
+                "os-name": "^2.0.1",
+                "request": "^2.74.0",
+                "tough-cookie": "^2.0.0",
+                "uuid": "^3.0.0"
+            },
+            "dependencies": {
+                "chardet": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",
+                    "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I=",
+                    "dev": true
+                },
+                "conf": {
+                    "version": "1.4.0",
+                    "resolved": "https://registry.npmjs.org/conf/-/conf-1.4.0.tgz",
+                    "integrity": "sha512-bzlVWS2THbMetHqXKB8ypsXN4DQ/1qopGwNJi1eYbpwesJcd86FBjFciCQX/YwAhp9bM7NVnPFqZ5LpV7gP0Dg==",
+                    "dev": true,
+                    "requires": {
+                        "dot-prop": "^4.1.0",
+                        "env-paths": "^1.0.0",
+                        "make-dir": "^1.0.0",
+                        "pkg-up": "^2.0.0",
+                        "write-file-atomic": "^2.3.0"
+                    }
+                },
+                "external-editor": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",
+                    "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",
+                    "dev": true,
+                    "requires": {
+                        "chardet": "^0.4.0",
+                        "iconv-lite": "^0.4.17",
+                        "tmp": "^0.0.33"
+                    }
+                },
+                "inquirer": {
+                    "version": "5.2.0",
+                    "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-5.2.0.tgz",
+                    "integrity": "sha512-E9BmnJbAKLPGonz0HeWHtbKf+EeSP93paWO3ZYoUpq/aowXvYGjjCSuashhXPpzbArIjBbji39THkxTz9ZeEUQ==",
+                    "dev": true,
+                    "requires": {
+                        "ansi-escapes": "^3.0.0",
+                        "chalk": "^2.0.0",
+                        "cli-cursor": "^2.1.0",
+                        "cli-width": "^2.0.0",
+                        "external-editor": "^2.1.0",
+                        "figures": "^2.0.0",
+                        "lodash": "^4.3.0",
+                        "mute-stream": "0.0.7",
+                        "run-async": "^2.2.0",
+                        "rxjs": "^5.5.2",
+                        "string-width": "^2.1.0",
+                        "strip-ansi": "^4.0.0",
+                        "through": "^2.3.6"
+                    }
+                },
+                "rxjs": {
+                    "version": "5.5.12",
+                    "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-5.5.12.tgz",
+                    "integrity": "sha512-xx2itnL5sBbqeeiVgNPVuQQ1nC8Jp2WfNJhXWHmElW9YmrpS9UVnNzhP3EH3HFqexO5Tlp8GhYY+WEcqcVMvGw==",
+                    "dev": true,
+                    "requires": {
+                        "symbol-observable": "1.0.1"
+                    }
+                }
+            }
+        },
+        "interpret": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.2.0.tgz",
+            "integrity": "sha512-mT34yGKMNceBQUoVn7iCDKDntA7SC6gycMAWzGx1z/CMCTV7b2AAtXlo3nRyHZ1FelRkQbQjprHSYGwzLtkVbw==",
+            "dev": true
+        },
+        "invert-kv": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",
+            "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
+            "dev": true
+        },
+        "is-accessor-descriptor": {
+            "version": "0.1.6",
+            "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
+            "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
+            "dev": true,
+            "requires": {
+                "kind-of": "^3.0.2"
+            },
+            "dependencies": {
+                "kind-of": {
+                    "version": "3.2.2",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
+                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+                    "dev": true,
+                    "requires": {
+                        "is-buffer": "^1.1.5"
+                    }
+                }
+            }
+        },
+        "is-arrayish": {
+            "version": "0.2.1",
+            "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
+            "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",
+            "dev": true
+        },
+        "is-buffer": {
+            "version": "1.1.6",
+            "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
+            "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
+            "dev": true
+        },
+        "is-data-descriptor": {
+            "version": "0.1.4",
+            "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
+            "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
+            "dev": true,
+            "requires": {
+                "kind-of": "^3.0.2"
+            },
+            "dependencies": {
+                "kind-of": {
+                    "version": "3.2.2",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
+                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+                    "dev": true,
+                    "requires": {
+                        "is-buffer": "^1.1.5"
+                    }
+                }
+            }
+        },
+        "is-descriptor": {
+            "version": "0.1.6",
+            "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
+            "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
+            "dev": true,
+            "requires": {
+                "is-accessor-descriptor": "^0.1.6",
+                "is-data-descriptor": "^0.1.4",
+                "kind-of": "^5.0.0"
+            },
+            "dependencies": {
+                "kind-of": {
+                    "version": "5.1.0",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
+                    "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==",
+                    "dev": true
+                }
+            }
+        },
+        "is-extendable": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
+            "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
+            "dev": true
+        },
+        "is-extglob": {
+            "version": "2.1.1",
+            "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
+            "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=",
+            "dev": true
+        },
+        "is-finite": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/is-finite/-/is-finite-1.0.2.tgz",
+            "integrity": "sha1-zGZ3aVYCvlUO8R6LSqYwU0K20Ko=",
+            "dev": true,
+            "requires": {
+                "number-is-nan": "^1.0.0"
+            }
+        },
+        "is-fullwidth-code-point": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
+            "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
+            "dev": true
+        },
+        "is-glob": {
+            "version": "4.0.0",
+            "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.0.tgz",
+            "integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
+            "dev": true,
+            "requires": {
+                "is-extglob": "^2.1.1"
+            }
+        },
+        "is-number": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
+            "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
+            "dev": true,
+            "requires": {
+                "kind-of": "^3.0.2"
+            },
+            "dependencies": {
+                "kind-of": {
+                    "version": "3.2.2",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
+                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+                    "dev": true,
+                    "requires": {
+                        "is-buffer": "^1.1.5"
+                    }
+                }
+            }
+        },
+        "is-obj": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz",
+            "integrity": "sha1-PkcprB9f3gJc19g6iW2rn09n2w8=",
+            "dev": true
+        },
+        "is-object": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/is-object/-/is-object-1.0.1.tgz",
+            "integrity": "sha1-iVJojF7C/9awPsyF52ngKQMINHA=",
+            "dev": true
+        },
+        "is-plain-obj": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz",
+            "integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4=",
+            "dev": true
+        },
+        "is-plain-object": {
+            "version": "2.0.4",
+            "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
+            "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
+            "dev": true,
+            "requires": {
+                "isobject": "^3.0.1"
+            }
+        },
+        "is-promise": {
+            "version": "2.1.0",
+            "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz",
+            "integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o=",
+            "dev": true
+        },
+        "is-retry-allowed": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.1.0.tgz",
+            "integrity": "sha1-EaBgVotnM5REAz0BJaYaINVk+zQ=",
+            "dev": true
+        },
+        "is-scoped": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/is-scoped/-/is-scoped-1.0.0.tgz",
+            "integrity": "sha1-RJypgpnnEwOCViieyytUDcQ3yzA=",
+            "dev": true,
+            "requires": {
+                "scoped-regex": "^1.0.0"
+            }
+        },
+        "is-stream": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
+            "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ=",
+            "dev": true
+        },
+        "is-typedarray": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
+            "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=",
+            "dev": true
+        },
+        "is-utf8": {
+            "version": "0.2.1",
+            "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
+            "integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI=",
+            "dev": true
+        },
+        "is-windows": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",
+            "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==",
+            "dev": true
+        },
+        "isarray": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+            "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
+            "dev": true
+        },
+        "isbinaryfile": {
+            "version": "3.0.3",
+            "resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-3.0.3.tgz",
+            "integrity": "sha512-8cJBL5tTd2OS0dM4jz07wQd5g0dCCqIhUxPIGtZfa5L6hWlvV5MHTITy/DBAsF+Oe2LS1X3krBUhNwaGUWpWxw==",
+            "dev": true,
+            "requires": {
+                "buffer-alloc": "^1.2.0"
+            }
+        },
+        "isexe": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+            "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
+            "dev": true
+        },
+        "isobject": {
+            "version": "3.0.1",
+            "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
+            "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
+            "dev": true
+        },
+        "isstream": {
+            "version": "0.1.2",
+            "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
+            "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
+            "dev": true
+        },
+        "istextorbinary": {
+            "version": "2.5.1",
+            "resolved": "https://registry.npmjs.org/istextorbinary/-/istextorbinary-2.5.1.tgz",
+            "integrity": "sha512-pv/JNPWnfpwGjPx7JrtWTwsWsxkrK3fNzcEVnt92YKEIErps4Fsk49+qzCe9iQF2hjqK8Naqf8P9kzoeCuQI1g==",
+            "dev": true,
+            "requires": {
+                "binaryextensions": "^2.1.2",
+                "editions": "^2.1.3",
+                "textextensions": "^2.4.0"
+            }
+        },
+        "isurl": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/isurl/-/isurl-1.0.0.tgz",
+            "integrity": "sha512-1P/yWsxPlDtn7QeRD+ULKQPaIaN6yF368GZ2vDfv0AL0NwpStafjWCDDdn0k8wgFMWpVAqG7oJhxHnlud42i9w==",
+            "dev": true,
+            "requires": {
+                "has-to-string-tag-x": "^1.2.0",
+                "is-object": "^1.0.1"
+            }
+        },
+        "jenkins-api": {
+            "version": "0.3.1",
+            "resolved": "https://registry.npmjs.org/jenkins-api/-/jenkins-api-0.3.1.tgz",
+            "integrity": "sha512-CGM7cTvjf+tL5JBjsFKeNtHMbuFfuBVrOHp5jcA7pkyMGZxwzS3DOm2XfclmQ+qxh+swHT2Y7Njj3AxSVASL8A==",
+            "dev": true,
+            "requires": {
+                "request": "^2.81.0"
+            }
+        },
+        "jhipster-core": {
+            "version": "3.6.11",
+            "resolved": "https://registry.npmjs.org/jhipster-core/-/jhipster-core-3.6.11.tgz",
+            "integrity": "sha512-OibJay1+nwKk+mfRfuTrt2rW2h7BmGNfKWR7TQO4oYqG+I096EvJxZkIMCcjA9KuKLOZvnzfEi4UbtKyRTmHkg==",
+            "dev": true,
+            "requires": {
+                "chevrotain": "4.2.0",
+                "fs-extra": "7.0.1",
+                "lodash": "4.17.11",
+                "winston": "3.2.1"
+            }
+        },
+        "js-object-pretty-print": {
+            "version": "0.3.0",
+            "resolved": "https://registry.npmjs.org/js-object-pretty-print/-/js-object-pretty-print-0.3.0.tgz",
+            "integrity": "sha1-RnDkUAZu4ezPNRdMfRl/WqOLz3Q=",
+            "dev": true
+        },
+        "js-yaml": {
+            "version": "3.12.0",
+            "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.12.0.tgz",
+            "integrity": "sha512-PIt2cnwmPfL4hKNwqeiuz4bKfnzHTBv6HyVgjahA6mPLwPDzjDWrplJBMjHUFxku/N3FlmrbyPclad+I+4mJ3A==",
+            "dev": true,
+            "requires": {
+                "argparse": "^1.0.7",
+                "esprima": "^4.0.0"
+            }
+        },
+        "jsbn": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
+            "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM=",
+            "dev": true
+        },
+        "json-parse-better-errors": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",
+            "integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==",
+            "dev": true
+        },
+        "json-schema": {
+            "version": "0.2.3",
+            "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
+            "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=",
+            "dev": true
+        },
+        "json-schema-traverse": {
+            "version": "0.4.1",
+            "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+            "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+            "dev": true
+        },
+        "json-stringify-safe": {
+            "version": "5.0.1",
+            "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
+            "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
+            "dev": true
+        },
+        "jsonfile": {
+            "version": "4.0.0",
+            "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
+            "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
+            "dev": true,
+            "requires": {
+                "graceful-fs": "^4.1.6"
+            }
+        },
+        "jsprim": {
+            "version": "1.4.1",
+            "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
+            "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
+            "dev": true,
+            "requires": {
+                "assert-plus": "1.0.0",
+                "extsprintf": "1.3.0",
+                "json-schema": "0.2.3",
+                "verror": "1.10.0"
+            }
+        },
+        "kind-of": {
+            "version": "6.0.2",
+            "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",
+            "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA==",
+            "dev": true
+        },
+        "kuler": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/kuler/-/kuler-1.0.1.tgz",
+            "integrity": "sha512-J9nVUucG1p/skKul6DU3PUZrhs0LPulNaeUOox0IyXDi8S4CztTHs1gQphhuZmzXG7VOQSf6NJfKuzteQLv9gQ==",
+            "dev": true,
+            "requires": {
+                "colornames": "^1.1.1"
+            }
+        },
+        "lcid": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",
+            "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",
+            "dev": true,
+            "requires": {
+                "invert-kv": "^1.0.0"
+            }
+        },
+        "line-reader": {
+            "version": "0.4.0",
+            "resolved": "https://registry.npmjs.org/line-reader/-/line-reader-0.4.0.tgz",
+            "integrity": "sha1-F+RIGNoKwzVnW6MAlU+U72cOZv0=",
+            "dev": true
+        },
+        "load-json-file": {
+            "version": "4.0.0",
+            "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",
+            "integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",
+            "dev": true,
+            "requires": {
+                "graceful-fs": "^4.1.2",
+                "parse-json": "^4.0.0",
+                "pify": "^3.0.0",
+                "strip-bom": "^3.0.0"
+            }
+        },
+        "locate-path": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
+            "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
+            "dev": true,
+            "requires": {
+                "p-locate": "^3.0.0",
+                "path-exists": "^3.0.0"
+            }
+        },
+        "lodash": {
+            "version": "4.17.11",
+            "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",
+            "integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==",
+            "dev": true
+        },
+        "lodash._getnative": {
+            "version": "3.9.1",
+            "resolved": "https://registry.npmjs.org/lodash._getnative/-/lodash._getnative-3.9.1.tgz",
+            "integrity": "sha1-VwvH3t5G1hzc3mh9ZdPuy6o6r/U=",
+            "dev": true
+        },
+        "lodash.assignin": {
+            "version": "4.2.0",
+            "resolved": "https://registry.npmjs.org/lodash.assignin/-/lodash.assignin-4.2.0.tgz",
+            "integrity": "sha1-uo31+4QesKPoBEIysOJjqNxqKKI=",
+            "dev": true
+        },
+        "lodash.bind": {
+            "version": "4.2.1",
+            "resolved": "https://registry.npmjs.org/lodash.bind/-/lodash.bind-4.2.1.tgz",
+            "integrity": "sha1-euMBfpOWIqwxt9fX3LGzTbFpDTU=",
+            "dev": true
+        },
+        "lodash.debounce": {
+            "version": "4.0.8",
+            "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
+            "integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168=",
+            "dev": true
+        },
+        "lodash.defaults": {
+            "version": "4.2.0",
+            "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-4.2.0.tgz",
+            "integrity": "sha1-0JF4cW/+pN3p5ft7N/bwgCJ0WAw=",
+            "dev": true
+        },
+        "lodash.difference": {
+            "version": "4.5.0",
+            "resolved": "https://registry.npmjs.org/lodash.difference/-/lodash.difference-4.5.0.tgz",
+            "integrity": "sha1-nMtOUF1Ia5FlE0V3KIWi3yf9AXw=",
+            "dev": true
+        },
+        "lodash.filter": {
+            "version": "4.6.0",
+            "resolved": "https://registry.npmjs.org/lodash.filter/-/lodash.filter-4.6.0.tgz",
+            "integrity": "sha1-ZosdSYFgOuHMWm+nYBQ+SAtMSs4=",
+            "dev": true
+        },
+        "lodash.flatten": {
+            "version": "4.4.0",
+            "resolved": "https://registry.npmjs.org/lodash.flatten/-/lodash.flatten-4.4.0.tgz",
+            "integrity": "sha1-8xwiIlqWMtK7+OSt2+8kCqdlph8=",
+            "dev": true
+        },
+        "lodash.foreach": {
+            "version": "4.5.0",
+            "resolved": "https://registry.npmjs.org/lodash.foreach/-/lodash.foreach-4.5.0.tgz",
+            "integrity": "sha1-Gmo16s5AEoDH8G3d7DUWWrJ+PlM=",
+            "dev": true
+        },
+        "lodash.map": {
+            "version": "4.6.0",
+            "resolved": "https://registry.npmjs.org/lodash.map/-/lodash.map-4.6.0.tgz",
+            "integrity": "sha1-dx7Hg540c9nEzeKLGTlMNWL09tM=",
+            "dev": true
+        },
+        "lodash.merge": {
+            "version": "4.6.1",
+            "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.1.tgz",
+            "integrity": "sha512-AOYza4+Hf5z1/0Hztxpm2/xiPZgi/cjMqdnKTUWTBSKchJlxXXuUSxCCl8rJlf4g6yww/j6mA8nC8Hw/EZWxKQ==",
+            "dev": true
+        },
+        "lodash.pad": {
+            "version": "4.5.1",
+            "resolved": "https://registry.npmjs.org/lodash.pad/-/lodash.pad-4.5.1.tgz",
+            "integrity": "sha1-QzCUmoM6fI2iLMIPaibE1Z3runA=",
+            "dev": true
+        },
+        "lodash.padend": {
+            "version": "4.6.1",
+            "resolved": "https://registry.npmjs.org/lodash.padend/-/lodash.padend-4.6.1.tgz",
+            "integrity": "sha1-U8y6BH0G4VjTEfRdpiX05J5vFm4=",
+            "dev": true
+        },
+        "lodash.padstart": {
+            "version": "4.6.1",
+            "resolved": "https://registry.npmjs.org/lodash.padstart/-/lodash.padstart-4.6.1.tgz",
+            "integrity": "sha1-0uPuv/DZ05rVD1y9G1KnvOa7YRs=",
+            "dev": true
+        },
+        "lodash.pick": {
+            "version": "4.4.0",
+            "resolved": "https://registry.npmjs.org/lodash.pick/-/lodash.pick-4.4.0.tgz",
+            "integrity": "sha1-UvBWEP/53tQiYRRB7R/BI6AwAbM=",
+            "dev": true
+        },
+        "lodash.reduce": {
+            "version": "4.6.0",
+            "resolved": "https://registry.npmjs.org/lodash.reduce/-/lodash.reduce-4.6.0.tgz",
+            "integrity": "sha1-8atrg5KZrUj3hKu/R2WW8DuRTTs=",
+            "dev": true
+        },
+        "lodash.reject": {
+            "version": "4.6.0",
+            "resolved": "https://registry.npmjs.org/lodash.reject/-/lodash.reject-4.6.0.tgz",
+            "integrity": "sha1-gNZJLcFHCGS79YNTO2UfQqn1JBU=",
+            "dev": true
+        },
+        "lodash.some": {
+            "version": "4.6.0",
+            "resolved": "https://registry.npmjs.org/lodash.some/-/lodash.some-4.6.0.tgz",
+            "integrity": "sha1-G7nzFO9ri63tE7VJFpsqlF62jk0=",
+            "dev": true
+        },
+        "lodash.uniq": {
+            "version": "4.5.0",
+            "resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",
+            "integrity": "sha1-0CJTc662Uq3BvILklFM5qEJ1R3M=",
+            "dev": true
+        },
+        "log-symbols": {
+            "version": "2.2.0",
+            "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-2.2.0.tgz",
+            "integrity": "sha512-VeIAFslyIerEJLXHziedo2basKbMKtTw3vfn5IzG0XTjhAVEJyNHnL2p7vc+wBDSdQuUpNw3M2u6xb9QsAY5Eg==",
+            "dev": true,
+            "requires": {
+                "chalk": "^2.0.1"
+            }
+        },
+        "logform": {
+            "version": "2.1.2",
+            "resolved": "https://registry.npmjs.org/logform/-/logform-2.1.2.tgz",
+            "integrity": "sha512-+lZh4OpERDBLqjiwDLpAWNQu6KMjnlXH2ByZwCuSqVPJletw0kTWJf5CgSNAUKn1KUkv3m2cUz/LK8zyEy7wzQ==",
+            "dev": true,
+            "requires": {
+                "colors": "^1.2.1",
+                "fast-safe-stringify": "^2.0.4",
+                "fecha": "^2.3.3",
+                "ms": "^2.1.1",
+                "triple-beam": "^1.3.0"
+            },
+            "dependencies": {
+                "colors": {
+                    "version": "1.3.3",
+                    "resolved": "https://registry.npmjs.org/colors/-/colors-1.3.3.tgz",
+                    "integrity": "sha512-mmGt/1pZqYRjMxB1axhTo16/snVZ5krrKkcmMeVKxzECMMXoCgnvTPp10QgHfcbQZw8Dq2jMNG6je4JlWU0gWg==",
+                    "dev": true
+                }
+            }
+        },
+        "loud-rejection": {
+            "version": "1.6.0",
+            "resolved": "https://registry.npmjs.org/loud-rejection/-/loud-rejection-1.6.0.tgz",
+            "integrity": "sha1-W0b4AUft7leIcPCG0Eghz5mOVR8=",
+            "dev": true,
+            "requires": {
+                "currently-unhandled": "^0.4.1",
+                "signal-exit": "^3.0.0"
+            }
+        },
+        "lowercase-keys": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
+            "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==",
+            "dev": true
+        },
+        "lru-cache": {
+            "version": "4.1.5",
+            "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
+            "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
+            "dev": true,
+            "requires": {
+                "pseudomap": "^1.0.2",
+                "yallist": "^2.1.2"
+            }
+        },
+        "macos-release": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/macos-release/-/macos-release-1.1.0.tgz",
+            "integrity": "sha512-mmLbumEYMi5nXReB9js3WGsB8UE6cDBWyIO62Z4DNx6GbRhDxHNjA1MlzSpJ2S2KM1wyiPRA0d19uHWYYvMHjA==",
+            "dev": true
+        },
+        "make-dir": {
+            "version": "1.3.0",
+            "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-1.3.0.tgz",
+            "integrity": "sha512-2w31R7SJtieJJnQtGc7RVL2StM2vGYVfqUOvUDxH6bC6aJTxPxTF0GnIgCyu7tjockiUWAYQRbxa7vKn34s5sQ==",
+            "dev": true,
+            "requires": {
+                "pify": "^3.0.0"
+            }
+        },
+        "map-cache": {
+            "version": "0.2.2",
+            "resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",
+            "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=",
+            "dev": true
+        },
+        "map-obj": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/map-obj/-/map-obj-2.0.0.tgz",
+            "integrity": "sha1-plzSkIepJZi4eRJXpSPgISIqwfk=",
+            "dev": true
+        },
+        "map-visit": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",
+            "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",
+            "dev": true,
+            "requires": {
+                "object-visit": "^1.0.0"
+            }
+        },
+        "mem": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/mem/-/mem-1.1.0.tgz",
+            "integrity": "sha1-Xt1StIXKHZAP5kiVUFOZoN+kX3Y=",
+            "dev": true,
+            "requires": {
+                "mimic-fn": "^1.0.0"
+            }
+        },
+        "mem-fs": {
+            "version": "1.1.3",
+            "resolved": "https://registry.npmjs.org/mem-fs/-/mem-fs-1.1.3.tgz",
+            "integrity": "sha1-uK6NLj/Lb10/kWXBLUVRoGXZicw=",
+            "dev": true,
+            "requires": {
+                "through2": "^2.0.0",
+                "vinyl": "^1.1.0",
+                "vinyl-file": "^2.0.0"
+            },
+            "dependencies": {
+                "clone": {
+                    "version": "1.0.4",
+                    "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
+                    "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4=",
+                    "dev": true
+                },
+                "clone-stats": {
+                    "version": "0.0.1",
+                    "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-0.0.1.tgz",
+                    "integrity": "sha1-uI+UqCzzi4eR1YBG6kAprYjKmdE=",
+                    "dev": true
+                },
+                "replace-ext": {
+                    "version": "0.0.1",
+                    "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",
+                    "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ=",
+                    "dev": true
+                },
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                },
+                "vinyl": {
+                    "version": "1.2.0",
+                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
+                    "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
+                    "dev": true,
+                    "requires": {
+                        "clone": "^1.0.0",
+                        "clone-stats": "^0.0.1",
+                        "replace-ext": "0.0.1"
+                    }
+                }
+            }
+        },
+        "mem-fs-editor": {
+            "version": "5.1.0",
+            "resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-5.1.0.tgz",
+            "integrity": "sha512-2Yt2GCYEbcotYbIJagmow4gEtHDqzpq5XN94+yAx/NT5+bGqIjkXnm3KCUQfE6kRfScGp9IZknScoGRKu8L78w==",
+            "dev": true,
+            "requires": {
+                "commondir": "^1.0.1",
+                "deep-extend": "^0.6.0",
+                "ejs": "^2.5.9",
+                "glob": "^7.0.3",
+                "globby": "^8.0.1",
+                "isbinaryfile": "^3.0.2",
+                "mkdirp": "^0.5.0",
+                "multimatch": "^2.0.0",
+                "rimraf": "^2.2.8",
+                "through2": "^2.0.0",
+                "vinyl": "^2.0.1"
+            },
+            "dependencies": {
+                "through2": {
+                    "version": "2.0.5",
+                    "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
+                    "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
+                    "dev": true,
+                    "requires": {
+                        "readable-stream": "~2.3.6",
+                        "xtend": "~4.0.1"
+                    }
+                }
+            }
+        },
+        "meow": {
+            "version": "5.0.0",
+            "resolved": "https://registry.npmjs.org/meow/-/meow-5.0.0.tgz",
+            "integrity": "sha512-CbTqYU17ABaLefO8vCU153ZZlprKYWDljcndKKDCFcYQITzWCXZAVk4QMFZPgvzrnUQ3uItnIE/LoUOwrT15Ig==",
+            "dev": true,
+            "requires": {
+                "camelcase-keys": "^4.0.0",
+                "decamelize-keys": "^1.0.0",
+                "loud-rejection": "^1.0.0",
+                "minimist-options": "^3.0.1",
+                "normalize-package-data": "^2.3.4",
+                "read-pkg-up": "^3.0.0",
+                "redent": "^2.0.0",
+                "trim-newlines": "^2.0.0",
+                "yargs-parser": "^10.0.0"
+            },
+            "dependencies": {
+                "find-up": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+                    "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+                    "dev": true,
+                    "requires": {
+                        "locate-path": "^2.0.0"
+                    }
+                },
+                "locate-path": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+                    "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+                    "dev": true,
+                    "requires": {
+                        "p-locate": "^2.0.0",
+                        "path-exists": "^3.0.0"
+                    }
+                },
+                "p-limit": {
+                    "version": "1.3.0",
+                    "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+                    "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+                    "dev": true,
+                    "requires": {
+                        "p-try": "^1.0.0"
+                    }
+                },
+                "p-locate": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+                    "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+                    "dev": true,
+                    "requires": {
+                        "p-limit": "^1.1.0"
+                    }
+                },
+                "p-try": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+                    "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
+                    "dev": true
+                },
+                "read-pkg-up": {
+                    "version": "3.0.0",
+                    "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-3.0.0.tgz",
+                    "integrity": "sha1-PtSWaF26D4/hGNBpHcUfSh/5bwc=",
+                    "dev": true,
+                    "requires": {
+                        "find-up": "^2.0.0",
+                        "read-pkg": "^3.0.0"
+                    }
+                }
+            }
+        },
+        "merge2": {
+            "version": "1.2.3",
+            "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.2.3.tgz",
+            "integrity": "sha512-gdUU1Fwj5ep4kplwcmftruWofEFt6lfpkkr3h860CXbAB9c3hGb55EOL2ali0Td5oebvW0E1+3Sr+Ur7XfKpRA==",
+            "dev": true
+        },
+        "micromatch": {
+            "version": "3.1.10",
+            "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
+            "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
+            "dev": true,
+            "requires": {
+                "arr-diff": "^4.0.0",
+                "array-unique": "^0.3.2",
+                "braces": "^2.3.1",
+                "define-property": "^2.0.2",
+                "extend-shallow": "^3.0.2",
+                "extglob": "^2.0.4",
+                "fragment-cache": "^0.2.1",
+                "kind-of": "^6.0.2",
+                "nanomatch": "^1.2.9",
+                "object.pick": "^1.3.0",
+                "regex-not": "^1.0.0",
+                "snapdragon": "^0.8.1",
+                "to-regex": "^3.0.2"
+            }
+        },
+        "mime-db": {
+            "version": "1.38.0",
+            "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.38.0.tgz",
+            "integrity": "sha512-bqVioMFFzc2awcdJZIzR3HjZFX20QhilVS7hytkKrv7xFAn8bM1gzc/FOX2awLISvWe0PV8ptFKcon+wZ5qYkg==",
+            "dev": true
+        },
+        "mime-types": {
+            "version": "2.1.22",
+            "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.22.tgz",
+            "integrity": "sha512-aGl6TZGnhm/li6F7yx82bJiBZwgiEa4Hf6CNr8YO+r5UHr53tSTYZb102zyU50DOWWKeOv0uQLRL0/9EiKWCog==",
+            "dev": true,
+            "requires": {
+                "mime-db": "~1.38.0"
+            }
+        },
+        "mimic-fn": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
+            "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
+            "dev": true
+        },
+        "mimic-response": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
+            "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
+            "dev": true
+        },
+        "min-document": {
+            "version": "2.19.0",
+            "resolved": "https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz",
+            "integrity": "sha1-e9KC4/WELtKVu3SM3Z8f+iyCRoU=",
+            "dev": true,
+            "requires": {
+                "dom-walk": "^0.1.0"
+            }
+        },
+        "minimatch": {
+            "version": "3.0.4",
+            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
+            "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
+            "dev": true,
+            "requires": {
+                "brace-expansion": "^1.1.7"
+            }
+        },
+        "minimist": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
+            "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",
+            "dev": true
+        },
+        "minimist-options": {
+            "version": "3.0.2",
+            "resolved": "https://registry.npmjs.org/minimist-options/-/minimist-options-3.0.2.tgz",
+            "integrity": "sha512-FyBrT/d0d4+uiZRbqznPXqw3IpZZG3gl3wKWiX784FycUKVwBt0uLBFkQrtE4tZOrgo78nZp2jnKz3L65T5LdQ==",
+            "dev": true,
+            "requires": {
+                "arrify": "^1.0.1",
+                "is-plain-obj": "^1.1.0"
+            }
+        },
+        "mixin-deep": {
+            "version": "1.3.1",
+            "resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.1.tgz",
+            "integrity": "sha512-8ZItLHeEgaqEvd5lYBXfm4EZSFCX29Jb9K+lAHhDKzReKBQKj3R+7NOF6tjqYi9t4oI8VUfaWITJQm86wnXGNQ==",
+            "dev": true,
+            "requires": {
+                "for-in": "^1.0.2",
+                "is-extendable": "^1.0.1"
+            },
+            "dependencies": {
+                "is-extendable": {
+                    "version": "1.0.1",
+                    "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
+                    "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
+                    "dev": true,
+                    "requires": {
+                        "is-plain-object": "^2.0.4"
+                    }
+                }
+            }
+        },
+        "mkdirp": {
+            "version": "0.5.1",
+            "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
+            "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
+            "dev": true,
+            "requires": {
+                "minimist": "0.0.8"
+            },
+            "dependencies": {
+                "minimist": {
+                    "version": "0.0.8",
+                    "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
+                    "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
+                    "dev": true
+                }
+            }
+        },
+        "ms": {
+            "version": "2.1.1",
+            "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
+            "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg==",
+            "dev": true
+        },
+        "multimatch": {
+            "version": "2.1.0",
+            "resolved": "https://registry.npmjs.org/multimatch/-/multimatch-2.1.0.tgz",
+            "integrity": "sha1-nHkGoi+0wCkZ4vX3UWG0zb1LKis=",
+            "dev": true,
+            "requires": {
+                "array-differ": "^1.0.0",
+                "array-union": "^1.0.1",
+                "arrify": "^1.0.0",
+                "minimatch": "^3.0.0"
+            }
+        },
+        "mute-stream": {
+            "version": "0.0.7",
+            "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",
+            "integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s=",
+            "dev": true
+        },
+        "nanomatch": {
+            "version": "1.2.13",
+            "resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",
+            "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",
+            "dev": true,
+            "requires": {
+                "arr-diff": "^4.0.0",
+                "array-unique": "^0.3.2",
+                "define-property": "^2.0.2",
+                "extend-shallow": "^3.0.2",
+                "fragment-cache": "^0.2.1",
+                "is-windows": "^1.0.2",
+                "kind-of": "^6.0.2",
+                "object.pick": "^1.3.0",
+                "regex-not": "^1.0.0",
+                "snapdragon": "^0.8.1",
+                "to-regex": "^3.0.1"
+            }
+        },
+        "nice-try": {
+            "version": "1.0.5",
+            "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
+            "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
+            "dev": true
+        },
+        "node-fetch": {
+            "version": "1.6.3",
+            "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-1.6.3.tgz",
+            "integrity": "sha1-3CNO3WSJmC1Y6PDbT2lQKavNjAQ=",
+            "dev": true,
+            "requires": {
+                "encoding": "^0.1.11",
+                "is-stream": "^1.0.1"
+            }
+        },
+        "normalize-package-data": {
+            "version": "2.5.0",
+            "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
+            "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
+            "dev": true,
+            "requires": {
+                "hosted-git-info": "^2.1.4",
+                "resolve": "^1.10.0",
+                "semver": "2 || 3 || 4 || 5",
+                "validate-npm-package-license": "^3.0.1"
+            }
+        },
+        "npm-run-path": {
+            "version": "2.0.2",
+            "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",
+            "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",
+            "dev": true,
+            "requires": {
+                "path-key": "^2.0.0"
+            }
+        },
+        "npmlog": {
+            "version": "2.0.4",
+            "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-2.0.4.tgz",
+            "integrity": "sha1-mLUlMPJRTKkNCexbIsiEZyI3VpI=",
+            "dev": true,
+            "requires": {
+                "ansi": "~0.3.1",
+                "are-we-there-yet": "~1.1.2",
+                "gauge": "~1.2.5"
+            }
+        },
+        "nth-check": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-1.0.2.tgz",
+            "integrity": "sha512-WeBOdju8SnzPN5vTUJYxYUxLeXpCaVP5i5e0LF8fg7WORF2Wd7wFX/pk0tYZk7s8T+J7VLy0Da6J1+wCT0AtHg==",
+            "dev": true,
+            "requires": {
+                "boolbase": "~1.0.0"
+            }
+        },
+        "number-is-nan": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
+            "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=",
+            "dev": true
+        },
+        "oauth-sign": {
+            "version": "0.9.0",
+            "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
+            "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
+            "dev": true
+        },
+        "object-assign": {
+            "version": "4.1.1",
+            "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+            "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
+            "dev": true
+        },
+        "object-copy": {
+            "version": "0.1.0",
+            "resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",
+            "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",
+            "dev": true,
+            "requires": {
+                "copy-descriptor": "^0.1.0",
+                "define-property": "^0.2.5",
+                "kind-of": "^3.0.3"
+            },
+            "dependencies": {
+                "define-property": {
+                    "version": "0.2.5",
+                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+                    "dev": true,
+                    "requires": {
+                        "is-descriptor": "^0.1.0"
+                    }
+                },
+                "kind-of": {
+                    "version": "3.2.2",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
+                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+                    "dev": true,
+                    "requires": {
+                        "is-buffer": "^1.1.5"
+                    }
+                }
+            }
+        },
+        "object-visit": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",
+            "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",
+            "dev": true,
+            "requires": {
+                "isobject": "^3.0.0"
+            }
+        },
+        "object.pick": {
+            "version": "1.3.0",
+            "resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",
+            "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
+            "dev": true,
+            "requires": {
+                "isobject": "^3.0.1"
+            }
+        },
+        "once": {
+            "version": "1.4.0",
+            "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+            "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
+            "dev": true,
+            "requires": {
+                "wrappy": "1"
+            }
+        },
+        "one-time": {
+            "version": "0.0.4",
+            "resolved": "https://registry.npmjs.org/one-time/-/one-time-0.0.4.tgz",
+            "integrity": "sha1-+M33eISCb+Tf+T46nMN7HkSAdC4=",
+            "dev": true
+        },
+        "onetime": {
+            "version": "2.0.1",
+            "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
+            "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
+            "dev": true,
+            "requires": {
+                "mimic-fn": "^1.0.0"
+            }
+        },
+        "opencollective": {
+            "version": "1.0.3",
+            "resolved": "https://registry.npmjs.org/opencollective/-/opencollective-1.0.3.tgz",
+            "integrity": "sha1-ruY3K8KBRFg2kMPKja7PwSDdDvE=",
+            "dev": true,
+            "requires": {
+                "babel-polyfill": "6.23.0",
+                "chalk": "1.1.3",
+                "inquirer": "3.0.6",
+                "minimist": "1.2.0",
+                "node-fetch": "1.6.3",
+                "opn": "4.0.2"
+            },
+            "dependencies": {
+                "ansi-escapes": {
+                    "version": "1.4.0",
+                    "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-1.4.0.tgz",
+                    "integrity": "sha1-06ioOzGapneTZisT52HHkRQiMG4=",
+                    "dev": true
+                },
+                "ansi-regex": {
+                    "version": "2.1.1",
+                    "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+                    "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
+                    "dev": true
+                },
+                "ansi-styles": {
+                    "version": "2.2.1",
+                    "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+                    "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
+                    "dev": true
+                },
+                "chalk": {
+                    "version": "1.1.3",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+                    "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^2.2.1",
+                        "escape-string-regexp": "^1.0.2",
+                        "has-ansi": "^2.0.0",
+                        "strip-ansi": "^3.0.0",
+                        "supports-color": "^2.0.0"
+                    }
+                },
+                "chardet": {
+                    "version": "0.4.2",
+                    "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",
+                    "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I=",
+                    "dev": true
+                },
+                "external-editor": {
+                    "version": "2.2.0",
+                    "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",
+                    "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",
+                    "dev": true,
+                    "requires": {
+                        "chardet": "^0.4.0",
+                        "iconv-lite": "^0.4.17",
+                        "tmp": "^0.0.33"
+                    }
+                },
+                "inquirer": {
+                    "version": "3.0.6",
+                    "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-3.0.6.tgz",
+                    "integrity": "sha1-4EqqnQW3o8ubD0B9BDdfBEcZA0c=",
+                    "dev": true,
+                    "requires": {
+                        "ansi-escapes": "^1.1.0",
+                        "chalk": "^1.0.0",
+                        "cli-cursor": "^2.1.0",
+                        "cli-width": "^2.0.0",
+                        "external-editor": "^2.0.1",
+                        "figures": "^2.0.0",
+                        "lodash": "^4.3.0",
+                        "mute-stream": "0.0.7",
+                        "run-async": "^2.2.0",
+                        "rx": "^4.1.0",
+                        "string-width": "^2.0.0",
+                        "strip-ansi": "^3.0.0",
+                        "through": "^2.3.6"
+                    }
+                },
+                "strip-ansi": {
+                    "version": "3.0.1",
+                    "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+                    "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+                    "dev": true,
+                    "requires": {
+                        "ansi-regex": "^2.0.0"
+                    }
+                },
+                "supports-color": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+                    "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
+                    "dev": true
+                }
+            }
+        },
+        "opn": {
+            "version": "4.0.2",
+            "resolved": "https://registry.npmjs.org/opn/-/opn-4.0.2.tgz",
+            "integrity": "sha1-erwi5kTf9jsKltWrfyeQwPAavJU=",
+            "dev": true,
+            "requires": {
+                "object-assign": "^4.0.1",
+                "pinkie-promise": "^2.0.0"
+            }
+        },
+        "os-homedir": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
+            "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
+            "dev": true
+        },
+        "os-locale": {
+            "version": "2.1.0",
+            "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-2.1.0.tgz",
+            "integrity": "sha512-3sslG3zJbEYcaC4YVAvDorjGxc7tv6KVATnLPZONiljsUncvihe9BQoVCEs0RZ1kmf4Hk9OBqlZfJZWI4GanKA==",
+            "dev": true,
+            "requires": {
+                "execa": "^0.7.0",
+                "lcid": "^1.0.0",
+                "mem": "^1.1.0"
+            }
+        },
+        "os-name": {
+            "version": "2.0.1",
+            "resolved": "https://registry.npmjs.org/os-name/-/os-name-2.0.1.tgz",
+            "integrity": "sha1-uaOGNhwXrjohc27wWZQFyajF3F4=",
+            "dev": true,
+            "requires": {
+                "macos-release": "^1.0.0",
+                "win-release": "^1.0.0"
+            }
+        },
+        "os-shim": {
+            "version": "0.1.3",
+            "resolved": "https://registry.npmjs.org/os-shim/-/os-shim-0.1.3.tgz",
+            "integrity": "sha1-a2LDeRz3kJ6jXtRuF2WLtBfLORc=",
+            "dev": true
+        },
+        "os-tmpdir": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
+            "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
+            "dev": true
+        },
+        "osenv": {
+            "version": "0.1.5",
+            "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",
+            "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
+            "dev": true,
+            "requires": {
+                "os-homedir": "^1.0.0",
+                "os-tmpdir": "^1.0.0"
+            }
+        },
+        "osx-release": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/osx-release/-/osx-release-1.1.0.tgz",
+            "integrity": "sha1-8heRGigTaUmvG/kwiyQeJzfTzWw=",
+            "dev": true,
+            "requires": {
+                "minimist": "^1.1.0"
+            }
+        },
+        "p-cancelable": {
+            "version": "0.3.0",
+            "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-0.3.0.tgz",
+            "integrity": "sha512-RVbZPLso8+jFeq1MfNvgXtCRED2raz/dKpacfTNxsx6pLEpEomM7gah6VeHSYV3+vo0OAi4MkArtQcWWXuQoyw==",
+            "dev": true
+        },
+        "p-finally": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
+            "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=",
+            "dev": true
+        },
+        "p-limit": {
+            "version": "2.2.0",
+            "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.2.0.tgz",
+            "integrity": "sha512-pZbTJpoUsCzV48Mc9Nh51VbwO0X9cuPFE8gYwx9BTCt9SF8/b7Zljd2fVgOxhIF/HDTKgpVzs+GPhyKfjLLFRQ==",
+            "dev": true,
+            "requires": {
+                "p-try": "^2.0.0"
+            }
+        },
+        "p-locate": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
+            "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
+            "dev": true,
+            "requires": {
+                "p-limit": "^2.0.0"
+            }
+        },
+        "p-timeout": {
+            "version": "1.2.1",
+            "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-1.2.1.tgz",
+            "integrity": "sha1-XrOzU7f86Z8QGhA4iAuwVOu+o4Y=",
+            "dev": true,
+            "requires": {
+                "p-finally": "^1.0.0"
+            }
+        },
+        "p-try": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.0.0.tgz",
+            "integrity": "sha512-hMp0onDKIajHfIkdRk3P4CdCmErkYAxxDtP3Wx/4nZ3aGlau2VKh3mZpcuFkH27WQkL/3WBCPOktzA9ZOAnMQQ==",
+            "dev": true
+        },
+        "parse-cache-control": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/parse-cache-control/-/parse-cache-control-1.0.1.tgz",
+            "integrity": "sha1-juqz5U+laSD+Fro493+iGqzC104=",
+            "dev": true
+        },
+        "parse-git-config": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/parse-git-config/-/parse-git-config-1.1.1.tgz",
+            "integrity": "sha1-06mYQxcTL1c5hxK7pDjhKVkN34w=",
+            "dev": true,
+            "requires": {
+                "extend-shallow": "^2.0.1",
+                "fs-exists-sync": "^0.1.0",
+                "git-config-path": "^1.0.1",
+                "ini": "^1.3.4"
+            },
+            "dependencies": {
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                }
+            }
+        },
+        "parse-gitignore": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/parse-gitignore/-/parse-gitignore-1.0.1.tgz",
+            "integrity": "sha512-UGyowyjtx26n65kdAMWhm6/3uy5uSrpcuH7tt+QEVudiBoVS+eqHxD5kbi9oWVRwj7sCzXqwuM+rUGw7earl6A==",
+            "dev": true
+        },
+        "parse-json": {
+            "version": "4.0.0",
+            "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
+            "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
+            "dev": true,
+            "requires": {
+                "error-ex": "^1.3.1",
+                "json-parse-better-errors": "^1.0.1"
+            }
+        },
+        "parse-passwd": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
+            "integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY=",
+            "dev": true
+        },
+        "pascalcase": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",
+            "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=",
+            "dev": true
+        },
+        "path": {
+            "version": "0.12.7",
+            "resolved": "https://registry.npmjs.org/path/-/path-0.12.7.tgz",
+            "integrity": "sha1-1NwqUGxM4hl+tIHr/NWzbAFAsQ8=",
+            "dev": true,
+            "requires": {
+                "process": "^0.11.1",
+                "util": "^0.10.3"
+            },
+            "dependencies": {
+                "process": {
+                    "version": "0.11.10",
+                    "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
+                    "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI=",
+                    "dev": true
+                }
+            }
+        },
+        "path-dirname": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",
+            "integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA=",
+            "dev": true
+        },
+        "path-exists": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
+            "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
+            "dev": true
+        },
+        "path-is-absolute": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+            "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
+            "dev": true
+        },
+        "path-key": {
+            "version": "2.0.1",
+            "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
+            "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
+            "dev": true
+        },
+        "path-parse": {
+            "version": "1.0.6",
+            "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
+            "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==",
+            "dev": true
+        },
+        "path-type": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
+            "integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
+            "dev": true,
+            "requires": {
+                "pify": "^3.0.0"
+            }
+        },
+        "performance-now": {
+            "version": "2.1.0",
+            "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
+            "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
+            "dev": true
+        },
+        "pify": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
+            "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
+            "dev": true
+        },
+        "pinkie": {
+            "version": "2.0.4",
+            "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
+            "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",
+            "dev": true
+        },
+        "pinkie-promise": {
+            "version": "2.0.1",
+            "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
+            "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
+            "dev": true,
+            "requires": {
+                "pinkie": "^2.0.0"
+            }
+        },
+        "pkg-up": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/pkg-up/-/pkg-up-2.0.0.tgz",
+            "integrity": "sha1-yBmscoBZpGHKscOImivjxJoATX8=",
+            "dev": true,
+            "requires": {
+                "find-up": "^2.1.0"
+            },
+            "dependencies": {
+                "find-up": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
+                    "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
+                    "dev": true,
+                    "requires": {
+                        "locate-path": "^2.0.0"
+                    }
+                },
+                "locate-path": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
+                    "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
+                    "dev": true,
+                    "requires": {
+                        "p-locate": "^2.0.0",
+                        "path-exists": "^3.0.0"
+                    }
+                },
+                "p-limit": {
+                    "version": "1.3.0",
+                    "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
+                    "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
+                    "dev": true,
+                    "requires": {
+                        "p-try": "^1.0.0"
+                    }
+                },
+                "p-locate": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
+                    "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
+                    "dev": true,
+                    "requires": {
+                        "p-limit": "^1.1.0"
+                    }
+                },
+                "p-try": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
+                    "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
+                    "dev": true
+                }
+            }
+        },
+        "plugin-error": {
+            "version": "0.1.2",
+            "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",
+            "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",
+            "dev": true,
+            "requires": {
+                "ansi-cyan": "^0.1.1",
+                "ansi-red": "^0.1.1",
+                "arr-diff": "^1.0.1",
+                "arr-union": "^2.0.1",
+                "extend-shallow": "^1.1.2"
+            },
+            "dependencies": {
+                "arr-diff": {
+                    "version": "1.1.0",
+                    "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",
+                    "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",
+                    "dev": true,
+                    "requires": {
+                        "arr-flatten": "^1.0.1",
+                        "array-slice": "^0.2.3"
+                    }
+                },
+                "arr-union": {
+                    "version": "2.1.0",
+                    "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",
+                    "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0=",
+                    "dev": true
+                },
+                "extend-shallow": {
+                    "version": "1.1.4",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",
+                    "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^1.1.0"
+                    }
+                },
+                "kind-of": {
+                    "version": "1.1.0",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",
+                    "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ=",
+                    "dev": true
+                }
+            }
+        },
+        "pluralize": {
+            "version": "7.0.0",
+            "resolved": "https://registry.npmjs.org/pluralize/-/pluralize-7.0.0.tgz",
+            "integrity": "sha512-ARhBOdzS3e41FbkW/XWrTEtukqqLoK5+Z/4UeDaLuSW+39JPeFgs4gCGqsrJHVZX0fUrx//4OF0K1CUGwlIFow==",
+            "dev": true
+        },
+        "posix-character-classes": {
+            "version": "0.1.1",
+            "resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
+            "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=",
+            "dev": true
+        },
+        "prepend-http": {
+            "version": "1.0.4",
+            "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-1.0.4.tgz",
+            "integrity": "sha1-1PRWKwzjaW5BrFLQ4ALlemNdxtw=",
+            "dev": true
+        },
+        "prettier": {
+            "version": "1.13.7",
+            "resolved": "https://registry.npmjs.org/prettier/-/prettier-1.13.7.tgz",
+            "integrity": "sha512-KIU72UmYPGk4MujZGYMFwinB7lOf2LsDNGSOC8ufevsrPLISrZbNJlWstRi3m0AMuszbH+EFSQ/r6w56RSPK6w==",
+            "dev": true
+        },
+        "pretty-bytes": {
+            "version": "5.1.0",
+            "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.1.0.tgz",
+            "integrity": "sha512-wa5+qGVg9Yt7PB6rYm3kXlKzgzgivYTLRandezh43jjRqgyDyP+9YxfJpJiLs9yKD1WeU8/OvtToWpW7255FtA==",
+            "dev": true
+        },
+        "process": {
+            "version": "0.5.2",
+            "resolved": "https://registry.npmjs.org/process/-/process-0.5.2.tgz",
+            "integrity": "sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8=",
+            "dev": true
+        },
+        "process-nextick-args": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.0.tgz",
+            "integrity": "sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw==",
+            "dev": true
+        },
+        "promise": {
+            "version": "8.0.2",
+            "resolved": "https://registry.npmjs.org/promise/-/promise-8.0.2.tgz",
+            "integrity": "sha512-EIyzM39FpVOMbqgzEHhxdrEhtOSDOtjMZQ0M6iVfCE+kWNgCkAyOdnuCWqfmflylftfadU6FkiMgHZA2kUzwRw==",
+            "dev": true,
+            "requires": {
+                "asap": "~2.0.6"
+            }
+        },
+        "pseudomap": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
+            "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
+            "dev": true
+        },
+        "psl": {
+            "version": "1.1.31",
+            "resolved": "https://registry.npmjs.org/psl/-/psl-1.1.31.tgz",
+            "integrity": "sha512-/6pt4+C+T+wZUieKR620OpzN/LlnNKuWjy1iFLQ/UG35JqHlR/89MP1d96dUfkf6Dne3TuLQzOYEYshJ+Hx8mw==",
+            "dev": true
+        },
+        "punycode": {
+            "version": "2.1.1",
+            "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
+            "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
+            "dev": true
+        },
+        "qs": {
+            "version": "6.5.2",
+            "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
+            "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
+            "dev": true
+        },
+        "quick-lru": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-1.1.0.tgz",
+            "integrity": "sha1-Q2CxfGETatOAeDl/8RQW4Ybc+7g=",
+            "dev": true
+        },
+        "randexp": {
+            "version": "0.4.9",
+            "resolved": "https://registry.npmjs.org/randexp/-/randexp-0.4.9.tgz",
+            "integrity": "sha512-maAX1cnBkzIZ89O4tSQUOF098xjGMC8N+9vuY/WfHwg87THw6odD2Br35donlj5e6KnB1SB0QBHhTQhhDHuTPQ==",
+            "dev": true,
+            "requires": {
+                "drange": "^1.0.0",
+                "ret": "^0.2.0"
+            },
+            "dependencies": {
+                "ret": {
+                    "version": "0.2.2",
+                    "resolved": "https://registry.npmjs.org/ret/-/ret-0.2.2.tgz",
+                    "integrity": "sha512-M0b3YWQs7R3Z917WRQy1HHA7Ba7D8hvZg6UE5mLykJxQVE2ju0IXbGlaHPPlkY+WN7wFP+wUMXmBFA0aV6vYGQ==",
+                    "dev": true
+                }
+            }
+        },
+        "read-chunk": {
+            "version": "3.1.0",
+            "resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-3.1.0.tgz",
+            "integrity": "sha512-ZdiZJXXoZYE08SzZvTipHhI+ZW0FpzxmFtLI3vIeMuRN9ySbIZ+SZawKogqJ7dxW9fJ/W73BNtxu4Zu/bZp+Ng==",
+            "dev": true,
+            "requires": {
+                "pify": "^4.0.1",
+                "with-open-file": "^0.1.5"
+            },
+            "dependencies": {
+                "pify": {
+                    "version": "4.0.1",
+                    "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
+                    "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
+                    "dev": true
+                }
+            }
+        },
+        "read-pkg": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",
+            "integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",
+            "dev": true,
+            "requires": {
+                "load-json-file": "^4.0.0",
+                "normalize-package-data": "^2.3.2",
+                "path-type": "^3.0.0"
+            }
+        },
+        "read-pkg-up": {
+            "version": "4.0.0",
+            "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-4.0.0.tgz",
+            "integrity": "sha512-6etQSH7nJGsK0RbG/2TeDzZFa8shjQ1um+SwQQ5cwKy0dhSXdOncEhb1CPpvQG4h7FyOV6EB6YlV0yJvZQNAkA==",
+            "dev": true,
+            "requires": {
+                "find-up": "^3.0.0",
+                "read-pkg": "^3.0.0"
+            }
+        },
+        "readable-stream": {
+            "version": "2.3.6",
+            "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
+            "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
+            "dev": true,
+            "requires": {
+                "core-util-is": "~1.0.0",
+                "inherits": "~2.0.3",
+                "isarray": "~1.0.0",
+                "process-nextick-args": "~2.0.0",
+                "safe-buffer": "~5.1.1",
+                "string_decoder": "~1.1.1",
+                "util-deprecate": "~1.0.1"
+            }
+        },
+        "readline2": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/readline2/-/readline2-1.0.1.tgz",
+            "integrity": "sha1-QQWWCP/BVHV7cV2ZidGZ/783LjU=",
+            "dev": true,
+            "requires": {
+                "code-point-at": "^1.0.0",
+                "is-fullwidth-code-point": "^1.0.0",
+                "mute-stream": "0.0.5"
+            },
+            "dependencies": {
+                "is-fullwidth-code-point": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
+                    "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
+                    "dev": true,
+                    "requires": {
+                        "number-is-nan": "^1.0.0"
+                    }
+                },
+                "mute-stream": {
+                    "version": "0.0.5",
+                    "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.5.tgz",
+                    "integrity": "sha1-j7+rsKmKJT0xhDMfno3rc3L6xsA=",
+                    "dev": true
+                }
+            }
+        },
+        "rechoir": {
+            "version": "0.6.2",
+            "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
+            "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",
+            "dev": true,
+            "requires": {
+                "resolve": "^1.1.6"
+            }
+        },
+        "redent": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/redent/-/redent-2.0.0.tgz",
+            "integrity": "sha1-wbIAe0LVfrE4kHmzyDM2OdXhzKo=",
+            "dev": true,
+            "requires": {
+                "indent-string": "^3.0.0",
+                "strip-indent": "^2.0.0"
+            }
+        },
+        "regenerator-runtime": {
+            "version": "0.10.5",
+            "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.10.5.tgz",
+            "integrity": "sha1-M2w+/BIgrc7dosn6tntaeVWjNlg=",
+            "dev": true
+        },
+        "regex-not": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",
+            "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
+            "dev": true,
+            "requires": {
+                "extend-shallow": "^3.0.2",
+                "safe-regex": "^1.1.0"
+            }
+        },
+        "regexp-to-ast": {
+            "version": "0.3.5",
+            "resolved": "https://registry.npmjs.org/regexp-to-ast/-/regexp-to-ast-0.3.5.tgz",
+            "integrity": "sha512-1CJygtdvsfNFwiyjaMLBWtg2tfEqx/jSZ8S6TV+GlNL8kiH8rb4cm5Pb7A/C2BpyM/fA8ZJEudlCwi/jvAY+Ow==",
+            "dev": true
+        },
+        "remote-origin-url": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/remote-origin-url/-/remote-origin-url-1.0.0.tgz",
+            "integrity": "sha512-xHDM6IBqivpiQ1e4WOuFpM/T6rbzA/WBsu+3WLtgPOhHyjA0nYlijV3NprlTb4FcXlQ5+Q+z174sQ1NnUF5FwA==",
+            "dev": true,
+            "requires": {
+                "parse-git-config": "^1.1.1"
+            }
+        },
+        "remove-trailing-separator": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
+            "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8=",
+            "dev": true
+        },
+        "repeat-element": {
+            "version": "1.1.3",
+            "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz",
+            "integrity": "sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g==",
+            "dev": true
+        },
+        "repeat-string": {
+            "version": "1.6.1",
+            "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
+            "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
+            "dev": true
+        },
+        "repeating": {
+            "version": "2.0.1",
+            "resolved": "https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz",
+            "integrity": "sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=",
+            "dev": true,
+            "requires": {
+                "is-finite": "^1.0.0"
+            }
+        },
+        "replace-ext": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-1.0.0.tgz",
+            "integrity": "sha1-3mMSg3P8v3w8z6TeWkgMRaZ5WOs=",
+            "dev": true
+        },
+        "request": {
+            "version": "2.88.0",
+            "resolved": "https://registry.npmjs.org/request/-/request-2.88.0.tgz",
+            "integrity": "sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==",
+            "dev": true,
+            "requires": {
+                "aws-sign2": "~0.7.0",
+                "aws4": "^1.8.0",
+                "caseless": "~0.12.0",
+                "combined-stream": "~1.0.6",
+                "extend": "~3.0.2",
+                "forever-agent": "~0.6.1",
+                "form-data": "~2.3.2",
+                "har-validator": "~5.1.0",
+                "http-signature": "~1.2.0",
+                "is-typedarray": "~1.0.0",
+                "isstream": "~0.1.2",
+                "json-stringify-safe": "~5.0.1",
+                "mime-types": "~2.1.19",
+                "oauth-sign": "~0.9.0",
+                "performance-now": "^2.1.0",
+                "qs": "~6.5.2",
+                "safe-buffer": "^5.1.2",
+                "tough-cookie": "~2.4.3",
+                "tunnel-agent": "^0.6.0",
+                "uuid": "^3.3.2"
+            },
+            "dependencies": {
+                "punycode": {
+                    "version": "1.4.1",
+                    "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
+                    "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4=",
+                    "dev": true
+                },
+                "tough-cookie": {
+                    "version": "2.4.3",
+                    "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.4.3.tgz",
+                    "integrity": "sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==",
+                    "dev": true,
+                    "requires": {
+                        "psl": "^1.1.24",
+                        "punycode": "^1.4.1"
+                    }
+                }
+            }
+        },
+        "resolve": {
+            "version": "1.10.0",
+            "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.10.0.tgz",
+            "integrity": "sha512-3sUr9aq5OfSg2S9pNtPA9hL1FVEAjvfOC4leW0SNf/mpnaakz2a9femSd6LqAww2RaFctwyf1lCqnTHuF1rxDg==",
+            "dev": true,
+            "requires": {
+                "path-parse": "^1.0.6"
+            }
+        },
+        "resolve-url": {
+            "version": "0.2.1",
+            "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",
+            "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=",
+            "dev": true
+        },
+        "restore-cursor": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
+            "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
+            "dev": true,
+            "requires": {
+                "onetime": "^2.0.0",
+                "signal-exit": "^3.0.2"
+            }
+        },
+        "ret": {
+            "version": "0.1.15",
+            "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
+            "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==",
+            "dev": true
+        },
+        "rimraf": {
+            "version": "2.6.3",
+            "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz",
+            "integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",
+            "dev": true,
+            "requires": {
+                "glob": "^7.1.3"
+            }
+        },
+        "run-async": {
+            "version": "2.3.0",
+            "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",
+            "integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
+            "dev": true,
+            "requires": {
+                "is-promise": "^2.1.0"
+            }
+        },
+        "rx": {
+            "version": "4.1.0",
+            "resolved": "https://registry.npmjs.org/rx/-/rx-4.1.0.tgz",
+            "integrity": "sha1-pfE/957zt0D+MKqAP7CfmIBdR4I=",
+            "dev": true
+        },
+        "rx-lite": {
+            "version": "3.1.2",
+            "resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-3.1.2.tgz",
+            "integrity": "sha1-Gc5QLKVyZl87ZHsQk5+X/RYV8QI=",
+            "dev": true
+        },
+        "rx-lite-aggregates": {
+            "version": "4.0.8",
+            "resolved": "https://registry.npmjs.org/rx-lite-aggregates/-/rx-lite-aggregates-4.0.8.tgz",
+            "integrity": "sha1-dTuHqJoRyVRnxKwWJsTvxOBcZ74=",
+            "dev": true,
+            "requires": {
+                "rx-lite": "*"
+            }
+        },
+        "rxjs": {
+            "version": "6.4.0",
+            "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.4.0.tgz",
+            "integrity": "sha512-Z9Yfa11F6B9Sg/BK9MnqnQ+aQYicPLtilXBp2yUtDt2JRCE0h26d33EnfO3ZxoNxG0T92OUucP3Ct7cpfkdFfw==",
+            "dev": true,
+            "requires": {
+                "tslib": "^1.9.0"
+            }
+        },
+        "safe-buffer": {
+            "version": "5.1.2",
+            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+            "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
+            "dev": true
+        },
+        "safe-regex": {
+            "version": "1.1.0",
+            "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",
+            "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
+            "dev": true,
+            "requires": {
+                "ret": "~0.1.10"
+            }
+        },
+        "safer-buffer": {
+            "version": "2.1.2",
+            "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
+            "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
+            "dev": true
+        },
+        "sax": {
+            "version": "1.2.4",
+            "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
+            "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==",
+            "dev": true
+        },
+        "scoped-regex": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/scoped-regex/-/scoped-regex-1.0.0.tgz",
+            "integrity": "sha1-o0a7Gs1CB65wvXwMfKnlZra63bg=",
+            "dev": true
+        },
+        "semver": {
+            "version": "5.6.0",
+            "resolved": "https://registry.npmjs.org/semver/-/semver-5.6.0.tgz",
+            "integrity": "sha512-RS9R6R35NYgQn++fkDWaOmqGoj4Ek9gGs+DPxNUZKuwE183xjJroKvyo1IzVFeXvUrvmALy6FWD5xrdJT25gMg==",
+            "dev": true
+        },
+        "set-value": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.0.tgz",
+            "integrity": "sha512-hw0yxk9GT/Hr5yJEYnHNKYXkIA8mVJgd9ditYZCe16ZczcaELYYcfvaXesNACk2O8O0nTiPQcQhGUQj8JLzeeg==",
+            "dev": true,
+            "requires": {
+                "extend-shallow": "^2.0.1",
+                "is-extendable": "^0.1.1",
+                "is-plain-object": "^2.0.3",
+                "split-string": "^3.0.1"
+            },
+            "dependencies": {
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                }
+            }
+        },
+        "shebang-command": {
+            "version": "1.2.0",
+            "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
+            "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
+            "dev": true,
+            "requires": {
+                "shebang-regex": "^1.0.0"
+            }
+        },
+        "shebang-regex": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
+            "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
+            "dev": true
+        },
+        "shelljs": {
+            "version": "0.8.3",
+            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.3.tgz",
+            "integrity": "sha512-fc0BKlAWiLpwZljmOvAOTE/gXawtCoNrP5oaY7KIaQbbyHeQVg01pSEuEGvGh3HEdBU4baCD7wQBwADmM/7f7A==",
+            "dev": true,
+            "requires": {
+                "glob": "^7.0.0",
+                "interpret": "^1.0.0",
+                "rechoir": "^0.6.2"
+            }
+        },
+        "signal-exit": {
+            "version": "3.0.2",
+            "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
+            "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=",
+            "dev": true
+        },
+        "simple-swizzle": {
+            "version": "0.2.2",
+            "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
+            "integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
+            "dev": true,
+            "requires": {
+                "is-arrayish": "^0.3.1"
+            },
+            "dependencies": {
+                "is-arrayish": {
+                    "version": "0.3.2",
+                    "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
+                    "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
+                    "dev": true
+                }
+            }
+        },
+        "slash": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
+            "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU=",
+            "dev": true
+        },
+        "slide": {
+            "version": "1.1.6",
+            "resolved": "https://registry.npmjs.org/slide/-/slide-1.1.6.tgz",
+            "integrity": "sha1-VusCfWW00tzmyy4tMsTUr8nh1wc=",
+            "dev": true
+        },
+        "snapdragon": {
+            "version": "0.8.2",
+            "resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",
+            "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",
+            "dev": true,
+            "requires": {
+                "base": "^0.11.1",
+                "debug": "^2.2.0",
+                "define-property": "^0.2.5",
+                "extend-shallow": "^2.0.1",
+                "map-cache": "^0.2.2",
+                "source-map": "^0.5.6",
+                "source-map-resolve": "^0.5.0",
+                "use": "^3.1.0"
+            },
+            "dependencies": {
+                "debug": {
+                    "version": "2.6.9",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+                    "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "2.0.0"
+                    }
+                },
+                "define-property": {
+                    "version": "0.2.5",
+                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+                    "dev": true,
+                    "requires": {
+                        "is-descriptor": "^0.1.0"
+                    }
+                },
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                },
+                "ms": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+                    "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
+                    "dev": true
+                }
+            }
+        },
+        "snapdragon-node": {
+            "version": "2.1.1",
+            "resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
+            "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",
+            "dev": true,
+            "requires": {
+                "define-property": "^1.0.0",
+                "isobject": "^3.0.0",
+                "snapdragon-util": "^3.0.1"
+            },
+            "dependencies": {
+                "define-property": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
+                    "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+                    "dev": true,
+                    "requires": {
+                        "is-descriptor": "^1.0.0"
+                    }
+                },
+                "is-accessor-descriptor": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+                    "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^6.0.0"
+                    }
+                },
+                "is-data-descriptor": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+                    "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
+                    "dev": true,
+                    "requires": {
+                        "kind-of": "^6.0.0"
+                    }
+                },
+                "is-descriptor": {
+                    "version": "1.0.2",
+                    "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
+                    "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
+                    "dev": true,
+                    "requires": {
+                        "is-accessor-descriptor": "^1.0.0",
+                        "is-data-descriptor": "^1.0.0",
+                        "kind-of": "^6.0.2"
+                    }
+                }
+            }
+        },
+        "snapdragon-util": {
+            "version": "3.0.1",
+            "resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
+            "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",
+            "dev": true,
+            "requires": {
+                "kind-of": "^3.2.0"
+            },
+            "dependencies": {
+                "kind-of": {
+                    "version": "3.2.2",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
+                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+                    "dev": true,
+                    "requires": {
+                        "is-buffer": "^1.1.5"
+                    }
+                }
+            }
+        },
+        "source-map": {
+            "version": "0.5.7",
+            "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
+            "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
+            "dev": true
+        },
+        "source-map-resolve": {
+            "version": "0.5.2",
+            "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.2.tgz",
+            "integrity": "sha512-MjqsvNwyz1s0k81Goz/9vRBe9SZdB09Bdw+/zYyO+3CuPk6fouTaxscHkgtE8jKvf01kVfl8riHzERQ/kefaSA==",
+            "dev": true,
+            "requires": {
+                "atob": "^2.1.1",
+                "decode-uri-component": "^0.2.0",
+                "resolve-url": "^0.2.1",
+                "source-map-url": "^0.4.0",
+                "urix": "^0.1.0"
+            }
+        },
+        "source-map-url": {
+            "version": "0.4.0",
+            "resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",
+            "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM=",
+            "dev": true
+        },
+        "spawn-sync": {
+            "version": "1.0.15",
+            "resolved": "https://registry.npmjs.org/spawn-sync/-/spawn-sync-1.0.15.tgz",
+            "integrity": "sha1-sAeZVX63+wyDdsKdROih6mfldHY=",
+            "dev": true,
+            "requires": {
+                "concat-stream": "^1.4.7",
+                "os-shim": "^0.1.2"
+            }
+        },
+        "spdx-correct": {
+            "version": "3.1.0",
+            "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.0.tgz",
+            "integrity": "sha512-lr2EZCctC2BNR7j7WzJ2FpDznxky1sjfxvvYEyzxNyb6lZXHODmEoJeFu4JupYlkfha1KZpJyoqiJ7pgA1qq8Q==",
+            "dev": true,
+            "requires": {
+                "spdx-expression-parse": "^3.0.0",
+                "spdx-license-ids": "^3.0.0"
+            }
+        },
+        "spdx-exceptions": {
+            "version": "2.2.0",
+            "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.2.0.tgz",
+            "integrity": "sha512-2XQACfElKi9SlVb1CYadKDXvoajPgBVPn/gOQLrTvHdElaVhr7ZEbqJaRnJLVNeaI4cMEAgVCeBMKF6MWRDCRA==",
+            "dev": true
+        },
+        "spdx-expression-parse": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz",
+            "integrity": "sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==",
+            "dev": true,
+            "requires": {
+                "spdx-exceptions": "^2.1.0",
+                "spdx-license-ids": "^3.0.0"
+            }
+        },
+        "spdx-license-ids": {
+            "version": "3.0.3",
+            "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.3.tgz",
+            "integrity": "sha512-uBIcIl3Ih6Phe3XHK1NqboJLdGfwr1UN3k6wSD1dZpmPsIkb8AGNbZYJ1fOBk834+Gxy8rpfDxrS6XLEMZMY2g==",
+            "dev": true
+        },
+        "split-string": {
+            "version": "3.1.0",
+            "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",
+            "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
+            "dev": true,
+            "requires": {
+                "extend-shallow": "^3.0.0"
+            }
+        },
+        "sprintf-js": {
+            "version": "1.0.3",
+            "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
+            "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
+            "dev": true
+        },
+        "sshpk": {
+            "version": "1.16.1",
+            "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
+            "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
+            "dev": true,
+            "requires": {
+                "asn1": "~0.2.3",
+                "assert-plus": "^1.0.0",
+                "bcrypt-pbkdf": "^1.0.0",
+                "dashdash": "^1.12.0",
+                "ecc-jsbn": "~0.1.1",
+                "getpass": "^0.1.1",
+                "jsbn": "~0.1.0",
+                "safer-buffer": "^2.0.2",
+                "tweetnacl": "~0.14.0"
+            }
+        },
+        "stack-trace": {
+            "version": "0.0.10",
+            "resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz",
+            "integrity": "sha1-VHxws0fo0ytOEI6hoqFZ5f3eGcA=",
+            "dev": true
+        },
+        "static-extend": {
+            "version": "0.1.2",
+            "resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",
+            "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
+            "dev": true,
+            "requires": {
+                "define-property": "^0.2.5",
+                "object-copy": "^0.1.0"
+            },
+            "dependencies": {
+                "define-property": {
+                    "version": "0.2.5",
+                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
+                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+                    "dev": true,
+                    "requires": {
+                        "is-descriptor": "^0.1.0"
+                    }
+                }
+            }
+        },
+        "streamfilter": {
+            "version": "1.0.7",
+            "resolved": "https://registry.npmjs.org/streamfilter/-/streamfilter-1.0.7.tgz",
+            "integrity": "sha512-Gk6KZM+yNA1JpW0KzlZIhjo3EaBJDkYfXtYSbOwNIQ7Zd6006E6+sCFlW1NDvFG/vnXhKmw6TJJgiEQg/8lXfQ==",
+            "dev": true,
+            "requires": {
+                "readable-stream": "^2.0.2"
+            }
+        },
+        "string-template": {
+            "version": "0.2.1",
+            "resolved": "https://registry.npmjs.org/string-template/-/string-template-0.2.1.tgz",
+            "integrity": "sha1-QpMuWYo1LQH8IuwzZ9nYTuxsmt0=",
+            "dev": true
+        },
+        "string-width": {
+            "version": "2.1.1",
+            "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
+            "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+            "dev": true,
+            "requires": {
+                "is-fullwidth-code-point": "^2.0.0",
+                "strip-ansi": "^4.0.0"
+            }
+        },
+        "string_decoder": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+            "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+            "dev": true,
+            "requires": {
+                "safe-buffer": "~5.1.0"
+            }
+        },
+        "strip-ansi": {
+            "version": "4.0.0",
+            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
+            "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+            "dev": true,
+            "requires": {
+                "ansi-regex": "^3.0.0"
+            }
+        },
+        "strip-bom": {
+            "version": "3.0.0",
+            "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
+            "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
+            "dev": true
+        },
+        "strip-bom-stream": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/strip-bom-stream/-/strip-bom-stream-2.0.0.tgz",
+            "integrity": "sha1-+H217yYT9paKpUWr/h7HKLaoKco=",
+            "dev": true,
+            "requires": {
+                "first-chunk-stream": "^2.0.0",
+                "strip-bom": "^2.0.0"
+            },
+            "dependencies": {
+                "strip-bom": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
+                    "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
+                    "dev": true,
+                    "requires": {
+                        "is-utf8": "^0.2.0"
+                    }
+                }
+            }
+        },
+        "strip-eof": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
+            "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
+            "dev": true
+        },
+        "strip-indent": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-2.0.0.tgz",
+            "integrity": "sha1-XvjbKV0B5u1sv3qrlpmNeCJSe2g=",
+            "dev": true
+        },
+        "supports-color": {
+            "version": "5.5.0",
+            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
+            "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
+            "dev": true,
+            "requires": {
+                "has-flag": "^3.0.0"
+            }
+        },
+        "symbol-observable": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.0.1.tgz",
+            "integrity": "sha1-g0D8RwLDEi310iKI+IKD9RPT/dQ=",
+            "dev": true
+        },
+        "sync-request": {
+            "version": "6.0.0",
+            "resolved": "https://registry.npmjs.org/sync-request/-/sync-request-6.0.0.tgz",
+            "integrity": "sha512-jGNIAlCi9iU4X3Dm4oQnNQshDD3h0/1A7r79LyqjbjUnj69sX6mShAXlhRXgImsfVKtTcnra1jfzabdZvp+Lmw==",
+            "dev": true,
+            "requires": {
+                "http-response-object": "^3.0.1",
+                "sync-rpc": "^1.2.1",
+                "then-request": "^6.0.0"
+            }
+        },
+        "sync-rpc": {
+            "version": "1.3.4",
+            "resolved": "https://registry.npmjs.org/sync-rpc/-/sync-rpc-1.3.4.tgz",
+            "integrity": "sha512-Iug+t1ICVFenUcTnDu8WXFnT+k8IVoLKGh8VA3eXUtl2Rt9SjKX3YEv33OenABqpTPL9QEaHv1+CNn2LK8vMow==",
+            "dev": true,
+            "requires": {
+                "get-port": "^3.1.0"
+            }
+        },
+        "tabtab": {
+            "version": "2.2.2",
+            "resolved": "https://registry.npmjs.org/tabtab/-/tabtab-2.2.2.tgz",
+            "integrity": "sha1-egR/FDsBC0y9MfhX6ClhUSy/ThQ=",
+            "dev": true,
+            "requires": {
+                "debug": "^2.2.0",
+                "inquirer": "^1.0.2",
+                "lodash.difference": "^4.5.0",
+                "lodash.uniq": "^4.5.0",
+                "minimist": "^1.2.0",
+                "mkdirp": "^0.5.1",
+                "npmlog": "^2.0.3",
+                "object-assign": "^4.1.0"
+            },
+            "dependencies": {
+                "ansi-escapes": {
+                    "version": "1.4.0",
+                    "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-1.4.0.tgz",
+                    "integrity": "sha1-06ioOzGapneTZisT52HHkRQiMG4=",
+                    "dev": true
+                },
+                "ansi-regex": {
+                    "version": "2.1.1",
+                    "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
+                    "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
+                    "dev": true
+                },
+                "ansi-styles": {
+                    "version": "2.2.1",
+                    "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
+                    "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
+                    "dev": true
+                },
+                "chalk": {
+                    "version": "1.1.3",
+                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
+                    "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
+                    "dev": true,
+                    "requires": {
+                        "ansi-styles": "^2.2.1",
+                        "escape-string-regexp": "^1.0.2",
+                        "has-ansi": "^2.0.0",
+                        "strip-ansi": "^3.0.0",
+                        "supports-color": "^2.0.0"
+                    }
+                },
+                "cli-cursor": {
+                    "version": "1.0.2",
+                    "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-1.0.2.tgz",
+                    "integrity": "sha1-ZNo/fValRBLll5S9Ytw1KV6PKYc=",
+                    "dev": true,
+                    "requires": {
+                        "restore-cursor": "^1.0.1"
+                    }
+                },
+                "debug": {
+                    "version": "2.6.9",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
+                    "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "2.0.0"
+                    }
+                },
+                "external-editor": {
+                    "version": "1.1.1",
+                    "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-1.1.1.tgz",
+                    "integrity": "sha1-Etew24UPf/fnCBuvQAVwAGDEYAs=",
+                    "dev": true,
+                    "requires": {
+                        "extend": "^3.0.0",
+                        "spawn-sync": "^1.0.15",
+                        "tmp": "^0.0.29"
+                    }
+                },
+                "figures": {
+                    "version": "1.7.0",
+                    "resolved": "https://registry.npmjs.org/figures/-/figures-1.7.0.tgz",
+                    "integrity": "sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=",
+                    "dev": true,
+                    "requires": {
+                        "escape-string-regexp": "^1.0.5",
+                        "object-assign": "^4.1.0"
+                    }
+                },
+                "inquirer": {
+                    "version": "1.2.3",
+                    "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-1.2.3.tgz",
+                    "integrity": "sha1-TexvMvN+97sLLtPx0aXD9UUHSRg=",
+                    "dev": true,
+                    "requires": {
+                        "ansi-escapes": "^1.1.0",
+                        "chalk": "^1.0.0",
+                        "cli-cursor": "^1.0.1",
+                        "cli-width": "^2.0.0",
+                        "external-editor": "^1.1.0",
+                        "figures": "^1.3.5",
+                        "lodash": "^4.3.0",
+                        "mute-stream": "0.0.6",
+                        "pinkie-promise": "^2.0.0",
+                        "run-async": "^2.2.0",
+                        "rx": "^4.1.0",
+                        "string-width": "^1.0.1",
+                        "strip-ansi": "^3.0.0",
+                        "through": "^2.3.6"
+                    }
+                },
+                "is-fullwidth-code-point": {
+                    "version": "1.0.0",
+                    "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
+                    "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
+                    "dev": true,
+                    "requires": {
+                        "number-is-nan": "^1.0.0"
+                    }
+                },
+                "ms": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
+                    "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
+                    "dev": true
+                },
+                "mute-stream": {
+                    "version": "0.0.6",
+                    "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.6.tgz",
+                    "integrity": "sha1-SJYrGeFp/R38JAs/HnMXYnu8R9s=",
+                    "dev": true
+                },
+                "onetime": {
+                    "version": "1.1.0",
+                    "resolved": "https://registry.npmjs.org/onetime/-/onetime-1.1.0.tgz",
+                    "integrity": "sha1-ofeDj4MUxRbwXs78vEzP4EtO14k=",
+                    "dev": true
+                },
+                "restore-cursor": {
+                    "version": "1.0.1",
+                    "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-1.0.1.tgz",
+                    "integrity": "sha1-NGYfRohjJ/7SmRR5FSJS35LapUE=",
+                    "dev": true,
+                    "requires": {
+                        "exit-hook": "^1.0.0",
+                        "onetime": "^1.0.0"
+                    }
+                },
+                "string-width": {
+                    "version": "1.0.2",
+                    "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
+                    "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
+                    "dev": true,
+                    "requires": {
+                        "code-point-at": "^1.0.0",
+                        "is-fullwidth-code-point": "^1.0.0",
+                        "strip-ansi": "^3.0.0"
+                    }
+                },
+                "strip-ansi": {
+                    "version": "3.0.1",
+                    "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
+                    "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
+                    "dev": true,
+                    "requires": {
+                        "ansi-regex": "^2.0.0"
+                    }
+                },
+                "supports-color": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
+                    "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
+                    "dev": true
+                },
+                "tmp": {
+                    "version": "0.0.29",
+                    "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.29.tgz",
+                    "integrity": "sha1-8lEl/w3Z2jzLDC3Tce4SiLuRKMA=",
+                    "dev": true,
+                    "requires": {
+                        "os-tmpdir": "~1.0.1"
+                    }
+                }
+            }
+        },
+        "text-hex": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/text-hex/-/text-hex-1.0.0.tgz",
+            "integrity": "sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==",
+            "dev": true
+        },
+        "text-table": {
+            "version": "0.2.0",
+            "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
+            "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",
+            "dev": true
+        },
+        "textextensions": {
+            "version": "2.4.0",
+            "resolved": "https://registry.npmjs.org/textextensions/-/textextensions-2.4.0.tgz",
+            "integrity": "sha512-qftQXnX1DzpSV8EddtHIT0eDDEiBF8ywhFYR2lI9xrGtxqKN+CvLXhACeCIGbCpQfxxERbrkZEFb8cZcDKbVZA==",
+            "dev": true
+        },
+        "then-request": {
+            "version": "6.0.0",
+            "resolved": "https://registry.npmjs.org/then-request/-/then-request-6.0.0.tgz",
+            "integrity": "sha512-xA+7uEMc+jsQIoyySJ93Ad08Kuqnik7u6jLS5hR91Z3smAoCfL3M8/MqMlobAa9gzBfO9pA88A/AntfepkkMJQ==",
+            "dev": true,
+            "requires": {
+                "@types/concat-stream": "^1.6.0",
+                "@types/form-data": "0.0.33",
+                "@types/node": "^8.0.0",
+                "@types/qs": "^6.2.31",
+                "caseless": "~0.12.0",
+                "concat-stream": "^1.6.0",
+                "form-data": "^2.2.0",
+                "http-basic": "^7.0.0",
+                "http-response-object": "^3.0.1",
+                "promise": "^8.0.0",
+                "qs": "^6.4.0"
+            },
+            "dependencies": {
+                "@types/node": {
+                    "version": "8.10.44",
+                    "resolved": "https://registry.npmjs.org/@types/node/-/node-8.10.44.tgz",
+                    "integrity": "sha512-HY3SK7egERHGUfY8p6ztXIEQWcIPHouYhCGcLAPQin7gE2G/fALFz+epnMwcxKUS6aKqTVoAFdi+t1llQd3xcw==",
+                    "dev": true
+                }
+            }
+        },
+        "through": {
+            "version": "2.3.8",
+            "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
+            "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
+            "dev": true
+        },
+        "through2": {
+            "version": "3.0.1",
+            "resolved": "https://registry.npmjs.org/through2/-/through2-3.0.1.tgz",
+            "integrity": "sha512-M96dvTalPT3YbYLaKaCuwu+j06D/8Jfib0o/PxbVt6Amhv3dUAtW6rTV1jPgJSBG83I/e04Y6xkVdVhSRhi0ww==",
+            "dev": true,
+            "requires": {
+                "readable-stream": "2 || 3"
+            }
+        },
+        "timed-out": {
+            "version": "4.0.1",
+            "resolved": "https://registry.npmjs.org/timed-out/-/timed-out-4.0.1.tgz",
+            "integrity": "sha1-8y6srFoXW+ol1/q1Zas+2HQe9W8=",
+            "dev": true
+        },
+        "tmp": {
+            "version": "0.0.33",
+            "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
+            "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
+            "dev": true,
+            "requires": {
+                "os-tmpdir": "~1.0.2"
+            }
+        },
+        "to-object-path": {
+            "version": "0.3.0",
+            "resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",
+            "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",
+            "dev": true,
+            "requires": {
+                "kind-of": "^3.0.2"
+            },
+            "dependencies": {
+                "kind-of": {
+                    "version": "3.2.2",
+                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
+                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+                    "dev": true,
+                    "requires": {
+                        "is-buffer": "^1.1.5"
+                    }
+                }
+            }
+        },
+        "to-regex": {
+            "version": "3.0.2",
+            "resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",
+            "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",
+            "dev": true,
+            "requires": {
+                "define-property": "^2.0.2",
+                "extend-shallow": "^3.0.2",
+                "regex-not": "^1.0.2",
+                "safe-regex": "^1.1.0"
+            }
+        },
+        "to-regex-range": {
+            "version": "2.1.1",
+            "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
+            "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
+            "dev": true,
+            "requires": {
+                "is-number": "^3.0.0",
+                "repeat-string": "^1.6.1"
+            }
+        },
+        "tough-cookie": {
+            "version": "2.5.0",
+            "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
+            "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
+            "dev": true,
+            "requires": {
+                "psl": "^1.1.28",
+                "punycode": "^2.1.1"
+            }
+        },
+        "trim-newlines": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-2.0.0.tgz",
+            "integrity": "sha1-tAPQuRvlDDMd/EuC7s6yLD3hbSA=",
+            "dev": true
+        },
+        "triple-beam": {
+            "version": "1.3.0",
+            "resolved": "https://registry.npmjs.org/triple-beam/-/triple-beam-1.3.0.tgz",
+            "integrity": "sha512-XrHUvV5HpdLmIj4uVMxHggLbFSZYIn7HEWsqePZcI50pco+MPqJ50wMGY794X7AOOhxOBAjbkqfAbEe/QMp2Lw==",
+            "dev": true
+        },
+        "tslib": {
+            "version": "1.9.3",
+            "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.9.3.tgz",
+            "integrity": "sha512-4krF8scpejhaOgqzBEcGM7yDIEfi0/8+8zDRZhNZZ2kjmHJ4hv3zCbQWxoJGz1iw5U0Jl0nma13xzHXcncMavQ==",
+            "dev": true
+        },
+        "tunnel-agent": {
+            "version": "0.6.0",
+            "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
+            "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
+            "dev": true,
+            "requires": {
+                "safe-buffer": "^5.0.1"
+            }
+        },
+        "tweetnacl": {
+            "version": "0.14.5",
+            "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
+            "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
+            "dev": true
+        },
+        "typedarray": {
+            "version": "0.0.6",
+            "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
+            "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=",
+            "dev": true
+        },
+        "underscore": {
+            "version": "1.9.1",
+            "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.9.1.tgz",
+            "integrity": "sha512-5/4etnCkd9c8gwgowi5/om/mYO5ajCaOgdzj/oW+0eQV9WxKBDZw5+ycmKmeaTXjInS/W0BzpGLo2xR2aBwZdg==",
+            "dev": true
+        },
+        "underscore.string": {
+            "version": "3.3.4",
+            "resolved": "https://registry.npmjs.org/underscore.string/-/underscore.string-3.3.4.tgz",
+            "integrity": "sha1-LCo/n4PmR2L9xF5s6sZRQoZCE9s=",
+            "dev": true,
+            "requires": {
+                "sprintf-js": "^1.0.3",
+                "util-deprecate": "^1.0.2"
+            }
+        },
+        "union-value": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.0.tgz",
+            "integrity": "sha1-XHHDTLW61dzr4+oM0IIHulqhrqQ=",
+            "dev": true,
+            "requires": {
+                "arr-union": "^3.1.0",
+                "get-value": "^2.0.6",
+                "is-extendable": "^0.1.1",
+                "set-value": "^0.4.3"
+            },
+            "dependencies": {
+                "extend-shallow": {
+                    "version": "2.0.1",
+                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
+                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+                    "dev": true,
+                    "requires": {
+                        "is-extendable": "^0.1.0"
+                    }
+                },
+                "set-value": {
+                    "version": "0.4.3",
+                    "resolved": "https://registry.npmjs.org/set-value/-/set-value-0.4.3.tgz",
+                    "integrity": "sha1-fbCPnT0i3H945Trzw79GZuzfzPE=",
+                    "dev": true,
+                    "requires": {
+                        "extend-shallow": "^2.0.1",
+                        "is-extendable": "^0.1.1",
+                        "is-plain-object": "^2.0.1",
+                        "to-object-path": "^0.3.0"
+                    }
+                }
+            }
+        },
+        "universalify": {
+            "version": "0.1.2",
+            "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
+            "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==",
+            "dev": true
+        },
+        "unset-value": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",
+            "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",
+            "dev": true,
+            "requires": {
+                "has-value": "^0.3.1",
+                "isobject": "^3.0.0"
+            },
+            "dependencies": {
+                "has-value": {
+                    "version": "0.3.1",
+                    "resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",
+                    "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",
+                    "dev": true,
+                    "requires": {
+                        "get-value": "^2.0.3",
+                        "has-values": "^0.1.4",
+                        "isobject": "^2.0.0"
+                    },
+                    "dependencies": {
+                        "isobject": {
+                            "version": "2.1.0",
+                            "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
+                            "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
+                            "dev": true,
+                            "requires": {
+                                "isarray": "1.0.0"
+                            }
+                        }
+                    }
+                },
+                "has-values": {
+                    "version": "0.1.4",
+                    "resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",
+                    "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E=",
+                    "dev": true
+                }
+            }
+        },
+        "untildify": {
+            "version": "3.0.3",
+            "resolved": "https://registry.npmjs.org/untildify/-/untildify-3.0.3.tgz",
+            "integrity": "sha512-iSk/J8efr8uPT/Z4eSUywnqyrQU7DSdMfdqK4iWEaUVVmcP5JcnpRqmVMwcwcnmI1ATFNgC5V90u09tBynNFKA==",
+            "dev": true
+        },
+        "uri-js": {
+            "version": "4.2.2",
+            "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
+            "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
+            "dev": true,
+            "requires": {
+                "punycode": "^2.1.0"
+            }
+        },
+        "urix": {
+            "version": "0.1.0",
+            "resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",
+            "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
+            "dev": true
+        },
+        "url-parse-lax": {
+            "version": "1.0.0",
+            "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-1.0.0.tgz",
+            "integrity": "sha1-evjzA2Rem9eaJy56FKxovAYJ2nM=",
+            "dev": true,
+            "requires": {
+                "prepend-http": "^1.0.1"
+            }
+        },
+        "url-to-options": {
+            "version": "1.0.1",
+            "resolved": "https://registry.npmjs.org/url-to-options/-/url-to-options-1.0.1.tgz",
+            "integrity": "sha1-FQWgOiiaSMvXpDTvuu7FBV9WM6k=",
+            "dev": true
+        },
+        "use": {
+            "version": "3.1.1",
+            "resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",
+            "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==",
+            "dev": true
+        },
+        "util": {
+            "version": "0.10.4",
+            "resolved": "https://registry.npmjs.org/util/-/util-0.10.4.tgz",
+            "integrity": "sha512-0Pm9hTQ3se5ll1XihRic3FDIku70C+iHUdT/W926rSgHV5QgXsYbKZN8MSC3tJtSkhuROzvsQjAaFENRXr+19A==",
+            "dev": true,
+            "requires": {
+                "inherits": "2.0.3"
+            }
+        },
+        "util-deprecate": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+            "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
+            "dev": true
+        },
+        "uuid": {
+            "version": "3.3.2",
+            "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
+            "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==",
+            "dev": true
+        },
+        "validate-npm-package-license": {
+            "version": "3.0.4",
+            "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
+            "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
+            "dev": true,
+            "requires": {
+                "spdx-correct": "^3.0.0",
+                "spdx-expression-parse": "^3.0.0"
+            }
+        },
+        "verror": {
+            "version": "1.10.0",
+            "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
+            "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
+            "dev": true,
+            "requires": {
+                "assert-plus": "^1.0.0",
+                "core-util-is": "1.0.2",
+                "extsprintf": "^1.2.0"
+            }
+        },
+        "vinyl": {
+            "version": "2.2.0",
+            "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",
+            "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",
+            "dev": true,
+            "requires": {
+                "clone": "^2.1.1",
+                "clone-buffer": "^1.0.0",
+                "clone-stats": "^1.0.0",
+                "cloneable-readable": "^1.0.0",
+                "remove-trailing-separator": "^1.0.1",
+                "replace-ext": "^1.0.0"
+            }
+        },
+        "vinyl-file": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/vinyl-file/-/vinyl-file-2.0.0.tgz",
+            "integrity": "sha1-p+v1/779obfRjRQPyweyI++2dRo=",
+            "dev": true,
+            "requires": {
+                "graceful-fs": "^4.1.2",
+                "pify": "^2.3.0",
+                "pinkie-promise": "^2.0.0",
+                "strip-bom": "^2.0.0",
+                "strip-bom-stream": "^2.0.0",
+                "vinyl": "^1.1.0"
+            },
+            "dependencies": {
+                "clone": {
+                    "version": "1.0.4",
+                    "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
+                    "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4=",
+                    "dev": true
+                },
+                "clone-stats": {
+                    "version": "0.0.1",
+                    "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-0.0.1.tgz",
+                    "integrity": "sha1-uI+UqCzzi4eR1YBG6kAprYjKmdE=",
+                    "dev": true
+                },
+                "pify": {
+                    "version": "2.3.0",
+                    "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
+                    "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
+                    "dev": true
+                },
+                "replace-ext": {
+                    "version": "0.0.1",
+                    "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",
+                    "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ=",
+                    "dev": true
+                },
+                "strip-bom": {
+                    "version": "2.0.0",
+                    "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
+                    "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
+                    "dev": true,
+                    "requires": {
+                        "is-utf8": "^0.2.0"
+                    }
+                },
+                "vinyl": {
+                    "version": "1.2.0",
+                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
+                    "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
+                    "dev": true,
+                    "requires": {
+                        "clone": "^1.0.0",
+                        "clone-stats": "^0.0.1",
+                        "replace-ext": "0.0.1"
+                    }
+                }
+            }
+        },
+        "which": {
+            "version": "1.3.1",
+            "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
+            "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
+            "dev": true,
+            "requires": {
+                "isexe": "^2.0.0"
+            }
+        },
+        "win-release": {
+            "version": "1.1.1",
+            "resolved": "https://registry.npmjs.org/win-release/-/win-release-1.1.1.tgz",
+            "integrity": "sha1-X6VeAr58qTTt/BJmVjLoSbcuUgk=",
+            "dev": true,
+            "requires": {
+                "semver": "^5.0.1"
+            }
+        },
+        "winston": {
+            "version": "3.2.1",
+            "resolved": "https://registry.npmjs.org/winston/-/winston-3.2.1.tgz",
+            "integrity": "sha512-zU6vgnS9dAWCEKg/QYigd6cgMVVNwyTzKs81XZtTFuRwJOcDdBg7AU0mXVyNbs7O5RH2zdv+BdNZUlx7mXPuOw==",
+            "dev": true,
+            "requires": {
+                "async": "^2.6.1",
+                "diagnostics": "^1.1.1",
+                "is-stream": "^1.1.0",
+                "logform": "^2.1.1",
+                "one-time": "0.0.4",
+                "readable-stream": "^3.1.1",
+                "stack-trace": "0.0.x",
+                "triple-beam": "^1.3.0",
+                "winston-transport": "^4.3.0"
+            },
+            "dependencies": {
+                "readable-stream": {
+                    "version": "3.2.0",
+                    "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.2.0.tgz",
+                    "integrity": "sha512-RV20kLjdmpZuTF1INEb9IA3L68Nmi+Ri7ppZqo78wj//Pn62fCoJyV9zalccNzDD/OuJpMG4f+pfMl8+L6QdGw==",
+                    "dev": true,
+                    "requires": {
+                        "inherits": "^2.0.3",
+                        "string_decoder": "^1.1.1",
+                        "util-deprecate": "^1.0.1"
+                    }
+                }
+            }
+        },
+        "winston-transport": {
+            "version": "4.3.0",
+            "resolved": "https://registry.npmjs.org/winston-transport/-/winston-transport-4.3.0.tgz",
+            "integrity": "sha512-B2wPuwUi3vhzn/51Uukcao4dIduEiPOcOt9HJ3QeaXgkJ5Z7UwpBzxS4ZGNHtrxrUvTwemsQiSys0ihOf8Mp1A==",
+            "dev": true,
+            "requires": {
+                "readable-stream": "^2.3.6",
+                "triple-beam": "^1.2.0"
+            }
+        },
+        "with-open-file": {
+            "version": "0.1.5",
+            "resolved": "https://registry.npmjs.org/with-open-file/-/with-open-file-0.1.5.tgz",
+            "integrity": "sha512-zY51cJCXG6qBilVuMceKNwU3rzjB/Ygt96BuSQ4+tXo3ewlxvj9ET99lpUHNzWfkYmsyfqKZEB9NJORmGZ1Ltw==",
+            "dev": true,
+            "requires": {
+                "p-finally": "^1.0.0",
+                "p-try": "^2.0.0",
+                "pify": "^3.0.0"
+            }
+        },
+        "wrappy": {
+            "version": "1.0.2",
+            "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+            "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
+            "dev": true
+        },
+        "write-file-atomic": {
+            "version": "2.4.2",
+            "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.2.tgz",
+            "integrity": "sha512-s0b6vB3xIVRLWywa6X9TOMA7k9zio0TMOsl9ZnDkliA/cfJlpHXAscj0gbHVJiTdIuAYpIyqS5GW91fqm6gG5g==",
+            "dev": true,
+            "requires": {
+                "graceful-fs": "^4.1.11",
+                "imurmurhash": "^0.1.4",
+                "signal-exit": "^3.0.2"
+            }
+        },
+        "xdg-basedir": {
+            "version": "2.0.0",
+            "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-2.0.0.tgz",
+            "integrity": "sha1-7byQPMOF/ARSPZZqM1UEtVBNG9I=",
+            "dev": true,
+            "requires": {
+                "os-homedir": "^1.0.0"
+            }
+        },
+        "xml2js": {
+            "version": "0.4.19",
+            "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.19.tgz",
+            "integrity": "sha512-esZnJZJOiJR9wWKMyuvSE1y6Dq5LCuJanqhxslH2bxM6duahNZ+HMpCLhBQGZkbX6xRf8x1Y2eJlgt2q3qo49Q==",
+            "dev": true,
+            "requires": {
+                "sax": ">=0.6.0",
+                "xmlbuilder": "~9.0.1"
+            }
+        },
+        "xmlbuilder": {
+            "version": "9.0.7",
+            "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-9.0.7.tgz",
+            "integrity": "sha1-Ey7mPS7FVlxVfiD0wi35rKaGsQ0=",
+            "dev": true
+        },
+        "xtend": {
+            "version": "4.0.1",
+            "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",
+            "integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68=",
+            "dev": true
+        },
+        "yallist": {
+            "version": "2.1.2",
+            "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
+            "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
+            "dev": true
+        },
+        "yargs-parser": {
+            "version": "10.1.0",
+            "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-10.1.0.tgz",
+            "integrity": "sha512-VCIyR1wJoEBZUqk5PA+oOBF6ypbwh5aNB3I50guxAL/quggdfs4TtNHQrSazFA3fYZ+tEqfs0zIGlv0c/rgjbQ==",
+            "dev": true,
+            "requires": {
+                "camelcase": "^4.1.0"
+            }
+        },
+        "yeoman-environment": {
+            "version": "2.3.4",
+            "resolved": "https://registry.npmjs.org/yeoman-environment/-/yeoman-environment-2.3.4.tgz",
+            "integrity": "sha512-KLxE5ft/74Qj7h3AsQZv8G6MEEHYJwmD5F99nfOVaep3rBzCtbrJKkdqWc7bDV141Nr8UZZsIXmzc3IcCm6E2w==",
+            "dev": true,
+            "requires": {
+                "chalk": "^2.4.1",
+                "cross-spawn": "^6.0.5",
+                "debug": "^3.1.0",
+                "diff": "^3.5.0",
+                "escape-string-regexp": "^1.0.2",
+                "globby": "^8.0.1",
+                "grouped-queue": "^0.3.3",
+                "inquirer": "^6.0.0",
+                "is-scoped": "^1.0.0",
+                "lodash": "^4.17.10",
+                "log-symbols": "^2.2.0",
+                "mem-fs": "^1.1.0",
+                "strip-ansi": "^4.0.0",
+                "text-table": "^0.2.0",
+                "untildify": "^3.0.3"
+            },
+            "dependencies": {
+                "debug": {
+                    "version": "3.2.6",
+                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
+                    "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
+                    "dev": true,
+                    "requires": {
+                        "ms": "^2.1.1"
+                    }
+                }
+            }
+        },
+        "yeoman-generator": {
+            "version": "3.2.0",
+            "resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-3.2.0.tgz",
+            "integrity": "sha512-iR/qb2je3GdXtSfxgvOXxUW0Cp8+C6LaZaNlK2BAICzFNzwHtM10t/QBwz5Ea9nk6xVDQNj4Q889TjCXGuIv8w==",
+            "dev": true,
+            "requires": {
+                "async": "^2.6.0",
+                "chalk": "^2.3.0",
+                "cli-table": "^0.3.1",
+                "cross-spawn": "^6.0.5",
+                "dargs": "^6.0.0",
+                "dateformat": "^3.0.3",
+                "debug": "^4.1.0",
+                "detect-conflict": "^1.0.0",
+                "error": "^7.0.2",
+                "find-up": "^3.0.0",
+                "github-username": "^4.0.0",
+                "istextorbinary": "^2.2.1",
+                "lodash": "^4.17.10",
+                "make-dir": "^1.1.0",
+                "mem-fs-editor": "^5.0.0",
+                "minimist": "^1.2.0",
+                "pretty-bytes": "^5.1.0",
+                "read-chunk": "^3.0.0",
+                "read-pkg-up": "^4.0.0",
+                "rimraf": "^2.6.2",
+                "run-async": "^2.0.0",
+                "shelljs": "^0.8.0",
+                "text-table": "^0.2.0",
+                "through2": "^3.0.0",
+                "yeoman-environment": "^2.0.5"
+            }
+        }
+    }
+}
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package.json	(date 1552872226000)
+++ package.json	(date 1552872226000)
@@ -0,0 +1,29 @@
+{
+    "name": "efwservice",
+    "version": "0.0.0",
+    "description": "Description for efwservice",
+    "private": true,
+    "license": "UNLICENSED",
+    "cacheDirectories": [
+        "node_modules"
+    ],
+    "devDependencies": {
+        "generator-jhipster-standalone-profile": "2.3.0",
+        "generator-jhipster-docker": "2.5.0",
+        "generator-jhipster-swagger-cli": "3.0.1",
+        "generator-jhipster-spring-cloud-stream": "1.0.0",
+        "generator-jhipster-electron": "1.0.0",
+        "generator-codegen": "0.2.1",
+        "generator-jhipster-translation": "1.0.4",
+        "generator-jhipster-database-backup": "1.0.7",
+        "generator-jhipster-administration-database": "1.0.4",
+        "generator-jhipster-jgitver": "0.1.0",
+        "generator-jhipster-obfuscation-at-rest": "0.3.0",
+        "generator-jhipster-aeropost": "1.10.0",
+        "generator-jhipster-file2url": "0.0.0",
+        "generator-jhipster": "5.8.2"
+    },
+    "engines": {
+        "node": ">=8.9.0"
+    }
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1552872226000)
+++ pom.xml	(date 1552872226000)
@@ -0,0 +1,1109 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>de.iso.apps</groupId>
+    <artifactId>efwservice</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <packaging>war</packaging>
+    <name>Efwservice</name>
+
+    <repositories>
+        <!-- jhipster-needle-maven-repository -->
+    </repositories>
+
+    <pluginRepositories>
+        <!-- jhipster-needle-maven-plugin-repository -->
+    </pluginRepositories>
+
+    <!-- jhipster-needle-distribution-management -->
+
+    <properties>
+        <!-- Build properties -->
+        <maven.version>3.0.0</maven.version>
+        <java.version>1.8</java.version>
+        <scala.version>2.12.6</scala.version>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
+        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
+        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
+        <maven.compiler.source>${java.version}</maven.compiler.source>
+        <maven.compiler.target>${java.version}</maven.compiler.target>
+        <argLine>-Djava.security.egd=file:/dev/./urandom -Xmx256m</argLine>
+        <m2e.apt.activation>jdt_apt</m2e.apt.activation>
+        <run.addResources>false</run.addResources>
+        <!-- These remain empty unless the corresponding profile is active -->
+        <profile.no-liquibase />
+        <profile.swagger />
+        <profile.tls />
+
+        <!-- Dependency versions -->
+        <jhipster-dependencies.version>2.1.1</jhipster-dependencies.version>
+        <!-- The spring-boot version should match the one managed by
+        https://mvnrepository.com/artifact/io.github.jhipster/jhipster-dependencies/${jhipster-dependencies.version} -->
+        <spring-boot.version>2.0.8.RELEASE</spring-boot.version>
+        <!-- The hibernate version should match the one managed by
+        https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies/${spring-boot.version} -->
+        <hibernate.version>5.2.17.Final</hibernate.version>
+        <!-- The javassist version should match the one managed by
+        https://mvnrepository.com/artifact/org.hibernate/hibernate-core/${hibernate.version} -->
+        <javassist.version>3.22.0-GA</javassist.version>
+        <!-- The liquibase version should match the one managed by
+        https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies/${spring-boot.version} -->
+        <liquibase.version>3.5.5</liquibase.version>
+        <liquibase-hibernate5.version>3.6</liquibase-hibernate5.version>
+        <validation-api.version>2.0.1.Final</validation-api.version>
+        <mapstruct.version>1.2.0.Final</mapstruct.version>
+
+        <!-- Plugin versions -->
+        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
+        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
+        <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
+        <maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
+        <maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
+        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
+        <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
+        <maven-war-plugin.version>3.2.2</maven-war-plugin.version>
+        <jib-maven-plugin.version>0.9.11</jib-maven-plugin.version>
+        <jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
+        <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
+        <scala-maven-plugin.version>3.4.2</scala-maven-plugin.version>
+        <sonar-maven-plugin.version>3.5.0.1254</sonar-maven-plugin.version>
+        <openapi-generator-maven-plugin.version>3.3.0</openapi-generator-maven-plugin.version>
+        <git-commit-id-plugin.version>2.2.5</git-commit-id-plugin.version>
+
+        <!-- Sonar properties -->
+        <sonar.host.url>http://localhost:9001</sonar.host.url>
+        <sonar.exclusions>src/main/webapp/content/**/*.*, src/main/webapp/i18n/*.js, target/www/**/*.*</sonar.exclusions>
+        <sonar.issue.ignore.multicriteria>S3437,S4502,S4684,UndocumentedApi,BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria>
+        <!-- Rule https://sonarcloud.io/coding_rules?open=Web%3ABoldAndItalicTagsCheck&rule_key=Web%3ABoldAndItalicTagsCheck is ignored. Even if we agree that using the "i" tag is an awful practice, this is what is recommended by http://fontawesome.io/examples/ -->
+        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>src/main/webapp/app/**/*.*</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>
+        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>Web:BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>
+        <!-- Rule https://sonarcloud.io/coding_rules?open=squid%3AS3437&rule_key=squid%3AS3437 is ignored, as a JPA-managed field cannot be transient -->
+        <sonar.issue.ignore.multicriteria.S3437.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S3437.resourceKey>
+        <sonar.issue.ignore.multicriteria.S3437.ruleKey>squid:S3437</sonar.issue.ignore.multicriteria.S3437.ruleKey>
+        <!-- Rule https://sonarcloud.io/coding_rules?open=squid%3AUndocumentedApi&rule_key=squid%3AUndocumentedApi is ignored, as we want to follow "clean code" guidelines and classes, methods and arguments names should be self-explanatory -->
+        <sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>
+        <sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>squid:UndocumentedApi</sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>
+        <!-- Rule https://sonarcloud.io/coding_rules?open=squid%3AS4502&rule_key=squid%3AS4502 is ignored, as for JWT tokens we are not subject to CSRF attack -->
+        <sonar.issue.ignore.multicriteria.S4502.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S4502.resourceKey>
+        <sonar.issue.ignore.multicriteria.S4502.ruleKey>squid:S4502</sonar.issue.ignore.multicriteria.S4502.ruleKey>
+        <!-- Rule https://sonarcloud.io/coding_rules?open=squid%3AS4684&rule_key=squid%3AS4684 -->
+        <sonar.issue.ignore.multicriteria.S4684.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S4684.resourceKey>
+        <sonar.issue.ignore.multicriteria.S4684.ruleKey>squid:S4684</sonar.issue.ignore.multicriteria.S4684.ruleKey>
+        <sonar.jacoco.reportPaths>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPaths>
+        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
+        <sonar.sources>${project.basedir}/src/main/</sonar.sources>
+        <sonar.junit.reportsPath>${project.testresult.directory}</sonar.junit.reportsPath>
+        <sonar.tests>${project.basedir}/src/test/</sonar.tests>
+
+        <!-- jhipster-needle-maven-property -->
+    </properties>
+
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>io.github.jhipster</groupId>
+                <artifactId>jhipster-dependencies</artifactId>
+                <version>${jhipster-dependencies.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+            <!-- jhipster-needle-maven-add-dependency-management -->
+        </dependencies>
+    </dependencyManagement>
+
+    <dependencies>
+        <dependency>
+            <groupId>io.github.jhipster</groupId>
+            <artifactId>jhipster-framework</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-cache</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.datatype</groupId>
+            <artifactId>jackson-datatype-hibernate5</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.datatype</groupId>
+            <artifactId>jackson-datatype-hppc</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.datatype</groupId>
+            <artifactId>jackson-datatype-jsr310</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.module</groupId>
+            <artifactId>jackson-module-afterburner</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.h2database</groupId>
+            <artifactId>h2</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.hazelcast</groupId>
+            <artifactId>hazelcast</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.hazelcast</groupId>
+            <artifactId>hazelcast-hibernate52</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.hazelcast</groupId>
+            <artifactId>hazelcast-spring</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.jayway.jsonpath</groupId>
+            <artifactId>json-path</artifactId>
+            <scope>test</scope>
+            <!-- parent POM declares this dependency in default (compile) scope -->
+        </dependency>
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger2</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-bean-validators</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.mattbertolini</groupId>
+            <artifactId>liquibase-slf4j</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.zaxxer</groupId>
+            <artifactId>HikariCP</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>commons-io</groupId>
+            <artifactId>commons-io</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>javax.cache</groupId>
+            <artifactId>cache-api</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.assertj</groupId>
+            <artifactId>assertj-core</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.hibernate</groupId>
+            <artifactId>hibernate-jpamodelgen</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.hibernate</groupId>
+            <artifactId>hibernate-envers</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.hibernate.validator</groupId>
+            <artifactId>hibernate-validator</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.liquibase</groupId>
+            <artifactId>liquibase-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>net.logstash.logback</groupId>
+            <artifactId>logstash-logback-encoder</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.postgresql</groupId>
+            <artifactId>postgresql</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.mapstruct</groupId>
+            <artifactId>mapstruct-jdk8</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.mapstruct</groupId>
+            <artifactId>mapstruct-processor</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-configuration-processor</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-loader-tools</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-aop</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-jpa</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
+        </dependency>
+        <!-- Spring Data Jest dependencies for Elasticsearch -->
+        <dependency>
+            <groupId>com.github.vanroy</groupId>
+            <artifactId>spring-boot-starter-data-jest</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>commons-logging</groupId>
+                    <artifactId>commons-logging</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <!-- log4j needed to create embedded elasticsearch instance -->
+        <dependency>
+            <groupId>org.apache.logging.log4j</groupId>
+            <artifactId>log4j-api</artifactId>
+            <version>2.7</version>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.logging.log4j</groupId>
+            <artifactId>log4j-core</artifactId>
+            <version>2.7</version>
+        </dependency>
+        <!-- end of Spring Data Jest dependencies -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-logging</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-mail</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-security</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-thymeleaf</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.security</groupId>
+            <artifactId>spring-security-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <!-- Kafka support -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-stream</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-stream-test-support</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.zalando</groupId>
+            <artifactId>problem-spring-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt-api</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt-impl</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt-jackson</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <!-- Spring Cloud -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.retry</groupId>
+            <artifactId>spring-retry</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-config</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-cloud-connectors</artifactId>
+        </dependency>
+        <!-- Security -->
+        <dependency>
+            <groupId>org.springframework.security</groupId>
+            <artifactId>spring-security-data</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>io.micrometer</groupId>
+            <artifactId>micrometer-registry-prometheus</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>io.dropwizard.metrics</groupId>
+            <artifactId>metrics-core</artifactId>
+        </dependency>
+        <!-- Cucumber -->
+        <dependency>
+            <groupId>io.cucumber</groupId>
+            <artifactId>cucumber-junit</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>io.cucumber</groupId>
+            <artifactId>cucumber-spring</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <!-- jhipster-needle-maven-add-dependency -->
+    </dependencies>
+
+    <build>
+        <defaultGoal>spring-boot:run</defaultGoal>
+        <testResources>
+            <testResource>
+                <directory>src/test/resources/</directory>
+            </testResource>
+            <testResource>
+                <directory>src/test/features</directory>
+            </testResource>
+        </testResources>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <annotationProcessorPaths>
+                        <path>
+                            <groupId>org.mapstruct</groupId>
+                            <artifactId>mapstruct-processor</artifactId>
+                            <version>${mapstruct.version}</version>
+                        </path>
+                        <!-- For JPA static metamodel generation -->
+                        <path>
+                            <groupId>org.hibernate</groupId>
+                            <artifactId>hibernate-jpamodelgen</artifactId>
+                            <version>${hibernate.version}</version>
+                        </path>
+
+                    </annotationProcessorPaths>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-eclipse-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-enforcer-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-idea-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-resources-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.jacoco</groupId>
+                <artifactId>jacoco-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.sonarsource.scanner.maven</groupId>
+                <artifactId>sonar-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.liquibase</groupId>
+                <artifactId>liquibase-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <goals>
+                            <goal>repackage</goal>
+                        </goals>
+                    </execution>
+                </executions>
+                <configuration>
+                    <mainClass>${start-class}</mainClass>
+                    <executable>true</executable>
+                    <fork>true</fork>
+                    <!--
+                    Enable the line below to have remote debugging of your application on port 5005
+                    <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>
+                    -->
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>com.google.cloud.tools</groupId>
+                <artifactId>jib-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <!--
+                    Plugin that provides API-first development using openapi-generator to
+                    generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition file
+                -->
+                <groupId>org.openapitools</groupId>
+                <artifactId>openapi-generator-maven-plugin</artifactId>
+            </plugin>
+            <!-- jhipster-needle-maven-add-plugin -->
+        </plugins>
+        <pluginManagement>
+            <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-compiler-plugin</artifactId>
+                    <version>${maven-compiler-plugin.version}</version>
+                </plugin>
+                <plugin>
+                    <groupId>pl.project13.maven</groupId>
+                    <artifactId>git-commit-id-plugin</artifactId>
+                    <version>${git-commit-id-plugin.version}</version>
+                    <executions>
+                        <execution>
+                            <goals>
+                                <goal>revision</goal>
+                            </goals>
+                        </execution>
+                    </executions>
+                    <configuration>
+                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
+                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
+                        <includeOnlyProperties>
+                            <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
+                            <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
+                            <includeOnlyProperty>^git.branch$</includeOnlyProperty>
+                        </includeOnlyProperties>
+                    </configuration>
+                </plugin>
+                <plugin>
+                    <groupId>org.jacoco</groupId>
+                    <artifactId>jacoco-maven-plugin</artifactId>
+                    <version>${jacoco-maven-plugin.version}</version>
+                    <executions>
+                        <execution>
+                            <id>pre-unit-tests</id>
+                            <goals>
+                                <goal>prepare-agent</goal>
+                            </goals>
+                            <configuration>
+                                <!-- Sets the path to the file which contains the execution data. -->
+                                <destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
+                            </configuration>
+                        </execution>
+                        <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
+                        <execution>
+                            <id>post-unit-test</id>
+                            <phase>test</phase>
+                            <goals>
+                                <goal>report</goal>
+                            </goals>
+                            <configuration>
+                                <dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>
+                                <outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
+                            </configuration>
+                        </execution>
+                    </executions>
+                </plugin>
+                <plugin>
+                    <groupId>com.google.cloud.tools</groupId>
+                    <artifactId>jib-maven-plugin</artifactId>
+                    <version>${jib-maven-plugin.version}</version>
+                    <configuration>
+                      <from>
+                          <image>openjdk:8-jre-alpine</image>
+                      </from>
+                      <to>
+                          <image>efwservice:latest</image>
+                      </to>
+                      <container>
+                          <entrypoint>
+                              <shell>sh</shell>
+                              <option>-c</option>
+                              <arg>chmod +x /entrypoint.sh &amp;&amp; sync &amp;&amp; /entrypoint.sh</arg>
+                          </entrypoint>
+                          <ports>
+                              <port>8081</port>
+                              <port>5701/udp</port>
+                          </ports>
+                          <environment>
+                              <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
+                              <JHIPSTER_SLEEP>0</JHIPSTER_SLEEP>
+                          </environment>
+                          <useCurrentTimestamp>true</useCurrentTimestamp>
+                      </container>
+                  </configuration>
+                </plugin>
+                <plugin>
+                    <groupId>org.liquibase</groupId>
+                    <artifactId>liquibase-maven-plugin</artifactId>
+                    <version>${liquibase.version}</version>
+                    <configuration>
+                        <changeLogFile>${project.basedir}/src/main/resources/config/liquibase/master.xml</changeLogFile>
+                        <diffChangeLogFile>${project.basedir}/src/main/resources/config/liquibase/changelog/${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
+                        <driver>org.h2.Driver</driver>
+                        <url>jdbc:h2:file:${project.build.directory}/h2db/db/efwservice</url>
+                        <defaultSchemaName></defaultSchemaName>
+                        <username>efwservice</username>
+                        <password></password>
+                        <referenceUrl>hibernate:spring:de.iso.apps.domain?dialect=org.hibernate.dialect.H2Dialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
+                        <verbose>true</verbose>
+                        <logging>debug</logging>
+                    </configuration>
+                    <dependencies>
+                        <dependency>
+                            <groupId>org.javassist</groupId>
+                            <artifactId>javassist</artifactId>
+                            <version>${javassist.version}</version>
+                        </dependency>
+                        <dependency>
+                            <groupId>org.liquibase.ext</groupId>
+                            <artifactId>liquibase-hibernate5</artifactId>
+                            <version>${liquibase-hibernate5.version}</version>
+                        </dependency>
+                        <dependency>
+                            <groupId>org.springframework.boot</groupId>
+                            <artifactId>spring-boot-starter-data-jpa</artifactId>
+                            <version>${spring-boot.version}</version>
+                        </dependency>
+                        <dependency>
+                            <groupId>javax.validation</groupId>
+                            <artifactId>validation-api</artifactId>
+                            <version>${validation-api.version}</version>
+                        </dependency>
+                    </dependencies>
+                </plugin>
+                <plugin>
+                    <artifactId>maven-clean-plugin</artifactId>
+                    <version>${maven-clean-plugin.version}</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-eclipse-plugin</artifactId>
+                    <version>${maven-eclipse-plugin.version}</version>
+                    <configuration>
+                        <downloadSources>true</downloadSources>
+                        <downloadJavadocs>true</downloadJavadocs>
+                    </configuration>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-enforcer-plugin</artifactId>
+                    <version>${maven-enforcer-plugin.version}</version>
+                    <executions>
+                        <execution>
+                            <id>enforce-versions</id>
+                            <goals>
+                                <goal>enforce</goal>
+                            </goals>
+                        </execution>
+                    </executions>
+                    <configuration>
+                        <rules>
+                            <requireMavenVersion>
+                                <message>You are running an older version of Maven. JHipster requires at least Maven ${maven.version}</message>
+                                <version>[${maven.version},)</version>
+                            </requireMavenVersion>
+                            <requireJavaVersion>
+                                <!-- Until JHipster supports JDK 9 -->
+                                <message>You are running an incompatible version of Java. JHipster requires JDK ${java.version}</message>
+                                <version>[1.8,1.9)</version>
+                            </requireJavaVersion>
+                        </rules>
+                    </configuration>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-idea-plugin</artifactId>
+                    <version>${maven-idea-plugin.version}</version>
+                    <configuration>
+                        <exclude>node_modules</exclude>
+                    </configuration>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-resources-plugin</artifactId>
+                    <version>${maven-resources-plugin.version}</version>
+                    <executions>
+                        <execution>
+                            <id>default-resources</id>
+                            <phase>validate</phase>
+                            <goals>
+                                <goal>copy-resources</goal>
+                            </goals>
+                            <configuration>
+                                <outputDirectory>${project.build.directory}/classes</outputDirectory>
+                                <useDefaultDelimiters>false</useDefaultDelimiters>
+                                <delimiters>
+                                    <delimiter>#</delimiter>
+                                </delimiters>
+                                <resources>
+                                    <resource>
+                                        <directory>src/main/resources/</directory>
+                                        <filtering>true</filtering>
+                                        <includes>
+                                            <include>config/*.yml</include>
+                                        </includes>
+                                    </resource>
+                                    <resource>
+                                        <directory>src/main/resources/</directory>
+                                        <filtering>false</filtering>
+                                        <excludes>
+                                            <exclude>config/*.yml</exclude>
+                                        </excludes>
+                                    </resource>
+                                </resources>
+                            </configuration>
+                        </execution>
+                        <execution>
+                            <id>jib-www-resources</id>
+                            <phase>verify</phase>
+                            <goals>
+                                <goal>copy-resources</goal>
+                            </goals>
+                            <configuration>
+                                <outputDirectory>${project.build.directory}/classes/static/</outputDirectory>
+                                <resources>
+                                    <resource>
+                                        <directory>${project.build.directory}/www</directory>
+                                        <filtering>false</filtering>
+                                    </resource>
+                                </resources>
+                            </configuration>
+                        </execution>
+                    </executions>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <version>${maven-surefire-plugin.version}</version>
+                    <executions>
+                        <execution>
+                            <id>default-test</id>
+                            <configuration>
+                                <excludes>
+                                    <exclude>**/Abstract*.java</exclude>
+                                    <exclude>**/*Cucumber*.java</exclude>
+                                </excludes>
+                            </configuration>
+                        </execution>
+                        <execution>
+                            <id>without-cucumber</id>
+                            <goals>
+                                <goal>test</goal>
+                            </goals>
+                            <configuration>
+                                <includes>
+                                    <include>**/*Cucumber*.java</include>
+                                </includes>
+                            </configuration>
+                        </execution>
+                    </executions>
+                    <configuration>
+                        <!-- Force alphabetical order to have a reproducible build -->
+                        <runOrder>alphabetical</runOrder>
+                        <!-- Fixes a bug which will be solved in next version after 2.22.1 then this can be removed -->
+                        <!-- see: https://issues.apache.org/jira/browse/SUREFIRE-1588 -->
+                        <useSystemClassLoader>false</useSystemClassLoader>
+                        <outputDirectory>${sonar.junit.reportsPath}</outputDirectory>
+                    </configuration>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-war-plugin</artifactId>
+                    <version>${maven-war-plugin.version}</version>
+                </plugin>
+                <plugin>
+                    <!--
+                        Plugin that provides API-first development using openapi-generator to
+                        generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition file
+                    -->
+                    <groupId>org.openapitools</groupId>
+                    <artifactId>openapi-generator-maven-plugin</artifactId>
+                    <version>${openapi-generator-maven-plugin.version}</version>
+                    <executions>
+                        <execution>
+                            <goals>
+                                <goal>generate</goal>
+                            </goals>
+                            <configuration>
+                                <inputSpec>${project.basedir}/src/main/resources/swagger/api.yml</inputSpec>
+                                <generatorName>spring</generatorName>
+                                <apiPackage>de.iso.apps.web.api</apiPackage>
+                                <modelPackage>de.iso.apps.web.api.model</modelPackage>
+                                <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
+                                <validateSpec>true</validateSpec>
+                                <configOptions>
+                                    <delegatePattern>true</delegatePattern>
+                                </configOptions>
+                            </configuration>
+                        </execution>
+                    </executions>
+                </plugin>
+                <plugin>
+                    <groupId>net.alchim31.maven</groupId>
+                    <artifactId>scala-maven-plugin</artifactId>
+                    <version>${scala-maven-plugin.version}</version>
+                    <executions>
+                        <execution>
+                            <id>compile</id>
+                            <phase>compile</phase>
+                            <goals>
+                                <goal>add-source</goal>
+                                <goal>compile</goal>
+                            </goals>
+                        </execution>
+                        <execution>
+                            <id>test-compile</id>
+                            <phase>test-compile</phase>
+                            <goals>
+                                <goal>add-source</goal>
+                                <goal>testCompile</goal>
+                            </goals>
+                        </execution>
+                    </executions>
+                    <configuration>
+                        <recompileMode>incremental</recompileMode>
+                        <verbose>true</verbose>
+                        <scalaVersion>${scala.version}</scalaVersion>
+                    </configuration>
+                </plugin>
+                <plugin>
+                    <groupId>org.sonarsource.scanner.maven</groupId>
+                    <artifactId>sonar-maven-plugin</artifactId>
+                    <version>${sonar-maven-plugin.version}</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-maven-plugin</artifactId>
+                    <version>${spring-boot.version}</version>
+                </plugin>
+            </plugins>
+        </pluginManagement>
+    </build>
+    <profiles>
+        <profile>
+            <id>no-liquibase</id>
+            <properties>
+                <profile.no-liquibase>,no-liquibase</profile.no-liquibase>
+            </properties>
+        </profile>
+        <profile>
+            <id>swagger</id>
+            <properties>
+                <profile.swagger>,swagger</profile.swagger>
+            </properties>
+        </profile>
+        <profile>
+            <id>tls</id>
+            <properties>
+                <profile.tls>,tls</profile.tls>
+            </properties>
+        </profile>
+        <profile>
+            <id>dev</id>
+            <activation>
+                <activeByDefault>true</activeByDefault>
+            </activation>
+            <dependencies>
+                <dependency>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-starter-undertow</artifactId>
+                </dependency>
+                <dependency>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-devtools</artifactId>
+                    <optional>true</optional>
+                </dependency>
+                <dependency>
+                    <groupId>com.h2database</groupId>
+                    <artifactId>h2</artifactId>
+                </dependency>
+            </dependencies>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-war-plugin</artifactId>
+                        <configuration>
+                            <failOnMissingWebXml>false</failOnMissingWebXml>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+            <properties>
+                <!-- default Spring profiles -->
+                <spring.profiles.active>dev${profile.tls}${profile.no-liquibase}</spring.profiles.active>
+            </properties>
+        </profile>
+        <profile>
+            <id>prod</id>
+            <dependencies>
+                <dependency>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-starter-undertow</artifactId>
+                </dependency>
+            </dependencies>
+            <build>
+                <plugins>
+                    <plugin>
+                        <artifactId>maven-clean-plugin</artifactId>
+                        <configuration>
+                            <filesets>
+                                <fileset>
+                                    <directory>target/www/</directory>
+                                </fileset>
+                            </filesets>
+                        </configuration>
+                    </plugin>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-war-plugin</artifactId>
+                        <configuration>
+                            <failOnMissingWebXml>false</failOnMissingWebXml>
+                        </configuration>
+                    </plugin>
+                    <plugin>
+                        <groupId>org.springframework.boot</groupId>
+                        <artifactId>spring-boot-maven-plugin</artifactId>
+                        <configuration>
+                            <mainClass>${start-class}</mainClass>
+                            <executable>true</executable>
+                        </configuration>
+                        <executions>
+                            <execution>
+                                <goals>
+                                    <goal>build-info</goal>
+                                </goals>
+                            </execution>
+                        </executions>
+                    </plugin>
+                    <plugin>
+                        <groupId>pl.project13.maven</groupId>
+                        <artifactId>git-commit-id-plugin</artifactId>
+                    </plugin>
+                </plugins>
+            </build>
+            <properties>
+                <!-- default Spring profiles -->
+                <spring.profiles.active>prod${profile.swagger}${profile.no-liquibase}</spring.profiles.active>
+            </properties>
+        </profile>
+        <profile>
+            <!--
+                Profile for doing "continuous compilation" with the Scala Maven plugin.
+                It allows automatic compilation of Java classes as soon as they are saved.
+                To use it, run in 3 terminals:
+                - './mvnw -Pcc scala:cc' for continuous compilation of your classes
+                - './mvnw -Pcc -Pdev' for hot reload of Spring boot
+                - 'npm start/yarn start' for hot reload of the HTML/JavaScript asset
+                Everything should hot reload automatically!
+            -->
+            <id>cc</id>
+            <dependencies>
+                <dependency>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-starter-undertow</artifactId>
+                </dependency>
+                <dependency>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-devtools</artifactId>
+                    <optional>true</optional>
+                </dependency>
+            </dependencies>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-war-plugin</artifactId>
+                        <configuration>
+                            <failOnMissingWebXml>false</failOnMissingWebXml>
+                            <warSourceDirectory>src/main/webapp/</warSourceDirectory>
+                        </configuration>
+                    </plugin>
+                    <plugin>
+                        <groupId>org.springframework.boot</groupId>
+                        <artifactId>spring-boot-maven-plugin</artifactId>
+                        <configuration>
+                            <mainClass>${start-class}</mainClass>
+                            <executable>true</executable>
+                            <fork>true</fork>
+                            <addResources>true</addResources>
+                            <!--
+                            Enable the line below to have remote debugging of your application on port 5005
+                            <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>
+                            -->
+                        </configuration>
+                    </plugin>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-compiler-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-compile</id>
+                                <phase>none</phase>
+                            </execution>
+                            <execution>
+                                <id>default-testCompile</id>
+                                <phase>none</phase>
+                            </execution>
+                        </executions>
+                    </plugin>
+                    <plugin>
+                        <groupId>net.alchim31.maven</groupId>
+                        <artifactId>scala-maven-plugin</artifactId>
+                    </plugin>
+                </plugins>
+            </build>
+            <properties>
+                <!-- default Spring profiles -->
+                <spring.profiles.active>dev,swagger</spring.profiles.active>
+            </properties>
+        </profile>
+        <profile>
+            <!--
+                Profile for tracing requests with Zipkin.
+            -->
+            <id>zipkin</id>
+            <dependencies>
+                <dependency>
+                    <groupId>org.springframework.cloud</groupId>
+                    <artifactId>spring-cloud-starter-zipkin</artifactId>
+                </dependency>
+            </dependencies>
+        </profile>
+        <profile>
+            <!--
+                Profile for applying IDE-specific configuration.
+                At the moment it configures MapStruct and Hibernate JPA Metamodel Generator, which you need when working
+                with DTOs and entity filtering.
+            -->
+            <id>IDE</id>
+            <dependencies>
+                <dependency>
+                    <groupId>org.mapstruct</groupId>
+                    <artifactId>mapstruct-processor</artifactId>
+                </dependency>
+                <dependency>
+                    <groupId>org.hibernate</groupId>
+                    <artifactId>hibernate-jpamodelgen</artifactId>
+                </dependency>
+            </dependencies>
+        </profile>
+        <profile>
+            <!-- This is automatically activated when working in Eclipse -->
+            <id>eclipse</id>
+            <activation>
+                <property>
+                    <name>m2e.version</name>
+                </property>
+            </activation>
+            <build>
+                <pluginManagement>
+                    <plugins>
+                        <!--
+                            This plugin's configuration is used to store Eclipse m2e settings only.
+                            It has no influence on the Maven build itself.
+                            Remove when the m2e plugin can correctly bind to Maven lifecycle
+                        -->
+                        <plugin>
+                            <groupId>org.eclipse.m2e</groupId>
+                            <artifactId>lifecycle-mapping</artifactId>
+                            <version>${lifecycle-mapping.version}</version>
+                            <configuration>
+                                <lifecycleMappingMetadata>
+                                    <pluginExecutions>
+                                        <pluginExecution>
+                                            <pluginExecutionFilter>
+                                                <groupId>org.jacoco</groupId>
+                                                <artifactId>
+                                                    jacoco-maven-plugin
+                                                </artifactId>
+                                                <versionRange>
+                                                    ${jacoco-maven-plugin.version}
+                                                </versionRange>
+                                                <goals>
+                                                    <goal>prepare-agent</goal>
+                                                </goals>
+                                            </pluginExecutionFilter>
+                                            <action>
+                                                <ignore/>
+                                            </action>
+                                        </pluginExecution>
+                                        <pluginExecution>
+                                            <pluginExecutionFilter>
+                                                <groupId>org.openapitools</groupId>
+                                                <artifactId>openapi-generator-maven-plugin</artifactId>
+                                                <versionRange>${openapi-generator-maven-plugin.version}</versionRange>
+                                                <goals>
+                                                    <goal>generate</goal>
+                                                </goals>
+                                            </pluginExecutionFilter>
+                                            <action>
+                                                <ignore />
+                                            </action>
+                                        </pluginExecution>
+                                    </pluginExecutions>
+                                </lifecycleMappingMetadata>
+                            </configuration>
+                        </plugin>
+                    </plugins>
+                </pluginManagement>
+            </build>
+        </profile>
+        <!-- jhipster-needle-maven-add-profile -->
+    </profiles>
+</project>
Index: src/main/docker/.dockerignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/.dockerignore	(date 1552872226000)
+++ src/main/docker/.dockerignore	(date 1552872226000)
@@ -0,0 +1,14 @@
+# https://docs.docker.com/engine/reference/builder/#dockerignore-file
+classes/
+generated-sources/
+generated-test-sources/
+h2db/
+maven-archiver/
+maven-status/
+reports/
+surefire-reports/
+test-classes/
+test-results/
+www/
+!*.jar
+!*.war
Index: src/main/docker/Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/Dockerfile	(date 1552872226000)
+++ src/main/docker/Dockerfile	(date 1552872226000)
@@ -0,0 +1,20 @@
+FROM openjdk:8-jre-alpine
+
+ENV SPRING_OUTPUT_ANSI_ENABLED=ALWAYS \
+    JHIPSTER_SLEEP=0 \
+    JAVA_OPTS=""
+
+# Add a jhipster user to run our application so that it doesn't need to run as root
+RUN adduser -D -s /bin/sh jhipster
+WORKDIR /home/jhipster
+
+ADD entrypoint.sh entrypoint.sh
+RUN chmod 755 entrypoint.sh && chown jhipster:jhipster entrypoint.sh
+USER jhipster
+
+ENTRYPOINT ["./entrypoint.sh"]
+
+EXPOSE 8081 5701/udp
+
+ADD *.war app.war
+
Index: src/main/docker/app.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/app.yml	(date 1552872226000)
+++ src/main/docker/app.yml	(date 1552872226000)
@@ -0,0 +1,39 @@
+version: '2'
+services:
+    efwservice-app:
+        image: efwservice
+        environment:
+            - _JAVA_OPTIONS=-Xmx512m -Xms256m
+            - SPRING_PROFILES_ACTIVE=prod,swagger
+            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
+            - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
+            - SPRING_DATASOURCE_URL=jdbc:postgresql://efwservice-postgresql:5432/efwservice
+            - JHIPSTER_SLEEP=30 # gives time for the JHipster Registry to boot before the application
+            - SPRING_DATA_JEST_URI=http://efwservice-elasticsearch:9200
+            - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka
+            - SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES=zookeeper
+    efwservice-postgresql:
+        extends:
+            file: postgresql.yml
+            service: efwservice-postgresql
+    efwservice-elasticsearch:
+        extends:
+            file: elasticsearch.yml
+            service: efwservice-elasticsearch
+    kafka:
+        extends:
+            file: kafka.yml
+            service: kafka
+        environment:
+            - KAFKA_ADVERTISED_HOST_NAME=kafka
+    zookeeper:
+        extends:
+            file: kafka.yml
+            service: zookeeper
+    jhipster-registry:
+        extends:
+            file: jhipster-registry.yml
+            service: jhipster-registry
+        environment:
+            - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
+            - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config/docker-config/
Index: src/main/docker/central-server-config/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/central-server-config/README.md	(date 1552872226000)
+++ src/main/docker/central-server-config/README.md	(date 1552872226000)
@@ -0,0 +1,8 @@
+# Central configuration sources details
+
+The JHipster-Registry will use the following directories as its configuration source :
+
+-   localhost-config : when running the registry in docker with the jhipster-registry.yml docker-compose file
+-   docker-config : when running the registry and the app both in docker with the app.yml docker-compose file
+
+For more info, refer to https://www.jhipster.tech/microservices-architecture/#registry_app_configuration
Index: src/main/docker/central-server-config/docker-config/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/central-server-config/docker-config/application.yml	(date 1552872226000)
+++ src/main/docker/central-server-config/docker-config/application.yml	(date 1552872226000)
@@ -0,0 +1,15 @@
+# Common configuration shared between all applications
+configserver:
+    name: Docker JHipster Registry
+    status: Connected to the JHipster Registry running in Docker
+
+jhipster:
+    security:
+        authentication:
+            jwt:
+                secret: my-secret-key-which-should-be-changed-in-production-and-be-base64-encoded
+
+eureka:
+    client:
+        service-url:
+            defaultZone: http://admin:${jhipster.registry.password}@jhipster-registry:8761/eureka/
Index: src/main/docker/central-server-config/localhost-config/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/central-server-config/localhost-config/application.yml	(date 1552872226000)
+++ src/main/docker/central-server-config/localhost-config/application.yml	(date 1552872226000)
@@ -0,0 +1,15 @@
+# Common configuration shared between all applications
+configserver:
+    name: Docker JHipster Registry
+    status: Connected to the JHipster Registry running in Docker
+
+jhipster:
+    security:
+        authentication:
+            jwt:
+                secret: my-secret-key-which-should-be-changed-in-production-and-be-base64-encoded
+
+eureka:
+    client:
+        service-url:
+            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/
Index: src/main/docker/elasticsearch.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/elasticsearch.yml	(date 1552872226000)
+++ src/main/docker/elasticsearch.yml	(date 1552872226000)
@@ -0,0 +1,12 @@
+version: '2'
+services:
+    efwservice-elasticsearch:
+        image: elasticsearch:5.6.13
+        # volumes:
+        #     - ~/volumes/jhipster/efwservice/elasticsearch/:/usr/share/elasticsearch/data/
+        ports:
+            - 9200:9200
+            - 9300:9300
+        command: -Enetwork.host=0.0.0.0 -Ediscovery.type=single-node
+        environment:
+            - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
Index: src/main/docker/entrypoint.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/entrypoint.sh	(date 1552872226000)
+++ src/main/docker/entrypoint.sh	(date 1552872226000)
@@ -0,0 +1,4 @@
+#!/bin/sh
+
+echo "The application will start in ${JHIPSTER_SLEEP}s..." && sleep ${JHIPSTER_SLEEP}
+exec java ${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom -jar "${HOME}/app.war" "$@"
Index: src/main/docker/hazelcast-management-center.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/hazelcast-management-center.yml	(date 1552872226000)
+++ src/main/docker/hazelcast-management-center.yml	(date 1552872226000)
@@ -0,0 +1,6 @@
+version: '2'
+services:
+    efwservice-hazelcast-management-center:
+        image: hazelcast/management-center:3.9.3
+        ports:
+            - 8180:8080
Index: src/main/docker/jhipster-registry.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/jhipster-registry.yml	(date 1552872226000)
+++ src/main/docker/jhipster-registry.yml	(date 1552872226000)
@@ -0,0 +1,22 @@
+version: '2'
+services:
+    jhipster-registry:
+        image: jhipster/jhipster-registry:v4.1.1
+        volumes:
+            - ./central-server-config:/central-config
+        # When run with the "dev" Spring profile, the JHipster Registry will
+        # read the config from the local filesystem (central-server-config directory)
+        # When run with the "prod" Spring profile, it will read the configuration from a Git repository
+        # See https://www.jhipster.tech/microservices-architecture/#registry_app_configuration
+        environment:
+            - _JAVA_OPTIONS=-Xmx512m -Xms256m
+            - SPRING_PROFILES_ACTIVE=dev,swagger
+            - SPRING_SECURITY_USER_PASSWORD=admin
+            - JHIPSTER_REGISTRY_PASSWORD=admin
+            - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
+            - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config/localhost-config/
+            # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=git
+            # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_URI=https://github.com/jhipster/jhipster-registry/
+            # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_PATHS=central-config
+        ports:
+            - 8761:8761
Index: src/main/docker/kafka.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/kafka.yml	(date 1552872226000)
+++ src/main/docker/kafka.yml	(date 1552872226000)
@@ -0,0 +1,15 @@
+version: '2'
+services:
+    zookeeper:
+        image: wurstmeister/zookeeper:3.4.6
+        ports:
+          - 2181:2181
+    kafka:
+        image: wurstmeister/kafka:1.0.0
+        environment:
+            KAFKA_ADVERTISED_HOST_NAME: localhost
+            KAFKA_ADVERTISED_PORT: 9092
+            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
+            KAFKA_CREATE_TOPICS: "topic-jhipster:1:1"
+        ports:
+            - 9092:9092
Index: src/main/docker/postgresql.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/postgresql.yml	(date 1552872226000)
+++ src/main/docker/postgresql.yml	(date 1552872226000)
@@ -0,0 +1,11 @@
+version: '2'
+services:
+    efwservice-postgresql:
+        image: postgres:10.4
+        # volumes:
+        #     - ~/volumes/jhipster/efwservice/postgresql/:/var/lib/postgresql/data/
+        environment:
+            - POSTGRES_USER=efwservice
+            - POSTGRES_PASSWORD=
+        ports:
+            - 5432:5432
Index: src/main/docker/sonar.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/sonar.yml	(date 1552872226000)
+++ src/main/docker/sonar.yml	(date 1552872226000)
@@ -0,0 +1,7 @@
+version: '2'
+services:
+    efwservice-sonar:
+        image: sonarqube:7.1
+        ports:
+            - 9001:9000
+            - 9092:9092
Index: src/main/docker/swagger-editor.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/docker/swagger-editor.yml	(date 1552872226000)
+++ src/main/docker/swagger-editor.yml	(date 1552872226000)
@@ -0,0 +1,6 @@
+version: '2'
+services:
+    swagger-editor:
+        image: swaggerapi/swagger-editor:latest
+        ports:
+            - 7742:8080
Index: src/main/java/de/iso/apps/ApplicationWebXml.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/ApplicationWebXml.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/ApplicationWebXml.java	(date 1552872226000)
@@ -0,0 +1,21 @@
+package de.iso.apps;
+
+import de.iso.apps.config.DefaultProfileUtil;
+import org.springframework.boot.builder.SpringApplicationBuilder;
+import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;
+
+/**
+ * This is a helper Java class that provides an alternative to creating a web.xml.
+ * This will be invoked only when the application is deployed to a Servlet container like Tomcat, JBoss etc.
+ */
+public class ApplicationWebXml extends SpringBootServletInitializer {
+
+    @Override
+    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
+        /**
+         * set a default to use when no profile is configured.
+         */
+        DefaultProfileUtil.addDefaultProfile(application.application());
+        return application.sources(EfwserviceApp.class);
+    }
+}
Index: src/main/java/de/iso/apps/EfwserviceApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/EfwserviceApp.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/EfwserviceApp.java	(date 1552872226000)
@@ -0,0 +1,107 @@
+package de.iso.apps;
+
+import de.iso.apps.config.ApplicationProperties;
+import de.iso.apps.config.DefaultProfileUtil;
+
+import io.github.jhipster.config.JHipsterConstants;
+
+import org.apache.commons.lang3.StringUtils;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.core.env.Environment;
+
+import javax.annotation.PostConstruct;
+import java.net.InetAddress;
+import java.net.UnknownHostException;
+import java.util.Arrays;
+import java.util.Collection;
+
+@SpringBootApplication
+@EnableConfigurationProperties({LiquibaseProperties.class, ApplicationProperties.class})
+@EnableDiscoveryClient
+public class EfwserviceApp {
+
+    private static final Logger log = LoggerFactory.getLogger(EfwserviceApp.class);
+
+    private final Environment env;
+
+    public EfwserviceApp(Environment env) {
+        this.env = env;
+    }
+
+    /**
+     * Initializes efwservice.
+     * <p>
+     * Spring profiles can be configured with a program argument --spring.profiles.active=your-active-profile
+     * <p>
+     * You can find more information on how profiles work with JHipster on <a href="https://www.jhipster.tech/profiles/">https://www.jhipster.tech/profiles/</a>.
+     */
+    @PostConstruct
+    public void initApplication() {
+        Collection<String> activeProfiles = Arrays.asList(env.getActiveProfiles());
+        if (activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT) && activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_PRODUCTION)) {
+            log.error("You have misconfigured your application! It should not run " +
+                "with both the 'dev' and 'prod' profiles at the same time.");
+        }
+        if (activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT) && activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_CLOUD)) {
+            log.error("You have misconfigured your application! It should not " +
+                "run with both the 'dev' and 'cloud' profiles at the same time.");
+        }
+    }
+
+    /**
+     * Main method, used to run the application.
+     *
+     * @param args the command line arguments
+     */
+    public static void main(String[] args) {
+        SpringApplication app = new SpringApplication(EfwserviceApp.class);
+        DefaultProfileUtil.addDefaultProfile(app);
+        Environment env = app.run(args).getEnvironment();
+        logApplicationStartup(env);
+    }
+
+    private static void logApplicationStartup(Environment env) {
+        String protocol = "http";
+        if (env.getProperty("server.ssl.key-store") != null) {
+            protocol = "https";
+        }
+        String serverPort = env.getProperty("server.port");
+        String contextPath = env.getProperty("server.servlet.context-path");
+        if (StringUtils.isBlank(contextPath)) {
+            contextPath = "/";
+        }
+        String hostAddress = "localhost";
+        try {
+            hostAddress = InetAddress.getLocalHost().getHostAddress();
+        } catch (UnknownHostException e) {
+            log.warn("The host name could not be determined, using `localhost` as fallback");
+        }
+        log.info("\n----------------------------------------------------------\n\t" +
+                "Application '{}' is running! Access URLs:\n\t" +
+                "Local: \t\t{}://localhost:{}{}\n\t" +
+                "External: \t{}://{}:{}{}\n\t" +
+                "Profile(s): \t{}\n----------------------------------------------------------",
+            env.getProperty("spring.application.name"),
+            protocol,
+            serverPort,
+            contextPath,
+            protocol,
+            hostAddress,
+            serverPort,
+            contextPath,
+            env.getActiveProfiles());
+
+        String configServerStatus = env.getProperty("configserver.status");
+        if (configServerStatus == null) {
+            configServerStatus = "Not found or not setup for this application";
+        }
+        log.info("\n----------------------------------------------------------\n\t" +
+                "Config Server: \t{}\n----------------------------------------------------------", configServerStatus);
+    }
+}
Index: src/main/java/de/iso/apps/aop/logging/LoggingAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/aop/logging/LoggingAspect.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/aop/logging/LoggingAspect.java	(date 1552872226000)
@@ -0,0 +1,98 @@
+package de.iso.apps.aop.logging;
+
+import io.github.jhipster.config.JHipsterConstants;
+
+import org.aspectj.lang.JoinPoint;
+import org.aspectj.lang.ProceedingJoinPoint;
+import org.aspectj.lang.annotation.AfterThrowing;
+import org.aspectj.lang.annotation.Around;
+import org.aspectj.lang.annotation.Aspect;
+import org.aspectj.lang.annotation.Pointcut;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.core.env.Environment;
+
+import java.util.Arrays;
+
+/**
+ * Aspect for logging execution of service and repository Spring components.
+ *
+ * By default, it only runs with the "dev" profile.
+ */
+@Aspect
+public class LoggingAspect {
+
+    private final Logger log = LoggerFactory.getLogger(this.getClass());
+
+    private final Environment env;
+
+    public LoggingAspect(Environment env) {
+        this.env = env;
+    }
+
+    /**
+     * Pointcut that matches all repositories, services and Web REST endpoints.
+     */
+    @Pointcut("within(@org.springframework.stereotype.Repository *)" +
+        " || within(@org.springframework.stereotype.Service *)" +
+        " || within(@org.springframework.web.bind.annotation.RestController *)")
+    public void springBeanPointcut() {
+        // Method is empty as this is just a Pointcut, the implementations are in the advices.
+    }
+
+    /**
+     * Pointcut that matches all Spring beans in the application's main packages.
+     */
+    @Pointcut("within(de.iso.apps.repository..*)"+
+        " || within(de.iso.apps.service..*)"+
+        " || within(de.iso.apps.web.rest..*)")
+    public void applicationPackagePointcut() {
+        // Method is empty as this is just a Pointcut, the implementations are in the advices.
+    }
+
+    /**
+     * Advice that logs methods throwing exceptions.
+     *
+     * @param joinPoint join point for advice
+     * @param e exception
+     */
+    @AfterThrowing(pointcut = "applicationPackagePointcut() && springBeanPointcut()", throwing = "e")
+    public void logAfterThrowing(JoinPoint joinPoint, Throwable e) {
+        if (env.acceptsProfiles(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {
+            log.error("Exception in {}.{}() with cause = \'{}\' and exception = \'{}\'", joinPoint.getSignature().getDeclaringTypeName(),
+                joinPoint.getSignature().getName(), e.getCause() != null? e.getCause() : "NULL", e.getMessage(), e);
+
+        } else {
+            log.error("Exception in {}.{}() with cause = {}", joinPoint.getSignature().getDeclaringTypeName(),
+                joinPoint.getSignature().getName(), e.getCause() != null? e.getCause() : "NULL");
+        }
+    }
+
+    /**
+     * Advice that logs when a method is entered and exited.
+     *
+     * @param joinPoint join point for advice
+     * @return result
+     * @throws Throwable throws IllegalArgumentException
+     */
+    @Around("applicationPackagePointcut() && springBeanPointcut()")
+    public Object logAround(ProceedingJoinPoint joinPoint) throws Throwable {
+        if (log.isDebugEnabled()) {
+            log.debug("Enter: {}.{}() with argument[s] = {}", joinPoint.getSignature().getDeclaringTypeName(),
+                joinPoint.getSignature().getName(), Arrays.toString(joinPoint.getArgs()));
+        }
+        try {
+            Object result = joinPoint.proceed();
+            if (log.isDebugEnabled()) {
+                log.debug("Exit: {}.{}() with result = {}", joinPoint.getSignature().getDeclaringTypeName(),
+                    joinPoint.getSignature().getName(), result);
+            }
+            return result;
+        } catch (IllegalArgumentException e) {
+            log.error("Illegal argument: {} in {}.{}()", Arrays.toString(joinPoint.getArgs()),
+                joinPoint.getSignature().getDeclaringTypeName(), joinPoint.getSignature().getName());
+
+            throw e;
+        }
+    }
+}
Index: src/main/java/de/iso/apps/client/UserFeignClientInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/client/UserFeignClientInterceptor.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/client/UserFeignClientInterceptor.java	(date 1552872226000)
@@ -0,0 +1,18 @@
+package de.iso.apps.client;
+
+import de.iso.apps.security.SecurityUtils;
+import feign.RequestInterceptor;
+import feign.RequestTemplate;
+import org.springframework.stereotype.Component;
+
+@Component
+public class UserFeignClientInterceptor implements RequestInterceptor {
+    private static final String AUTHORIZATION_HEADER = "Authorization";
+    private static final String BEARER = "Bearer";
+
+    @Override
+    public void apply(RequestTemplate template) {
+        SecurityUtils.getCurrentUserJWT()
+            .ifPresent(s -> template.header(AUTHORIZATION_HEADER,String.format("%s %s", BEARER, s)));
+    }
+}
Index: src/main/java/de/iso/apps/config/ApplicationProperties.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/ApplicationProperties.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/ApplicationProperties.java	(date 1552872226000)
@@ -0,0 +1,14 @@
+package de.iso.apps.config;
+
+import org.springframework.boot.context.properties.ConfigurationProperties;
+
+/**
+ * Properties specific to Efwservice.
+ * <p>
+ * Properties are configured in the application.yml file.
+ * See {@link io.github.jhipster.config.JHipsterProperties} for a good example.
+ */
+@ConfigurationProperties(prefix = "application", ignoreUnknownFields = false)
+public class ApplicationProperties {
+
+}
Index: src/main/java/de/iso/apps/config/AsyncConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/AsyncConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/AsyncConfiguration.java	(date 1552872226000)
@@ -0,0 +1,59 @@
+package de.iso.apps.config;
+
+import io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor;
+import io.github.jhipster.config.JHipsterProperties;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler;
+import org.springframework.aop.interceptor.SimpleAsyncUncaughtExceptionHandler;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.scheduling.annotation.*;
+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
+import org.springframework.scheduling.annotation.SchedulingConfigurer;
+import org.springframework.scheduling.config.ScheduledTaskRegistrar;
+
+import java.util.concurrent.Executor;
+import java.util.concurrent.Executors;
+
+@Configuration
+@EnableAsync
+@EnableScheduling
+public class AsyncConfiguration implements AsyncConfigurer, SchedulingConfigurer {
+
+    private final Logger log = LoggerFactory.getLogger(AsyncConfiguration.class);
+
+    private final JHipsterProperties jHipsterProperties;
+
+    public AsyncConfiguration(JHipsterProperties jHipsterProperties) {
+        this.jHipsterProperties = jHipsterProperties;
+    }
+
+    @Override
+    @Bean(name = "taskExecutor")
+    public Executor getAsyncExecutor() {
+        log.debug("Creating Async Task Executor");
+        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();
+        executor.setCorePoolSize(jHipsterProperties.getAsync().getCorePoolSize());
+        executor.setMaxPoolSize(jHipsterProperties.getAsync().getMaxPoolSize());
+        executor.setQueueCapacity(jHipsterProperties.getAsync().getQueueCapacity());
+        executor.setThreadNamePrefix("efwservice-Executor-");
+        return new ExceptionHandlingAsyncTaskExecutor(executor);
+    }
+
+    @Override
+    public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {
+        return new SimpleAsyncUncaughtExceptionHandler();
+    }
+    
+    @Override
+    public void configureTasks(ScheduledTaskRegistrar taskRegistrar) {
+        taskRegistrar.setScheduler(scheduledTaskExecutor());
+    }
+
+    @Bean
+    public Executor scheduledTaskExecutor() {
+        return Executors.newScheduledThreadPool(jHipsterProperties.getAsync().getCorePoolSize());
+    }
+}
Index: src/main/java/de/iso/apps/config/CacheConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/CacheConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/CacheConfiguration.java	(date 1552872226000)
@@ -0,0 +1,154 @@
+package de.iso.apps.config;
+
+import io.github.jhipster.config.JHipsterConstants;
+import io.github.jhipster.config.JHipsterProperties;
+
+import com.hazelcast.config.*;
+import com.hazelcast.core.HazelcastInstance;
+import com.hazelcast.core.Hazelcast;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.autoconfigure.web.ServerProperties;
+
+import org.springframework.cache.CacheManager;
+import org.springframework.cache.annotation.EnableCaching;
+import org.springframework.cloud.client.ServiceInstance;
+import org.springframework.cloud.client.discovery.DiscoveryClient;
+import org.springframework.cloud.client.serviceregistry.Registration;
+import org.springframework.context.annotation.*;
+import org.springframework.core.env.Environment;
+
+import javax.annotation.PreDestroy;
+
+@Configuration
+@EnableCaching
+public class CacheConfiguration {
+
+    private final Logger log = LoggerFactory.getLogger(CacheConfiguration.class);
+
+    private final Environment env;
+
+    private final ServerProperties serverProperties;
+
+    private final DiscoveryClient discoveryClient;
+
+    private Registration registration;
+
+    public CacheConfiguration(Environment env, ServerProperties serverProperties, DiscoveryClient discoveryClient) {
+        this.env = env;
+        this.serverProperties = serverProperties;
+        this.discoveryClient = discoveryClient;
+    }
+
+    @Autowired(required = false)
+    public void setRegistration(Registration registration) {
+        this.registration = registration;
+    }
+
+    @PreDestroy
+    public void destroy() {
+        log.info("Closing Cache Manager");
+        Hazelcast.shutdownAll();
+    }
+
+    @Bean
+    public CacheManager cacheManager(HazelcastInstance hazelcastInstance) {
+        log.debug("Starting HazelcastCacheManager");
+        return new com.hazelcast.spring.cache.HazelcastCacheManager(hazelcastInstance);
+    }
+
+    @Bean
+    public HazelcastInstance hazelcastInstance(JHipsterProperties jHipsterProperties) {
+        log.debug("Configuring Hazelcast");
+        HazelcastInstance hazelCastInstance = Hazelcast.getHazelcastInstanceByName("efwservice");
+        if (hazelCastInstance != null) {
+            log.debug("Hazelcast already initialized");
+            return hazelCastInstance;
+        }
+        Config config = new Config();
+        config.setInstanceName("efwservice");
+        config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(false);
+        if (this.registration == null) {
+            log.warn("No discovery service is set up, Hazelcast cannot create a cluster.");
+        } else {
+            // The serviceId is by default the application's name,
+            // see the "spring.application.name" standard Spring property
+            String serviceId = registration.getServiceId();
+            log.debug("Configuring Hazelcast clustering for instanceId: {}", serviceId);
+            // In development, everything goes through 127.0.0.1, with a different port
+            if (env.acceptsProfiles(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {
+                log.debug("Application is running with the \"dev\" profile, Hazelcast " +
+                          "cluster will only work with localhost instances");
+
+                System.setProperty("hazelcast.local.localAddress", "127.0.0.1");
+                config.getNetworkConfig().setPort(serverProperties.getPort() + 5701);
+                config.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(true);
+                for (ServiceInstance instance : discoveryClient.getInstances(serviceId)) {
+                    String clusterMember = "127.0.0.1:" + (instance.getPort() + 5701);
+                    log.debug("Adding Hazelcast (dev) cluster member {}", clusterMember);
+                    config.getNetworkConfig().getJoin().getTcpIpConfig().addMember(clusterMember);
+                }
+            } else { // Production configuration, one host per instance all using port 5701
+                config.getNetworkConfig().setPort(5701);
+                config.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(true);
+                for (ServiceInstance instance : discoveryClient.getInstances(serviceId)) {
+                    String clusterMember = instance.getHost() + ":5701";
+                    log.debug("Adding Hazelcast (prod) cluster member {}", clusterMember);
+                    config.getNetworkConfig().getJoin().getTcpIpConfig().addMember(clusterMember);
+                }
+            }
+        }
+        config.getMapConfigs().put("default", initializeDefaultMapConfig(jHipsterProperties));
+
+        // Full reference is available at: http://docs.hazelcast.org/docs/management-center/3.9/manual/html/Deploying_and_Starting.html
+        config.setManagementCenterConfig(initializeDefaultManagementCenterConfig(jHipsterProperties));
+        config.getMapConfigs().put("de.iso.apps.domain.*", initializeDomainMapConfig(jHipsterProperties));
+        return Hazelcast.newHazelcastInstance(config);
+    }
+
+    private ManagementCenterConfig initializeDefaultManagementCenterConfig(JHipsterProperties jHipsterProperties) {
+        ManagementCenterConfig managementCenterConfig = new ManagementCenterConfig();
+        managementCenterConfig.setEnabled(jHipsterProperties.getCache().getHazelcast().getManagementCenter().isEnabled());
+        managementCenterConfig.setUrl(jHipsterProperties.getCache().getHazelcast().getManagementCenter().getUrl());
+        managementCenterConfig.setUpdateInterval(jHipsterProperties.getCache().getHazelcast().getManagementCenter().getUpdateInterval());
+        return managementCenterConfig;
+    }
+
+    private MapConfig initializeDefaultMapConfig(JHipsterProperties jHipsterProperties) {
+        MapConfig mapConfig = new MapConfig();
+
+        /*
+        Number of backups. If 1 is set as the backup-count for example,
+        then all entries of the map will be copied to another JVM for
+        fail-safety. Valid numbers are 0 (no backup), 1, 2, 3.
+        */
+        mapConfig.setBackupCount(jHipsterProperties.getCache().getHazelcast().getBackupCount());
+
+        /*
+        Valid values are:
+        NONE (no eviction),
+        LRU (Least Recently Used),
+        LFU (Least Frequently Used).
+        NONE is the default.
+        */
+        mapConfig.setEvictionPolicy(EvictionPolicy.LRU);
+
+        /*
+        Maximum size of the map. When max size is reached,
+        map is evicted based on the policy defined.
+        Any integer between 0 and Integer.MAX_VALUE. 0 means
+        Integer.MAX_VALUE. Default is 0.
+        */
+        mapConfig.setMaxSizeConfig(new MaxSizeConfig(0, MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE));
+
+        return mapConfig;
+    }
+
+    private MapConfig initializeDomainMapConfig(JHipsterProperties jHipsterProperties) {
+        MapConfig mapConfig = new MapConfig();
+        mapConfig.setTimeToLiveSeconds(jHipsterProperties.getCache().getHazelcast().getTimeToLiveSeconds());
+        return mapConfig;
+    }
+}
Index: src/main/java/de/iso/apps/config/CloudDatabaseConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/CloudDatabaseConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/CloudDatabaseConfiguration.java	(date 1552872226000)
@@ -0,0 +1,29 @@
+package de.iso.apps.config;
+
+import io.github.jhipster.config.JHipsterConstants;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.cache.CacheManager;
+import org.springframework.cloud.config.java.AbstractCloudConfig;
+import org.springframework.context.annotation.*;
+
+import javax.sql.DataSource;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+
+
+@Configuration
+@Profile(JHipsterConstants.SPRING_PROFILE_CLOUD)
+public class CloudDatabaseConfiguration extends AbstractCloudConfig {
+
+    private final Logger log = LoggerFactory.getLogger(CloudDatabaseConfiguration.class);
+    
+    private static final String CLOUD_CONFIGURATION_HIKARI_PREFIX = "spring.datasource.hikari";
+
+    @Bean
+    @ConfigurationProperties(CLOUD_CONFIGURATION_HIKARI_PREFIX)
+    public DataSource dataSource(CacheManager cacheManager) {
+        log.info("Configuring JDBC datasource from a cloud provider");
+        return connectionFactory().dataSource();
+    }
+}
Index: src/main/java/de/iso/apps/config/Constants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/Constants.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/Constants.java	(date 1552872226000)
@@ -0,0 +1,17 @@
+package de.iso.apps.config;
+
+/**
+ * Application constants.
+ */
+public final class Constants {
+
+    // Regex for acceptable logins
+    public static final String LOGIN_REGEX = "^[_.@A-Za-z0-9-]*$";
+
+    public static final String SYSTEM_ACCOUNT = "system";
+    public static final String ANONYMOUS_USER = "anonymoususer";
+    public static final String DEFAULT_LANGUAGE = "de";
+    
+    private Constants() {
+    }
+}
Index: src/main/java/de/iso/apps/config/DatabaseConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/DatabaseConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/DatabaseConfiguration.java	(date 1552872226000)
@@ -0,0 +1,61 @@
+package de.iso.apps.config;
+
+import io.github.jhipster.config.JHipsterConstants;
+import io.github.jhipster.config.h2.H2ConfigurationHelper;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Profile;
+import org.springframework.data.elasticsearch.repository.config.EnableElasticsearchRepositories;
+
+import org.springframework.core.env.Environment;
+import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
+import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
+import org.springframework.transaction.annotation.EnableTransactionManagement;
+
+import java.sql.SQLException;
+
+@Configuration
+@EnableJpaRepositories("de.iso.apps.repository")
+@EnableJpaAuditing(auditorAwareRef = "springSecurityAuditorAware")
+@EnableTransactionManagement
+@EnableElasticsearchRepositories("de.iso.apps.repository.search")
+public class DatabaseConfiguration {
+
+    private final Logger log = LoggerFactory.getLogger(DatabaseConfiguration.class);
+
+    private final Environment env;
+
+    public DatabaseConfiguration(Environment env) {
+        this.env = env;
+    }
+
+    /**
+     * Open the TCP port for the H2 database, so it is available remotely.
+     *
+     * @return the H2 database TCP server
+     * @throws SQLException if the server failed to start
+     */
+    @Bean(initMethod = "start", destroyMethod = "stop")
+    @Profile(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)
+    public Object h2TCPServer() throws SQLException {
+        String port = getValidPortForH2();
+        log.debug("H2 database is available on port {}", port);
+        return H2ConfigurationHelper.createServer(port);
+    }
+	
+    private String getValidPortForH2() {
+        int port = Integer.parseInt(env.getProperty("server.port"));
+        if (port < 10000) {
+            port = 10000 + port;
+        } else {
+            if (port < 63536) {
+                port = port + 2000;
+            } else {
+                port = port - 2000;
+            }
+        }
+        return String.valueOf(port);
+    }
+}
Index: src/main/java/de/iso/apps/config/DateTimeFormatConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/DateTimeFormatConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/DateTimeFormatConfiguration.java	(date 1552872226000)
@@ -0,0 +1,20 @@
+package de.iso.apps.config;
+
+import org.springframework.context.annotation.Configuration;
+import org.springframework.format.FormatterRegistry;
+import org.springframework.format.datetime.standard.DateTimeFormatterRegistrar;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
+
+/**
+ * Configure the converters to use the ISO format for dates by default.
+ */
+@Configuration
+public class DateTimeFormatConfiguration implements WebMvcConfigurer {
+
+    @Override
+    public void addFormatters(FormatterRegistry registry) {
+        DateTimeFormatterRegistrar registrar = new DateTimeFormatterRegistrar();
+        registrar.setUseIsoFormat(true);
+        registrar.registerFormatters(registry);
+    }
+}
Index: src/main/java/de/iso/apps/config/DefaultProfileUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/DefaultProfileUtil.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/DefaultProfileUtil.java	(date 1552872226000)
@@ -0,0 +1,51 @@
+package de.iso.apps.config;
+
+import io.github.jhipster.config.JHipsterConstants;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.core.env.Environment;
+
+import java.util.*;
+
+/**
+ * Utility class to load a Spring profile to be used as default
+ * when there is no <code>spring.profiles.active</code> set in the environment or as command line argument.
+ * If the value is not available in <code>application.yml</code> then <code>dev</code> profile will be used as default.
+ */
+public final class DefaultProfileUtil {
+
+    private static final String SPRING_PROFILE_DEFAULT = "spring.profiles.default";
+
+    private DefaultProfileUtil() {
+    }
+
+    /**
+     * Set a default to use when no profile is configured.
+     *
+     * @param app the Spring application
+     */
+    public static void addDefaultProfile(SpringApplication app) {
+        Map<String, Object> defProperties = new HashMap<>();
+        /*
+        * The default profile to use when no other profiles are defined
+        * This cannot be set in the <code>application.yml</code> file.
+        * See https://github.com/spring-projects/spring-boot/issues/1219
+        */
+        defProperties.put(SPRING_PROFILE_DEFAULT, JHipsterConstants.SPRING_PROFILE_DEVELOPMENT);
+        app.setDefaultProperties(defProperties);
+    }
+
+    /**
+     * Get the profiles that are applied else get default profiles.
+     *
+     * @param env spring environment
+     * @return profiles
+     */
+    public static String[] getActiveProfiles(Environment env) {
+        String[] profiles = env.getActiveProfiles();
+        if (profiles.length == 0) {
+            return env.getDefaultProfiles();
+        }
+        return profiles;
+    }
+}
Index: src/main/java/de/iso/apps/config/ElasticsearchConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/ElasticsearchConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/ElasticsearchConfiguration.java	(date 1552872226000)
@@ -0,0 +1,72 @@
+package de.iso.apps.config;
+
+import com.fasterxml.jackson.databind.DeserializationFeature;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.SerializationFeature;
+import com.github.vanroy.springdata.jest.JestElasticsearchTemplate;
+import com.github.vanroy.springdata.jest.mapper.DefaultJestResultsMapper;
+import io.searchbox.client.JestClient;
+import org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Primary;
+import org.springframework.data.elasticsearch.core.ElasticsearchOperations;
+import org.springframework.data.elasticsearch.core.EntityMapper;
+import org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter;
+import org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchMappingContext;
+
+import java.io.IOException;
+
+@Configuration
+@EnableConfigurationProperties(ElasticsearchProperties.class)
+public class ElasticsearchConfiguration {
+
+    private ObjectMapper mapper;
+
+    public ElasticsearchConfiguration(ObjectMapper mapper) {
+        this.mapper = mapper;
+    }
+
+    @Bean
+    public EntityMapper getEntityMapper() {
+        return new CustomEntityMapper(mapper);
+    }
+
+    @Bean
+    @Primary
+    public ElasticsearchOperations elasticsearchTemplate(final JestClient jestClient,
+                                                         final ElasticsearchConverter elasticsearchConverter,
+                                                         final SimpleElasticsearchMappingContext simpleElasticsearchMappingContext,
+                                                         EntityMapper mapper) {
+        return new JestElasticsearchTemplate(
+            jestClient,
+            elasticsearchConverter,
+            new DefaultJestResultsMapper(simpleElasticsearchMappingContext, mapper));
+    }
+
+    public class CustomEntityMapper implements EntityMapper {
+
+        private ObjectMapper objectMapper;
+
+        public CustomEntityMapper(ObjectMapper objectMapper) {
+            this.objectMapper = objectMapper;
+            objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
+            objectMapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
+            objectMapper.configure(SerializationFeature.WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS, true);
+            objectMapper.configure(SerializationFeature.INDENT_OUTPUT, false);
+            objectMapper.configure(DeserializationFeature.READ_DATE_TIMESTAMPS_AS_NANOSECONDS, true);
+        }
+
+        @Override
+        public String mapToString(Object object) throws IOException {
+            return objectMapper.writeValueAsString(object);
+        }
+
+        @Override
+        public <T> T mapToObject(String source, Class<T> clazz) throws IOException {
+            return objectMapper.readValue(source, clazz);
+        }
+    }
+
+}
Index: src/main/java/de/iso/apps/config/FeignConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/FeignConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/FeignConfiguration.java	(date 1552872226000)
@@ -0,0 +1,18 @@
+package de.iso.apps.config;
+
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+@Configuration
+@EnableFeignClients(basePackages = "de.iso.apps")
+public class FeignConfiguration {
+
+    /**
+     * Set the Feign specific log level to log client REST requests
+     */
+    @Bean
+    feign.Logger.Level feignLoggerLevel() {
+        return feign.Logger.Level.BASIC;
+    }
+}
Index: src/main/java/de/iso/apps/config/JacksonConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/JacksonConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/JacksonConfiguration.java	(date 1552872226000)
@@ -0,0 +1,63 @@
+package de.iso.apps.config;
+
+import com.fasterxml.jackson.datatype.hibernate5.Hibernate5Module;
+import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;
+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
+import com.fasterxml.jackson.module.afterburner.AfterburnerModule;
+
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.zalando.problem.ProblemModule;
+import org.zalando.problem.violations.ConstraintViolationProblemModule;
+
+@Configuration
+public class JacksonConfiguration {
+
+    /**
+     * Support for Java date and time API.
+     * @return the corresponding Jackson module.
+     */
+    @Bean
+    public JavaTimeModule javaTimeModule() {
+        return new JavaTimeModule();
+    }
+
+    @Bean
+    public Jdk8Module jdk8TimeModule() {
+        return new Jdk8Module();
+    }
+
+
+    /*
+     * Support for Hibernate types in Jackson.
+     */
+    @Bean
+    public Hibernate5Module hibernate5Module() {
+        return new Hibernate5Module();
+    }
+
+    /*
+     * Jackson Afterburner module to speed up serialization/deserialization.
+     */
+    @Bean
+    public AfterburnerModule afterburnerModule() {
+        return new AfterburnerModule();
+    }
+
+    /*
+     * Module for serialization/deserialization of RFC7807 Problem.
+     */
+    @Bean
+    ProblemModule problemModule() {
+        return new ProblemModule();
+    }
+
+    /*
+     * Module for serialization/deserialization of ConstraintViolationProblem.
+     */
+    @Bean
+    ConstraintViolationProblemModule constraintViolationProblemModule() {
+        return new ConstraintViolationProblemModule();
+    }
+
+}
Index: src/main/java/de/iso/apps/config/LiquibaseConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/LiquibaseConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/LiquibaseConfiguration.java	(date 1552872226000)
@@ -0,0 +1,53 @@
+package de.iso.apps.config;
+
+import javax.sql.DataSource;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Qualifier;
+import org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties;
+import org.springframework.cache.CacheManager;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.core.env.Environment;
+import org.springframework.core.task.TaskExecutor;
+
+import io.github.jhipster.config.JHipsterConstants;
+import io.github.jhipster.config.liquibase.AsyncSpringLiquibase;
+import liquibase.integration.spring.SpringLiquibase;
+
+@Configuration
+public class LiquibaseConfiguration {
+
+    private final Logger log = LoggerFactory.getLogger(LiquibaseConfiguration.class);
+
+    private final Environment env;
+
+    private final CacheManager cacheManager;
+
+    public LiquibaseConfiguration(Environment env, CacheManager cacheManager) {
+        this.env = env;
+        this.cacheManager = cacheManager;
+    }
+
+    @Bean
+    public SpringLiquibase liquibase(@Qualifier("taskExecutor") TaskExecutor taskExecutor,
+            DataSource dataSource, LiquibaseProperties liquibaseProperties) {
+
+        // Use liquibase.integration.spring.SpringLiquibase if you don't want Liquibase to start asynchronously
+        SpringLiquibase liquibase = new AsyncSpringLiquibase(taskExecutor, env);
+        liquibase.setDataSource(dataSource);
+        liquibase.setChangeLog("classpath:config/liquibase/master.xml");
+        liquibase.setContexts(liquibaseProperties.getContexts());
+        liquibase.setDefaultSchema(liquibaseProperties.getDefaultSchema());
+        liquibase.setDropFirst(liquibaseProperties.isDropFirst());
+        liquibase.setChangeLogParameters(liquibaseProperties.getParameters());
+        if (env.acceptsProfiles(JHipsterConstants.SPRING_PROFILE_NO_LIQUIBASE)) {
+            liquibase.setShouldRun(false);
+        } else {
+            liquibase.setShouldRun(liquibaseProperties.isEnabled());
+            log.debug("Configuring Liquibase");
+        }
+        return liquibase;
+    }
+}
Index: src/main/java/de/iso/apps/config/LocaleConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/LocaleConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/LocaleConfiguration.java	(date 1552872226000)
@@ -0,0 +1,27 @@
+package de.iso.apps.config;
+
+import io.github.jhipster.config.locale.AngularCookieLocaleResolver;
+
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.servlet.LocaleResolver;
+import org.springframework.web.servlet.config.annotation.*;
+import org.springframework.web.servlet.i18n.LocaleChangeInterceptor;
+
+@Configuration
+public class LocaleConfiguration implements WebMvcConfigurer {
+
+    @Bean(name = "localeResolver")
+    public LocaleResolver localeResolver() {
+        AngularCookieLocaleResolver cookieLocaleResolver = new AngularCookieLocaleResolver();
+        cookieLocaleResolver.setCookieName("NG_TRANSLATE_LANG_KEY");
+        return cookieLocaleResolver;
+    }
+
+    @Override
+    public void addInterceptors(InterceptorRegistry registry) {
+        LocaleChangeInterceptor localeChangeInterceptor = new LocaleChangeInterceptor();
+        localeChangeInterceptor.setParamName("language");
+        registry.addInterceptor(localeChangeInterceptor);
+    }
+}
Index: src/main/java/de/iso/apps/config/LoggingAspectConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/LoggingAspectConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/LoggingAspectConfiguration.java	(date 1552872226000)
@@ -0,0 +1,19 @@
+package de.iso.apps.config;
+
+import de.iso.apps.aop.logging.LoggingAspect;
+
+import io.github.jhipster.config.JHipsterConstants;
+
+import org.springframework.context.annotation.*;
+import org.springframework.core.env.Environment;
+
+@Configuration
+@EnableAspectJAutoProxy
+public class LoggingAspectConfiguration {
+
+    @Bean
+    @Profile(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)
+    public LoggingAspect loggingAspect(Environment env) {
+        return new LoggingAspect(env);
+    }
+}
Index: src/main/java/de/iso/apps/config/LoggingConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/LoggingConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/LoggingConfiguration.java	(date 1552872226000)
@@ -0,0 +1,161 @@
+package de.iso.apps.config;
+
+import java.net.InetSocketAddress;
+import java.util.Iterator;
+
+import io.github.jhipster.config.JHipsterProperties;
+
+import ch.qos.logback.classic.AsyncAppender;
+import ch.qos.logback.classic.Level;
+import ch.qos.logback.classic.LoggerContext;
+import ch.qos.logback.classic.boolex.OnMarkerEvaluator;
+import ch.qos.logback.classic.spi.ILoggingEvent;
+import ch.qos.logback.classic.spi.LoggerContextListener;
+import ch.qos.logback.core.Appender;
+import ch.qos.logback.core.filter.EvaluatorFilter;
+import ch.qos.logback.core.spi.ContextAwareBase;
+import ch.qos.logback.core.spi.FilterReply;
+import net.logstash.logback.appender.LogstashTcpSocketAppender;
+import net.logstash.logback.encoder.LogstashEncoder;
+import net.logstash.logback.stacktrace.ShortenedThrowableConverter;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.cloud.context.config.annotation.RefreshScope;
+import org.springframework.context.annotation.Configuration;
+
+@Configuration
+@RefreshScope
+public class LoggingConfiguration {
+
+    private static final String LOGSTASH_APPENDER_NAME = "LOGSTASH";
+
+    private static final String ASYNC_LOGSTASH_APPENDER_NAME = "ASYNC_LOGSTASH";
+
+    private final Logger log = LoggerFactory.getLogger(LoggingConfiguration.class);
+
+    private LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
+
+    private final String appName;
+
+    private final String serverPort;
+
+    private final String version;
+
+    private final JHipsterProperties jHipsterProperties;
+
+    public LoggingConfiguration(@Value("${spring.application.name}") String appName, @Value("${server.port}") String serverPort,
+         @Value("${info.project.version:}") String version, JHipsterProperties jHipsterProperties) {
+        this.appName = appName;
+        this.serverPort = serverPort;
+        this.version = version;
+        this.jHipsterProperties = jHipsterProperties;
+        if (jHipsterProperties.getLogging().getLogstash().isEnabled()) {
+            addLogstashAppender(context);
+            addContextListener(context);
+        }
+        if (jHipsterProperties.getMetrics().getLogs().isEnabled()) {
+            setMetricsMarkerLogbackFilter(context);
+        }
+    }
+
+    private void addContextListener(LoggerContext context) {
+        LogbackLoggerContextListener loggerContextListener = new LogbackLoggerContextListener();
+        loggerContextListener.setContext(context);
+        context.addListener(loggerContextListener);
+    }
+
+    private void addLogstashAppender(LoggerContext context) {
+        log.info("Initializing Logstash logging");
+
+        LogstashTcpSocketAppender logstashAppender = new LogstashTcpSocketAppender();
+        logstashAppender.setName(LOGSTASH_APPENDER_NAME);
+        logstashAppender.setContext(context);
+        String optionalFields = "";
+        String customFields = "{\"app_name\":\"" + appName + "\",\"app_port\":\"" + serverPort + "\"," +
+            optionalFields + "\"version\":\"" + version + "\"}";
+
+        // More documentation is available at: https://github.com/logstash/logstash-logback-encoder
+        LogstashEncoder logstashEncoder = new LogstashEncoder();
+        // Set the Logstash appender config from JHipster properties
+        logstashAppender.addDestinations(new InetSocketAddress(jHipsterProperties.getLogging().getLogstash().getHost(), jHipsterProperties.getLogging().getLogstash().getPort()));
+
+        ShortenedThrowableConverter throwableConverter = new ShortenedThrowableConverter();
+        throwableConverter.setRootCauseFirst(true);
+        logstashEncoder.setThrowableConverter(throwableConverter);
+        logstashEncoder.setCustomFields(customFields);
+
+        logstashAppender.setEncoder(logstashEncoder);
+        logstashAppender.start();
+
+        // Wrap the appender in an Async appender for performance
+        AsyncAppender asyncLogstashAppender = new AsyncAppender();
+        asyncLogstashAppender.setContext(context);
+        asyncLogstashAppender.setName(ASYNC_LOGSTASH_APPENDER_NAME);
+        asyncLogstashAppender.setQueueSize(jHipsterProperties.getLogging().getLogstash().getQueueSize());
+        asyncLogstashAppender.addAppender(logstashAppender);
+        asyncLogstashAppender.start();
+
+        context.getLogger("ROOT").addAppender(asyncLogstashAppender);
+    }
+
+    // Configure a log filter to remove "metrics" logs from all appenders except the "LOGSTASH" appender
+    private void setMetricsMarkerLogbackFilter(LoggerContext context) {
+        log.info("Filtering metrics logs from all appenders except the {} appender", LOGSTASH_APPENDER_NAME);
+        OnMarkerEvaluator onMarkerMetricsEvaluator = new OnMarkerEvaluator();
+        onMarkerMetricsEvaluator.setContext(context);
+        onMarkerMetricsEvaluator.addMarker("metrics");
+        onMarkerMetricsEvaluator.start();
+        EvaluatorFilter<ILoggingEvent> metricsFilter = new EvaluatorFilter<>();
+        metricsFilter.setContext(context);
+        metricsFilter.setEvaluator(onMarkerMetricsEvaluator);
+        metricsFilter.setOnMatch(FilterReply.DENY);
+        metricsFilter.start();
+
+        for (ch.qos.logback.classic.Logger logger : context.getLoggerList()) {
+            for (Iterator<Appender<ILoggingEvent>> it = logger.iteratorForAppenders(); it.hasNext();) {
+                Appender<ILoggingEvent> appender = it.next();
+                if (!appender.getName().equals(ASYNC_LOGSTASH_APPENDER_NAME)) {
+                    log.debug("Filter metrics logs from the {} appender", appender.getName());
+                    appender.setContext(context);
+                    appender.addFilter(metricsFilter);
+                    appender.start();
+                }
+            }
+        }
+    }
+
+    /**
+     * Logback configuration is achieved by configuration file and API.
+     * When configuration file change is detected, the configuration is reset.
+     * This listener ensures that the programmatic configuration is also re-applied after reset.
+     */
+    class LogbackLoggerContextListener extends ContextAwareBase implements LoggerContextListener {
+
+        @Override
+        public boolean isResetResistant() {
+            return true;
+        }
+
+        @Override
+        public void onStart(LoggerContext context) {
+            addLogstashAppender(context);
+        }
+
+        @Override
+        public void onReset(LoggerContext context) {
+            addLogstashAppender(context);
+        }
+
+        @Override
+        public void onStop(LoggerContext context) {
+            // Nothing to do.
+        }
+
+        @Override
+        public void onLevelChange(ch.qos.logback.classic.Logger logger, Level level) {
+            // Nothing to do.
+        }
+    }
+
+}
Index: src/main/java/de/iso/apps/config/MessagingConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/MessagingConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/MessagingConfiguration.java	(date 1552872226000)
@@ -0,0 +1,41 @@
+package de.iso.apps.config;
+
+import java.time.LocalDateTime;
+import java.time.format.DateTimeFormatter;
+
+import org.springframework.cloud.stream.annotation.EnableBinding;
+import org.springframework.cloud.stream.messaging.Source;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.context.annotation.Bean;
+import org.springframework.integration.annotation.InboundChannelAdapter;
+import org.springframework.integration.annotation.Poller;
+import org.springframework.integration.core.MessageSource;
+import org.springframework.messaging.support.GenericMessage;
+
+/**
+ * Configures Spring Cloud Stream support.
+ *
+ * This works out-of-the-box if you use the Docker Compose configuration at "src/main/docker/kafka.yml".
+ *
+ * See http://docs.spring.io/spring-cloud-stream/docs/current/reference/htmlsingle/
+ * for the official Spring Cloud Stream documentation.
+ */
+@EnableBinding(value = { Source.class })
+public class MessagingConfiguration {
+
+    @Value("${spring.application.name:JhipsterService}")
+    private String applicationName;
+
+    /**
+     * This sends a test message at regular intervals set as fixedRate (in ms)
+     *
+     * In order to see the test messages, you can use the Kafka command-line client:
+     * "./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic topic-jhipster --from-beginning".
+     */
+    @Bean
+    @InboundChannelAdapter(value = Source.OUTPUT, poller = @Poller(fixedRate = "60000"))
+    public MessageSource<String> timerMessageSource() {
+        return () -> new GenericMessage<>("Test message from " + applicationName
+            + " sent at " + LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));
+    }
+}
Index: src/main/java/de/iso/apps/config/SecurityConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/SecurityConfiguration.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/SecurityConfiguration.java	(date 1552872226000)
@@ -0,0 +1,71 @@
+package de.iso.apps.config;
+
+import de.iso.apps.security.*;
+import de.iso.apps.security.jwt.*;
+
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Import;
+import org.springframework.http.HttpMethod;
+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
+import org.springframework.security.config.annotation.web.builders.WebSecurity;
+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
+import org.springframework.security.config.http.SessionCreationPolicy;
+import org.zalando.problem.spring.web.advice.security.SecurityProblemSupport;
+
+@Configuration
+@EnableWebSecurity
+@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)
+@Import(SecurityProblemSupport.class)
+public class SecurityConfiguration extends WebSecurityConfigurerAdapter {
+
+    private final TokenProvider tokenProvider;
+
+    private final SecurityProblemSupport problemSupport;
+
+    public SecurityConfiguration(TokenProvider tokenProvider, SecurityProblemSupport problemSupport) {
+        this.tokenProvider = tokenProvider;
+        this.problemSupport = problemSupport;
+    }
+
+    @Override
+    public void configure(WebSecurity web) throws Exception {
+        web.ignoring()
+            .antMatchers(HttpMethod.OPTIONS, "/**")
+            .antMatchers("/h2-console/**")
+            .antMatchers("/swagger-ui/index.html")
+            .antMatchers("/test/**");
+    }
+
+    @Override
+    public void configure(HttpSecurity http) throws Exception {
+        http
+            .csrf()
+            .disable()
+            .exceptionHandling()
+            .authenticationEntryPoint(problemSupport)
+            .accessDeniedHandler(problemSupport)
+        .and()
+            .headers()
+            .frameOptions()
+            .disable()
+        .and()
+            .sessionManagement()
+            .sessionCreationPolicy(SessionCreationPolicy.STATELESS)
+        .and()
+            .authorizeRequests()
+            .antMatchers("/api/**").authenticated()
+            .antMatchers("/management/health").permitAll()
+            .antMatchers("/management/info").permitAll()
+            .antMatchers("/management/**").hasAuthority(AuthoritiesConstants.ADMIN)
+        .and()
+            .apply(securityConfigurerAdapter());
+
+    }
+
+    private JWTConfigurer securityConfigurerAdapter() {
+        return new JWTConfigurer(tokenProvider);
+    }
+}
Index: src/main/java/de/iso/apps/config/WebConfigurer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/WebConfigurer.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/WebConfigurer.java	(date 1552872226000)
@@ -0,0 +1,112 @@
+package de.iso.apps.config;
+
+import io.github.jhipster.config.JHipsterConstants;
+import io.github.jhipster.config.JHipsterProperties;
+import io.github.jhipster.config.h2.H2ConfigurationHelper;
+import io.undertow.UndertowOptions;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory;
+import org.springframework.boot.web.server.*;
+import org.springframework.boot.web.servlet.ServletContextInitializer;
+import org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.core.env.Environment;
+import org.springframework.http.MediaType;
+import org.springframework.web.cors.CorsConfiguration;
+import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
+import org.springframework.web.filter.CorsFilter;
+
+import javax.servlet.*;
+import java.nio.charset.StandardCharsets;
+import java.util.*;
+
+
+/**
+ * Configuration of web application with Servlet 3.0 APIs.
+ */
+@Configuration
+public class WebConfigurer implements ServletContextInitializer, WebServerFactoryCustomizer<WebServerFactory> {
+
+    private final Logger log = LoggerFactory.getLogger(WebConfigurer.class);
+
+    private final Environment env;
+
+    private final JHipsterProperties jHipsterProperties;
+
+    public WebConfigurer(Environment env, JHipsterProperties jHipsterProperties) {
+
+        this.env = env;
+        this.jHipsterProperties = jHipsterProperties;
+    }
+
+    @Override
+    public void onStartup(ServletContext servletContext) throws ServletException {
+        if (env.getActiveProfiles().length != 0) {
+            log.info("Web application configuration, using profiles: {}", (Object[]) env.getActiveProfiles());
+        }
+        EnumSet<DispatcherType> disps = EnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD, DispatcherType.ASYNC);
+        if (env.acceptsProfiles(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {
+            initH2Console(servletContext);
+        }
+        log.info("Web application fully configured");
+    }
+
+    /**
+     * Customize the Servlet engine: Mime types, the document root, the cache.
+     */
+    @Override
+    public void customize(WebServerFactory server) {
+        setMimeMappings(server);
+
+        /*
+         * Enable HTTP/2 for Undertow - https://twitter.com/ankinson/status/829256167700492288
+         * HTTP/2 requires HTTPS, so HTTP requests will fallback to HTTP/1.1.
+         * See the JHipsterProperties class and your application-*.yml configuration files
+         * for more information.
+         */
+        if (jHipsterProperties.getHttp().getVersion().equals(JHipsterProperties.Http.Version.V_2_0) &&
+            server instanceof UndertowServletWebServerFactory) {
+
+            ((UndertowServletWebServerFactory) server)
+                .addBuilderCustomizers(builder ->
+                    builder.setServerOption(UndertowOptions.ENABLE_HTTP2, true));
+        }
+    }
+
+    private void setMimeMappings(WebServerFactory server) {
+        if (server instanceof ConfigurableServletWebServerFactory) {
+            MimeMappings mappings = new MimeMappings(MimeMappings.DEFAULT);
+            // IE issue, see https://github.com/jhipster/generator-jhipster/pull/711
+            mappings.add("html", MediaType.TEXT_HTML_VALUE + ";charset=" + StandardCharsets.UTF_8.name().toLowerCase());
+            // CloudFoundry issue, see https://github.com/cloudfoundry/gorouter/issues/64
+            mappings.add("json", MediaType.TEXT_HTML_VALUE + ";charset=" + StandardCharsets.UTF_8.name().toLowerCase());
+            ConfigurableServletWebServerFactory servletWebServer = (ConfigurableServletWebServerFactory) server;
+            servletWebServer.setMimeMappings(mappings);
+        }
+    }
+
+    @Bean
+    public CorsFilter corsFilter() {
+        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
+        CorsConfiguration config = jHipsterProperties.getCors();
+        if (config.getAllowedOrigins() != null && !config.getAllowedOrigins().isEmpty()) {
+            log.debug("Registering CORS filter");
+            source.registerCorsConfiguration("/api/**", config);
+            source.registerCorsConfiguration("/management/**", config);
+            source.registerCorsConfiguration("/v2/api-docs", config);
+        }
+        return new CorsFilter(source);
+    }
+
+    /**
+     * Initializes H2 console.
+     */
+    private void initH2Console(ServletContext servletContext) {
+        log.debug("Initialize H2 console");
+        H2ConfigurationHelper.initH2Console(servletContext);
+    }
+
+}
Index: src/main/java/de/iso/apps/config/audit/AuditEventConverter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/audit/AuditEventConverter.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/audit/AuditEventConverter.java	(date 1552872226000)
@@ -0,0 +1,86 @@
+package de.iso.apps.config.audit;
+
+import de.iso.apps.domain.PersistentAuditEvent;
+
+import org.springframework.boot.actuate.audit.AuditEvent;
+import org.springframework.security.web.authentication.WebAuthenticationDetails;
+import org.springframework.stereotype.Component;
+
+import java.util.*;
+
+@Component
+public class AuditEventConverter {
+
+    /**
+     * Convert a list of PersistentAuditEvent to a list of AuditEvent
+     *
+     * @param persistentAuditEvents the list to convert
+     * @return the converted list.
+     */
+    public List<AuditEvent> convertToAuditEvent(Iterable<PersistentAuditEvent> persistentAuditEvents) {
+        if (persistentAuditEvents == null) {
+            return Collections.emptyList();
+        }
+        List<AuditEvent> auditEvents = new ArrayList<>();
+        for (PersistentAuditEvent persistentAuditEvent : persistentAuditEvents) {
+            auditEvents.add(convertToAuditEvent(persistentAuditEvent));
+        }
+        return auditEvents;
+    }
+
+    /**
+     * Convert a PersistentAuditEvent to an AuditEvent
+     *
+     * @param persistentAuditEvent the event to convert
+     * @return the converted list.
+     */
+    public AuditEvent convertToAuditEvent(PersistentAuditEvent persistentAuditEvent) {
+        if (persistentAuditEvent == null) {
+            return null;
+        }
+        return new AuditEvent(persistentAuditEvent.getAuditEventDate(), persistentAuditEvent.getPrincipal(),
+            persistentAuditEvent.getAuditEventType(), convertDataToObjects(persistentAuditEvent.getData()));
+    }
+
+    /**
+     * Internal conversion. This is needed to support the current SpringBoot actuator AuditEventRepository interface
+     *
+     * @param data the data to convert
+     * @return a map of String, Object
+     */
+    public Map<String, Object> convertDataToObjects(Map<String, String> data) {
+        Map<String, Object> results = new HashMap<>();
+
+        if (data != null) {
+            for (Map.Entry<String, String> entry : data.entrySet()) {
+                results.put(entry.getKey(), entry.getValue());
+            }
+        }
+        return results;
+    }
+
+    /**
+     * Internal conversion. This method will allow to save additional data.
+     * By default, it will save the object as string
+     *
+     * @param data the data to convert
+     * @return a map of String, String
+     */
+    public Map<String, String> convertDataToStrings(Map<String, Object> data) {
+        Map<String, String> results = new HashMap<>();
+
+        if (data != null) {
+            for (Map.Entry<String, Object> entry : data.entrySet()) {
+                // Extract the data that will be saved.
+                if (entry.getValue() instanceof WebAuthenticationDetails) {
+                    WebAuthenticationDetails authenticationDetails = (WebAuthenticationDetails) entry.getValue();
+                    results.put("remoteAddress", authenticationDetails.getRemoteAddress());
+                    results.put("sessionId", authenticationDetails.getSessionId());
+                } else {
+                    results.put(entry.getKey(), Objects.toString(entry.getValue()));
+                }
+            }
+        }
+        return results;
+    }
+}
Index: src/main/java/de/iso/apps/config/audit/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/audit/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/audit/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * Audit specific code.
+ */
+package de.iso.apps.config.audit;
Index: src/main/java/de/iso/apps/config/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/config/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/config/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * Spring Framework configuration files.
+ */
+package de.iso.apps.config;
Index: src/main/java/de/iso/apps/domain/AbstractAuditingEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/domain/AbstractAuditingEntity.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/domain/AbstractAuditingEntity.java	(date 1552872226000)
@@ -0,0 +1,79 @@
+package de.iso.apps.domain;
+
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import org.hibernate.envers.Audited;
+import org.springframework.data.annotation.CreatedBy;
+import org.springframework.data.annotation.CreatedDate;
+import org.springframework.data.annotation.LastModifiedBy;
+import org.springframework.data.annotation.LastModifiedDate;
+import org.springframework.data.jpa.domain.support.AuditingEntityListener;
+
+import java.io.Serializable;
+import java.time.Instant;
+import javax.persistence.Column;
+import javax.persistence.EntityListeners;
+import javax.persistence.MappedSuperclass;
+
+/**
+ * Base abstract class for entities which will hold definitions for created, last modified by and created,
+ * last modified by date.
+ */
+@MappedSuperclass
+@Audited
+@EntityListeners(AuditingEntityListener.class)
+public abstract class AbstractAuditingEntity implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @CreatedBy
+    @Column(name = "created_by", nullable = false, length = 50, updatable = false)
+    @JsonIgnore
+    private String createdBy;
+
+    @CreatedDate
+    @Column(name = "created_date", updatable = false)
+    @JsonIgnore
+    private Instant createdDate = Instant.now();
+
+    @LastModifiedBy
+    @Column(name = "last_modified_by", length = 50)
+    @JsonIgnore
+    private String lastModifiedBy;
+
+    @LastModifiedDate
+    @Column(name = "last_modified_date")
+    @JsonIgnore
+    private Instant lastModifiedDate = Instant.now();
+
+    public String getCreatedBy() {
+        return createdBy;
+    }
+
+    public void setCreatedBy(String createdBy) {
+        this.createdBy = createdBy;
+    }
+
+    public Instant getCreatedDate() {
+        return createdDate;
+    }
+
+    public void setCreatedDate(Instant createdDate) {
+        this.createdDate = createdDate;
+    }
+
+    public String getLastModifiedBy() {
+        return lastModifiedBy;
+    }
+
+    public void setLastModifiedBy(String lastModifiedBy) {
+        this.lastModifiedBy = lastModifiedBy;
+    }
+
+    public Instant getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    public void setLastModifiedDate(Instant lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+}
Index: src/main/java/de/iso/apps/domain/PersistentAuditEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/domain/PersistentAuditEvent.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/domain/PersistentAuditEvent.java	(date 1552872226000)
@@ -0,0 +1,110 @@
+package de.iso.apps.domain;
+
+import javax.persistence.*;
+import javax.validation.constraints.NotNull;
+import java.io.Serializable;
+import java.time.Instant;
+import java.util.HashMap;
+import java.util.Objects;
+import java.util.Map;
+
+/**
+ * Persist AuditEvent managed by the Spring Boot actuator.
+ *
+ * @see org.springframework.boot.actuate.audit.AuditEvent
+ */
+@Entity
+@Table(name = "jhi_persistent_audit_event")
+public class PersistentAuditEvent implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequenceGenerator")
+    @SequenceGenerator(name = "sequenceGenerator")
+    @Column(name = "event_id")
+    private Long id;
+
+    @NotNull
+    @Column(nullable = false)
+    private String principal;
+
+    @Column(name = "event_date")
+    private Instant auditEventDate;
+
+    @Column(name = "event_type")
+    private String auditEventType;
+
+    @ElementCollection
+    @MapKeyColumn(name = "name")
+    @Column(name = "value")
+    @CollectionTable(name = "jhi_persistent_audit_evt_data", joinColumns=@JoinColumn(name="event_id"))
+    private Map<String, String> data = new HashMap<>();
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public String getPrincipal() {
+        return principal;
+    }
+
+    public void setPrincipal(String principal) {
+        this.principal = principal;
+    }
+
+    public Instant getAuditEventDate() {
+        return auditEventDate;
+    }
+
+    public void setAuditEventDate(Instant auditEventDate) {
+        this.auditEventDate = auditEventDate;
+    }
+
+    public String getAuditEventType() {
+        return auditEventType;
+    }
+
+    public void setAuditEventType(String auditEventType) {
+        this.auditEventType = auditEventType;
+    }
+
+    public Map<String, String> getData() {
+        return data;
+    }
+
+    public void setData(Map<String, String> data) {
+        this.data = data;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) {
+            return true;
+        }
+        if (o == null || getClass() != o.getClass()) {
+            return false;
+        }
+
+        PersistentAuditEvent persistentAuditEvent = (PersistentAuditEvent) o;
+        return !(persistentAuditEvent.getId() == null || getId() == null) && Objects.equals(getId(), persistentAuditEvent.getId());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hashCode(getId());
+    }
+
+    @Override
+    public String toString() {
+        return "PersistentAuditEvent{" +
+            "principal='" + principal + '\'' +
+            ", auditEventDate=" + auditEventDate +
+            ", auditEventType='" + auditEventType + '\'' +
+            '}';
+    }
+}
Index: src/main/java/de/iso/apps/domain/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/domain/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/domain/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * JPA domain objects.
+ */
+package de.iso.apps.domain;
Index: src/main/java/de/iso/apps/repository/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/repository/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/repository/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * Spring Data JPA repositories.
+ */
+package de.iso.apps.repository;
Index: src/main/java/de/iso/apps/repository/search/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/repository/search/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/repository/search/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * Spring Data Elasticsearch repositories.
+ */
+package de.iso.apps.repository.search;
Index: src/main/java/de/iso/apps/security/AuthoritiesConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/security/AuthoritiesConstants.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/security/AuthoritiesConstants.java	(date 1552872226000)
@@ -0,0 +1,16 @@
+package de.iso.apps.security;
+
+/**
+ * Constants for Spring Security authorities.
+ */
+public final class AuthoritiesConstants {
+
+    public static final String ADMIN = "ROLE_ADMIN";
+
+    public static final String USER = "ROLE_USER";
+
+    public static final String ANONYMOUS = "ROLE_ANONYMOUS";
+
+    private AuthoritiesConstants() {
+    }
+}
Index: src/main/java/de/iso/apps/security/SecurityUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/security/SecurityUtils.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/security/SecurityUtils.java	(date 1552872226000)
@@ -0,0 +1,76 @@
+package de.iso.apps.security;
+
+import org.springframework.security.core.context.SecurityContext;
+import org.springframework.security.core.context.SecurityContextHolder;
+import org.springframework.security.core.userdetails.UserDetails;
+
+import java.util.Optional;
+
+/**
+ * Utility class for Spring Security.
+ */
+public final class SecurityUtils {
+
+    private SecurityUtils() {
+    }
+
+    /**
+     * Get the login of the current user.
+     *
+     * @return the login of the current user
+     */
+    public static Optional<String> getCurrentUserLogin() {
+        SecurityContext securityContext = SecurityContextHolder.getContext();
+        return Optional.ofNullable(securityContext.getAuthentication())
+            .map(authentication -> {
+                if (authentication.getPrincipal() instanceof UserDetails) {
+                    UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();
+                    return springSecurityUser.getUsername();
+                } else if (authentication.getPrincipal() instanceof String) {
+                    return (String) authentication.getPrincipal();
+                }
+                return null;
+            });
+    }
+
+    /**
+     * Get the JWT of the current user.
+     *
+     * @return the JWT of the current user
+     */
+    public static Optional<String> getCurrentUserJWT() {
+        SecurityContext securityContext = SecurityContextHolder.getContext();
+        return Optional.ofNullable(securityContext.getAuthentication())
+            .filter(authentication -> authentication.getCredentials() instanceof String)
+            .map(authentication -> (String) authentication.getCredentials());
+    }
+
+    /**
+     * Check if a user is authenticated.
+     *
+     * @return true if the user is authenticated, false otherwise
+     */
+    public static boolean isAuthenticated() {
+        SecurityContext securityContext = SecurityContextHolder.getContext();
+        return Optional.ofNullable(securityContext.getAuthentication())
+            .map(authentication -> authentication.getAuthorities().stream()
+                .noneMatch(grantedAuthority -> grantedAuthority.getAuthority().equals(AuthoritiesConstants.ANONYMOUS)))
+            .orElse(false);
+    }
+
+    /**
+     * If the current user has a specific authority (security role).
+     * <p>
+     * The name of this method comes from the isUserInRole() method in the Servlet API
+     *
+     * @param authority the authority to check
+     * @return true if the current user has the authority, false otherwise
+     */
+    public static boolean isCurrentUserInRole(String authority) {
+        SecurityContext securityContext = SecurityContextHolder.getContext();
+        return Optional.ofNullable(securityContext.getAuthentication())
+            .map(authentication -> authentication.getAuthorities().stream()
+                .anyMatch(grantedAuthority -> grantedAuthority.getAuthority().equals(authority)))
+            .orElse(false);
+    }
+}
Index: src/main/java/de/iso/apps/security/SpringSecurityAuditorAware.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/security/SpringSecurityAuditorAware.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/security/SpringSecurityAuditorAware.java	(date 1552872226000)
@@ -0,0 +1,20 @@
+package de.iso.apps.security;
+
+import de.iso.apps.config.Constants;
+
+import java.util.Optional;
+
+import org.springframework.data.domain.AuditorAware;
+import org.springframework.stereotype.Component;
+
+/**
+ * Implementation of AuditorAware based on Spring Security.
+ */
+@Component
+public class SpringSecurityAuditorAware implements AuditorAware<String> {
+
+    @Override
+    public Optional<String> getCurrentAuditor() {
+        return Optional.of(SecurityUtils.getCurrentUserLogin().orElse(Constants.SYSTEM_ACCOUNT));
+    }
+}
Index: src/main/java/de/iso/apps/security/jwt/JWTConfigurer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/security/jwt/JWTConfigurer.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/security/jwt/JWTConfigurer.java	(date 1552872226000)
@@ -0,0 +1,21 @@
+package de.iso.apps.security.jwt;
+
+import org.springframework.security.config.annotation.SecurityConfigurerAdapter;
+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
+import org.springframework.security.web.DefaultSecurityFilterChain;
+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
+
+public class JWTConfigurer extends SecurityConfigurerAdapter<DefaultSecurityFilterChain, HttpSecurity> {
+
+    private TokenProvider tokenProvider;
+
+    public JWTConfigurer(TokenProvider tokenProvider) {
+        this.tokenProvider = tokenProvider;
+    }
+
+    @Override
+    public void configure(HttpSecurity http) throws Exception {
+        JWTFilter customFilter = new JWTFilter(tokenProvider);
+        http.addFilterBefore(customFilter, UsernamePasswordAuthenticationFilter.class);
+    }
+}
Index: src/main/java/de/iso/apps/security/jwt/JWTFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/security/jwt/JWTFilter.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/security/jwt/JWTFilter.java	(date 1552872226000)
@@ -0,0 +1,48 @@
+package de.iso.apps.security.jwt;
+
+import org.springframework.security.core.Authentication;
+import org.springframework.security.core.context.SecurityContextHolder;
+import org.springframework.util.StringUtils;
+import org.springframework.web.filter.GenericFilterBean;
+
+import javax.servlet.FilterChain;
+import javax.servlet.ServletException;
+import javax.servlet.ServletRequest;
+import javax.servlet.ServletResponse;
+import javax.servlet.http.HttpServletRequest;
+import java.io.IOException;
+
+/**
+ * Filters incoming requests and installs a Spring Security principal if a header corresponding to a valid user is
+ * found.
+ */
+public class JWTFilter extends GenericFilterBean {
+
+    public static final String AUTHORIZATION_HEADER = "Authorization";
+
+    private TokenProvider tokenProvider;
+
+    public JWTFilter(TokenProvider tokenProvider) {
+        this.tokenProvider = tokenProvider;
+    }
+
+    @Override
+    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)
+        throws IOException, ServletException {
+        HttpServletRequest httpServletRequest = (HttpServletRequest) servletRequest;
+        String jwt = resolveToken(httpServletRequest);
+        if (StringUtils.hasText(jwt) && this.tokenProvider.validateToken(jwt)) {
+            Authentication authentication = this.tokenProvider.getAuthentication(jwt);
+            SecurityContextHolder.getContext().setAuthentication(authentication);
+        }
+        filterChain.doFilter(servletRequest, servletResponse);
+    }
+
+    private String resolveToken(HttpServletRequest request){
+        String bearerToken = request.getHeader(AUTHORIZATION_HEADER);
+        if (StringUtils.hasText(bearerToken) && bearerToken.startsWith("Bearer ")) {
+            return bearerToken.substring(7);
+        }
+        return null;
+    }
+}
Index: src/main/java/de/iso/apps/security/jwt/TokenProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/security/jwt/TokenProvider.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/security/jwt/TokenProvider.java	(date 1552872226000)
@@ -0,0 +1,119 @@
+package de.iso.apps.security.jwt;
+
+import java.nio.charset.StandardCharsets;
+import java.security.Key;
+import java.util.*;
+import java.util.stream.Collectors;
+import javax.annotation.PostConstruct;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.security.core.userdetails.User;
+import org.springframework.stereotype.Component;
+import org.springframework.util.StringUtils;
+
+import io.github.jhipster.config.JHipsterProperties;
+import io.jsonwebtoken.*;
+import io.jsonwebtoken.io.Decoders;
+import io.jsonwebtoken.security.Keys;
+
+@Component
+public class TokenProvider {
+
+    private final Logger log = LoggerFactory.getLogger(TokenProvider.class);
+
+    private static final String AUTHORITIES_KEY = "auth";
+
+    private Key key;
+
+    private long tokenValidityInMilliseconds;
+
+    private long tokenValidityInMillisecondsForRememberMe;
+
+    private final JHipsterProperties jHipsterProperties;
+
+    public TokenProvider(JHipsterProperties jHipsterProperties) {
+        this.jHipsterProperties = jHipsterProperties;
+    }
+
+    @PostConstruct
+    public void init() {
+        byte[] keyBytes;
+        String secret = jHipsterProperties.getSecurity().getAuthentication().getJwt().getSecret();
+        if (!StringUtils.isEmpty(secret)) {
+            log.warn("Warning: the JWT key used is not Base64-encoded. " +
+                "We recommend using the `jhipster.security.authentication.jwt.base64-secret` key for optimum security.");
+            keyBytes = secret.getBytes(StandardCharsets.UTF_8);
+        } else {
+            log.debug("Using a Base64-encoded JWT secret key");
+            keyBytes = Decoders.BASE64.decode(jHipsterProperties.getSecurity().getAuthentication().getJwt().getBase64Secret());
+        }
+        this.key = Keys.hmacShaKeyFor(keyBytes);
+        this.tokenValidityInMilliseconds =
+            1000 * jHipsterProperties.getSecurity().getAuthentication().getJwt().getTokenValidityInSeconds();
+        this.tokenValidityInMillisecondsForRememberMe =
+            1000 * jHipsterProperties.getSecurity().getAuthentication().getJwt()
+                .getTokenValidityInSecondsForRememberMe();
+    }
+
+    public String createToken(Authentication authentication, boolean rememberMe) {
+        String authorities = authentication.getAuthorities().stream()
+            .map(GrantedAuthority::getAuthority)
+            .collect(Collectors.joining(","));
+
+        long now = (new Date()).getTime();
+        Date validity;
+        if (rememberMe) {
+            validity = new Date(now + this.tokenValidityInMillisecondsForRememberMe);
+        } else {
+            validity = new Date(now + this.tokenValidityInMilliseconds);
+        }
+
+        return Jwts.builder()
+            .setSubject(authentication.getName())
+            .claim(AUTHORITIES_KEY, authorities)
+            .signWith(key, SignatureAlgorithm.HS512)
+            .setExpiration(validity)
+            .compact();
+    }
+
+    public Authentication getAuthentication(String token) {
+        Claims claims = Jwts.parser()
+            .setSigningKey(key)
+            .parseClaimsJws(token)
+            .getBody();
+
+        Collection<? extends GrantedAuthority> authorities =
+            Arrays.stream(claims.get(AUTHORITIES_KEY).toString().split(","))
+                .map(SimpleGrantedAuthority::new)
+                .collect(Collectors.toList());
+
+        User principal = new User(claims.getSubject(), "", authorities);
+
+        return new UsernamePasswordAuthenticationToken(principal, token, authorities);
+    }
+
+    public boolean validateToken(String authToken) {
+        try {
+            Jwts.parser().setSigningKey(key).parseClaimsJws(authToken);
+            return true;
+        } catch (io.jsonwebtoken.security.SecurityException | MalformedJwtException e) {
+            log.info("Invalid JWT signature.");
+            log.trace("Invalid JWT signature trace: {}", e);
+        } catch (ExpiredJwtException e) {
+            log.info("Expired JWT token.");
+            log.trace("Expired JWT token trace: {}", e);
+        } catch (UnsupportedJwtException e) {
+            log.info("Unsupported JWT token.");
+            log.trace("Unsupported JWT token trace: {}", e);
+        } catch (IllegalArgumentException e) {
+            log.info("JWT token compact of handler are invalid.");
+            log.trace("JWT token compact of handler are invalid trace: {}", e);
+        }
+        return false;
+    }
+}
Index: src/main/java/de/iso/apps/security/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/security/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/security/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * Spring Security configuration.
+ */
+package de.iso.apps.security;
Index: src/main/java/de/iso/apps/service/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/service/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/service/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * Service layer beans.
+ */
+package de.iso.apps.service;
Index: src/main/java/de/iso/apps/web/rest/LogsResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/LogsResource.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/LogsResource.java	(date 1552872226000)
@@ -0,0 +1,36 @@
+package de.iso.apps.web.rest;
+
+import de.iso.apps.web.rest.vm.LoggerVM;
+
+import ch.qos.logback.classic.Level;
+import ch.qos.logback.classic.LoggerContext;
+import org.slf4j.LoggerFactory;
+import org.springframework.http.HttpStatus;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.List;
+import java.util.stream.Collectors;
+
+/**
+ * Controller for view and managing Log Level at runtime.
+ */
+@RestController
+@RequestMapping("/management")
+public class LogsResource {
+
+    @GetMapping("/logs")
+    public List<LoggerVM> getList() {
+        LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
+        return context.getLoggerList()
+            .stream()
+            .map(LoggerVM::new)
+            .collect(Collectors.toList());
+    }
+
+    @PutMapping("/logs")
+    @ResponseStatus(HttpStatus.NO_CONTENT)
+    public void changeLevel(@RequestBody LoggerVM jsonLogger) {
+        LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
+        context.getLogger(jsonLogger.getName()).setLevel(Level.valueOf(jsonLogger.getLevel()));
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/BadRequestAlertException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/BadRequestAlertException.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/BadRequestAlertException.java	(date 1552872226000)
@@ -0,0 +1,42 @@
+package de.iso.apps.web.rest.errors;
+
+import org.zalando.problem.AbstractThrowableProblem;
+import org.zalando.problem.Status;
+
+import java.net.URI;
+import java.util.HashMap;
+import java.util.Map;
+
+public class BadRequestAlertException extends AbstractThrowableProblem {
+
+    private static final long serialVersionUID = 1L;
+
+    private final String entityName;
+
+    private final String errorKey;
+
+    public BadRequestAlertException(String defaultMessage, String entityName, String errorKey) {
+        this(ErrorConstants.DEFAULT_TYPE, defaultMessage, entityName, errorKey);
+    }
+
+    public BadRequestAlertException(URI type, String defaultMessage, String entityName, String errorKey) {
+        super(type, defaultMessage, Status.BAD_REQUEST, null, null, null, getAlertParameters(entityName, errorKey));
+        this.entityName = entityName;
+        this.errorKey = errorKey;
+    }
+
+    public String getEntityName() {
+        return entityName;
+    }
+
+    public String getErrorKey() {
+        return errorKey;
+    }
+
+    private static Map<String, Object> getAlertParameters(String entityName, String errorKey) {
+        Map<String, Object> parameters = new HashMap<>();
+        parameters.put("message", "error." + errorKey);
+        parameters.put("params", entityName);
+        return parameters;
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/CustomParameterizedException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/CustomParameterizedException.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/CustomParameterizedException.java	(date 1552872226000)
@@ -0,0 +1,54 @@
+package de.iso.apps.web.rest.errors;
+
+import org.zalando.problem.AbstractThrowableProblem;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import static org.zalando.problem.Status.BAD_REQUEST;
+
+/**
+ * Custom, parameterized exception, which can be translated on the client side.
+ * For example:
+ *
+ * <pre>
+ * throw new CustomParameterizedException(&quot;myCustomError&quot;, &quot;hello&quot;, &quot;world&quot;);
+ * </pre>
+ *
+ * Can be translated with:
+ *
+ * <pre>
+ * "error.myCustomError" :  "The server says {{param0}} to {{param1}}"
+ * </pre>
+ */
+public class CustomParameterizedException extends AbstractThrowableProblem {
+
+    private static final long serialVersionUID = 1L;
+
+    private static final String PARAM = "param";
+
+    public CustomParameterizedException(String message, String... params) {
+        this(message, toParamMap(params));
+    }
+
+    public CustomParameterizedException(String message, Map<String, Object> paramMap) {
+        super(ErrorConstants.PARAMETERIZED_TYPE, "Parameterized Exception", BAD_REQUEST, null, null, null, toProblemParameters(message, paramMap));
+    }
+
+    public static Map<String, Object> toParamMap(String... params) {
+        Map<String, Object> paramMap = new HashMap<>();
+        if (params != null && params.length > 0) {
+            for (int i = 0; i < params.length; i++) {
+                paramMap.put(PARAM + i, params[i]);
+            }
+        }
+        return paramMap;
+    }
+
+    public static Map<String, Object> toProblemParameters(String message, Map<String, Object> paramMap) {
+        Map<String, Object> parameters = new HashMap<>();
+        parameters.put("message", message);
+        parameters.put("params", paramMap);
+        return parameters;
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/EmailAlreadyUsedException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/EmailAlreadyUsedException.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/EmailAlreadyUsedException.java	(date 1552872226000)
@@ -0,0 +1,10 @@
+package de.iso.apps.web.rest.errors;
+
+public class EmailAlreadyUsedException extends BadRequestAlertException {
+
+    private static final long serialVersionUID = 1L;
+
+    public EmailAlreadyUsedException() {
+        super(ErrorConstants.EMAIL_ALREADY_USED_TYPE, "Email is already in use!", "userManagement", "emailexists");
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/EmailNotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/EmailNotFoundException.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/EmailNotFoundException.java	(date 1552872226000)
@@ -0,0 +1,13 @@
+package de.iso.apps.web.rest.errors;
+
+import org.zalando.problem.AbstractThrowableProblem;
+import org.zalando.problem.Status;
+
+public class EmailNotFoundException extends AbstractThrowableProblem {
+
+    private static final long serialVersionUID = 1L;
+
+    public EmailNotFoundException() {
+        super(ErrorConstants.EMAIL_NOT_FOUND_TYPE, "Email address not registered", Status.BAD_REQUEST);
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/ErrorConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/ErrorConstants.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/ErrorConstants.java	(date 1552872226000)
@@ -0,0 +1,21 @@
+package de.iso.apps.web.rest.errors;
+
+import java.net.URI;
+
+public final class ErrorConstants {
+
+    public static final String ERR_CONCURRENCY_FAILURE = "error.concurrencyFailure";
+    public static final String ERR_VALIDATION = "error.validation";
+    public static final String PROBLEM_BASE_URL = "https://www.jhipster.tech/problem";
+    public static final URI DEFAULT_TYPE = URI.create(PROBLEM_BASE_URL + "/problem-with-message");
+    public static final URI CONSTRAINT_VIOLATION_TYPE = URI.create(PROBLEM_BASE_URL + "/constraint-violation");
+    public static final URI PARAMETERIZED_TYPE = URI.create(PROBLEM_BASE_URL + "/parameterized");
+    public static final URI ENTITY_NOT_FOUND_TYPE = URI.create(PROBLEM_BASE_URL + "/entity-not-found");
+    public static final URI INVALID_PASSWORD_TYPE = URI.create(PROBLEM_BASE_URL + "/invalid-password");
+    public static final URI EMAIL_ALREADY_USED_TYPE = URI.create(PROBLEM_BASE_URL + "/email-already-used");
+    public static final URI LOGIN_ALREADY_USED_TYPE = URI.create(PROBLEM_BASE_URL + "/login-already-used");
+    public static final URI EMAIL_NOT_FOUND_TYPE = URI.create(PROBLEM_BASE_URL + "/email-not-found");
+
+    private ErrorConstants() {
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/ExceptionTranslator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/ExceptionTranslator.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/ExceptionTranslator.java	(date 1552872226000)
@@ -0,0 +1,112 @@
+package de.iso.apps.web.rest.errors;
+
+import de.iso.apps.web.rest.util.HeaderUtil;
+
+import org.springframework.dao.ConcurrencyFailureException;
+import org.springframework.http.ResponseEntity;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.MethodArgumentNotValidException;
+import org.springframework.web.bind.annotation.ControllerAdvice;
+import org.springframework.web.bind.annotation.ExceptionHandler;
+import org.springframework.web.context.request.NativeWebRequest;
+import org.zalando.problem.DefaultProblem;
+import org.zalando.problem.Problem;
+import org.zalando.problem.ProblemBuilder;
+import org.zalando.problem.Status;
+import org.zalando.problem.spring.web.advice.ProblemHandling;
+import org.zalando.problem.violations.ConstraintViolationProblem;
+
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
+import javax.servlet.http.HttpServletRequest;
+import java.util.List;
+import java.util.NoSuchElementException;
+import java.util.stream.Collectors;
+
+/**
+ * Controller advice to translate the server side exceptions to client-friendly json structures.
+ * The error response follows RFC7807 - Problem Details for HTTP APIs (https://tools.ietf.org/html/rfc7807)
+ */
+@ControllerAdvice
+public class ExceptionTranslator implements ProblemHandling {
+
+    private static final String FIELD_ERRORS_KEY = "fieldErrors";
+    private static final String MESSAGE_KEY = "message";
+    private static final String PATH_KEY = "path";
+    private static final String VIOLATIONS_KEY = "violations";
+
+    /**
+     * Post-process the Problem payload to add the message key for the front-end if needed
+     */
+    @Override
+    public ResponseEntity<Problem> process(@Nullable ResponseEntity<Problem> entity, NativeWebRequest request) {
+        if (entity == null) {
+            return entity;
+        }
+        Problem problem = entity.getBody();
+        if (!(problem instanceof ConstraintViolationProblem || problem instanceof DefaultProblem)) {
+            return entity;
+        }
+        ProblemBuilder builder = Problem.builder()
+            .withType(Problem.DEFAULT_TYPE.equals(problem.getType()) ? ErrorConstants.DEFAULT_TYPE : problem.getType())
+            .withStatus(problem.getStatus())
+            .withTitle(problem.getTitle())
+            .with(PATH_KEY, request.getNativeRequest(HttpServletRequest.class).getRequestURI());
+
+        if (problem instanceof ConstraintViolationProblem) {
+            builder
+                .with(VIOLATIONS_KEY, ((ConstraintViolationProblem) problem).getViolations())
+                .with(MESSAGE_KEY, ErrorConstants.ERR_VALIDATION);
+        } else {
+            builder
+                .withCause(((DefaultProblem) problem).getCause())
+                .withDetail(problem.getDetail())
+                .withInstance(problem.getInstance());
+            problem.getParameters().forEach(builder::with);
+            if (!problem.getParameters().containsKey(MESSAGE_KEY) && problem.getStatus() != null) {
+                builder.with(MESSAGE_KEY, "error.http." + problem.getStatus().getStatusCode());
+            }
+        }
+        return new ResponseEntity<>(builder.build(), entity.getHeaders(), entity.getStatusCode());
+    }
+
+    @Override
+    public ResponseEntity<Problem> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, @Nonnull NativeWebRequest request) {
+        BindingResult result = ex.getBindingResult();
+        List<FieldErrorVM> fieldErrors = result.getFieldErrors().stream()
+            .map(f -> new FieldErrorVM(f.getObjectName(), f.getField(), f.getCode()))
+            .collect(Collectors.toList());
+
+        Problem problem = Problem.builder()
+            .withType(ErrorConstants.CONSTRAINT_VIOLATION_TYPE)
+            .withTitle("Method argument not valid")
+            .withStatus(defaultConstraintViolationStatus())
+            .with(MESSAGE_KEY, ErrorConstants.ERR_VALIDATION)
+            .with(FIELD_ERRORS_KEY, fieldErrors)
+            .build();
+        return create(ex, problem, request);
+    }
+
+    @ExceptionHandler
+    public ResponseEntity<Problem> handleNoSuchElementException(NoSuchElementException ex, NativeWebRequest request) {
+        Problem problem = Problem.builder()
+            .withStatus(Status.NOT_FOUND)
+            .with(MESSAGE_KEY, ErrorConstants.ENTITY_NOT_FOUND_TYPE)
+            .build();
+        return create(ex, problem, request);
+    }
+
+    @ExceptionHandler
+    public ResponseEntity<Problem> handleBadRequestAlertException(BadRequestAlertException ex, NativeWebRequest request) {
+        return create(ex, request, HeaderUtil.createFailureAlert(ex.getEntityName(), ex.getErrorKey(), ex.getMessage()));
+    }
+
+    @ExceptionHandler
+    public ResponseEntity<Problem> handleConcurrencyFailure(ConcurrencyFailureException ex, NativeWebRequest request) {
+        Problem problem = Problem.builder()
+            .withStatus(Status.CONFLICT)
+            .with(MESSAGE_KEY, ErrorConstants.ERR_CONCURRENCY_FAILURE)
+            .build();
+        return create(ex, problem, request);
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/FieldErrorVM.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/FieldErrorVM.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/FieldErrorVM.java	(date 1552872226000)
@@ -0,0 +1,33 @@
+package de.iso.apps.web.rest.errors;
+
+import java.io.Serializable;
+
+public class FieldErrorVM implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    private final String objectName;
+
+    private final String field;
+
+    private final String message;
+
+    public FieldErrorVM(String dto, String field, String message) {
+        this.objectName = dto;
+        this.field = field;
+        this.message = message;
+    }
+
+    public String getObjectName() {
+        return objectName;
+    }
+
+    public String getField() {
+        return field;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+}
Index: src/main/java/de/iso/apps/web/rest/errors/InternalServerErrorException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/InternalServerErrorException.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/InternalServerErrorException.java	(date 1552872226000)
@@ -0,0 +1,16 @@
+package de.iso.apps.web.rest.errors;
+
+import org.zalando.problem.AbstractThrowableProblem;
+import org.zalando.problem.Status;
+
+/**
+ * Simple exception with a message, that returns an Internal Server Error code.
+ */
+public class InternalServerErrorException extends AbstractThrowableProblem {
+
+    private static final long serialVersionUID = 1L;
+
+    public InternalServerErrorException(String message) {
+        super(ErrorConstants.DEFAULT_TYPE, message, Status.INTERNAL_SERVER_ERROR);
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/InvalidPasswordException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/InvalidPasswordException.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/InvalidPasswordException.java	(date 1552872226000)
@@ -0,0 +1,13 @@
+package de.iso.apps.web.rest.errors;
+
+import org.zalando.problem.AbstractThrowableProblem;
+import org.zalando.problem.Status;
+
+public class InvalidPasswordException extends AbstractThrowableProblem {
+
+    private static final long serialVersionUID = 1L;
+
+    public InvalidPasswordException() {
+        super(ErrorConstants.INVALID_PASSWORD_TYPE, "Incorrect password", Status.BAD_REQUEST);
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/LoginAlreadyUsedException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/LoginAlreadyUsedException.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/LoginAlreadyUsedException.java	(date 1552872226000)
@@ -0,0 +1,10 @@
+package de.iso.apps.web.rest.errors;
+
+public class LoginAlreadyUsedException extends BadRequestAlertException {
+
+    private static final long serialVersionUID = 1L;
+
+    public LoginAlreadyUsedException() {
+        super(ErrorConstants.LOGIN_ALREADY_USED_TYPE, "Login name already used!", "userManagement", "userexists");
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/errors/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/errors/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/errors/package-info.java	(date 1552872226000)
@@ -0,0 +1,6 @@
+/**
+ * Specific errors used with Zalando's "problem-spring-web" library.
+ *
+ * More information on https://github.com/zalando/problem-spring-web
+ */
+package de.iso.apps.web.rest.errors;
Index: src/main/java/de/iso/apps/web/rest/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * Spring MVC REST controllers.
+ */
+package de.iso.apps.web.rest;
Index: src/main/java/de/iso/apps/web/rest/util/HeaderUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/util/HeaderUtil.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/util/HeaderUtil.java	(date 1552872226000)
@@ -0,0 +1,45 @@
+package de.iso.apps.web.rest.util;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.http.HttpHeaders;
+
+/**
+ * Utility class for HTTP headers creation.
+ */
+public final class HeaderUtil {
+
+    private static final Logger log = LoggerFactory.getLogger(HeaderUtil.class);
+
+    private static final String APPLICATION_NAME = "efwserviceApp";
+
+    private HeaderUtil() {
+    }
+
+    public static HttpHeaders createAlert(String message, String param) {
+        HttpHeaders headers = new HttpHeaders();
+        headers.add("X-" + APPLICATION_NAME + "-alert", message);
+        headers.add("X-" + APPLICATION_NAME + "-params", param);
+        return headers;
+    }
+
+    public static HttpHeaders createEntityCreationAlert(String entityName, String param) {
+        return createAlert(APPLICATION_NAME + "." + entityName + ".created", param);
+    }
+
+    public static HttpHeaders createEntityUpdateAlert(String entityName, String param) {
+        return createAlert(APPLICATION_NAME + "." + entityName + ".updated", param);
+    }
+
+    public static HttpHeaders createEntityDeletionAlert(String entityName, String param) {
+        return createAlert(APPLICATION_NAME + "." + entityName + ".deleted", param);
+    }
+
+    public static HttpHeaders createFailureAlert(String entityName, String errorKey, String defaultMessage) {
+        log.error("Entity processing failed, {}", defaultMessage);
+        HttpHeaders headers = new HttpHeaders();
+        headers.add("X-" + APPLICATION_NAME + "-error", "error." + errorKey);
+        headers.add("X-" + APPLICATION_NAME + "-params", entityName);
+        return headers;
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/util/PaginationUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/util/PaginationUtil.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/util/PaginationUtil.java	(date 1552872226000)
@@ -0,0 +1,76 @@
+package de.iso.apps.web.rest.util;
+
+import org.springframework.data.domain.Page;
+import org.springframework.http.HttpHeaders;
+import org.springframework.web.util.UriComponentsBuilder;
+
+import java.io.UnsupportedEncodingException;
+import java.net.URLEncoder;
+
+/**
+ * Utility class for handling pagination.
+ *
+ * <p>
+ * Pagination uses the same principles as the <a href="https://developer.github.com/v3/#pagination">GitHub API</a>,
+ * and follow <a href="http://tools.ietf.org/html/rfc5988">RFC 5988 (Link header)</a>.
+ */
+public final class PaginationUtil {
+
+    private PaginationUtil() {
+    }
+
+    public static <T> HttpHeaders generatePaginationHttpHeaders(Page<T> page, String baseUrl) {
+
+        HttpHeaders headers = new HttpHeaders();
+        headers.add("X-Total-Count", Long.toString(page.getTotalElements()));
+        String link = "";
+        if ((page.getNumber() + 1) < page.getTotalPages()) {
+            link = "<" + generateUri(baseUrl, page.getNumber() + 1, page.getSize()) + ">; rel=\"next\",";
+        }
+        // prev link
+        if ((page.getNumber()) > 0) {
+            link += "<" + generateUri(baseUrl, page.getNumber() - 1, page.getSize()) + ">; rel=\"prev\",";
+        }
+        // last and first link
+        int lastPage = 0;
+        if (page.getTotalPages() > 0) {
+            lastPage = page.getTotalPages() - 1;
+        }
+        link += "<" + generateUri(baseUrl, lastPage, page.getSize()) + ">; rel=\"last\",";
+        link += "<" + generateUri(baseUrl, 0, page.getSize()) + ">; rel=\"first\"";
+        headers.add(HttpHeaders.LINK, link);
+        return headers;
+    }
+
+    private static String generateUri(String baseUrl, int page, int size) {
+        return UriComponentsBuilder.fromUriString(baseUrl).queryParam("page", page).queryParam("size", size).toUriString();
+    }
+
+    public static <T> HttpHeaders generateSearchPaginationHttpHeaders(String query, Page<T> page, String baseUrl) {
+        String escapedQuery;
+        try {
+            escapedQuery = URLEncoder.encode(query, "UTF-8");
+        } catch (UnsupportedEncodingException e) {
+            throw new RuntimeException(e);
+        }
+        HttpHeaders headers = new HttpHeaders();
+        headers.add("X-Total-Count", Long.toString(page.getTotalElements()));
+        String link = "";
+        if ((page.getNumber() + 1) < page.getTotalPages()) {
+            link = "<" + generateUri(baseUrl, page.getNumber() + 1, page.getSize()) + "&query=" + escapedQuery + ">; rel=\"next\",";
+        }
+        // prev link
+        if ((page.getNumber()) > 0) {
+            link += "<" + generateUri(baseUrl, page.getNumber() - 1, page.getSize()) + "&query=" + escapedQuery + ">; rel=\"prev\",";
+        }
+        // last and first link
+        int lastPage = 0;
+        if (page.getTotalPages() > 0) {
+            lastPage = page.getTotalPages() - 1;
+        }
+        link += "<" + generateUri(baseUrl, lastPage, page.getSize()) + "&query=" + escapedQuery + ">; rel=\"last\",";
+        link += "<" + generateUri(baseUrl, 0, page.getSize()) + "&query=" + escapedQuery + ">; rel=\"first\"";
+        headers.add(HttpHeaders.LINK, link);
+        return headers;
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/vm/LoggerVM.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/vm/LoggerVM.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/vm/LoggerVM.java	(date 1552872226000)
@@ -0,0 +1,46 @@
+package de.iso.apps.web.rest.vm;
+
+import ch.qos.logback.classic.Logger;
+
+/**
+ * View Model object for storing a Logback logger.
+ */
+public class LoggerVM {
+
+    private String name;
+
+    private String level;
+
+    public LoggerVM(Logger logger) {
+        this.name = logger.getName();
+        this.level = logger.getEffectiveLevel().toString();
+    }
+
+    public LoggerVM() {
+        // Empty public constructor used by Jackson.
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getLevel() {
+        return level;
+    }
+
+    public void setLevel(String level) {
+        this.level = level;
+    }
+
+    @Override
+    public String toString() {
+        return "LoggerVM{" +
+            "name='" + name + '\'' +
+            ", level='" + level + '\'' +
+            '}';
+    }
+}
Index: src/main/java/de/iso/apps/web/rest/vm/package-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/de/iso/apps/web/rest/vm/package-info.java	(date 1552872226000)
+++ src/main/java/de/iso/apps/web/rest/vm/package-info.java	(date 1552872226000)
@@ -0,0 +1,4 @@
+/**
+ * View Models used by Spring MVC REST controllers.
+ */
+package de.iso.apps.web.rest.vm;
Index: src/main/jib/entrypoint.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/jib/entrypoint.sh	(date 1552872226000)
+++ src/main/jib/entrypoint.sh	(date 1552872226000)
@@ -0,0 +1,4 @@
+#!/bin/sh
+
+echo "The application will start in ${JHIPSTER_SLEEP}s..." && sleep ${JHIPSTER_SLEEP}
+exec java ${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom -cp /app/resources/:/app/classes/:/app/libs/* "de.iso.apps.EfwserviceApp"  "$@"
Index: src/main/resources/.h2.server.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/.h2.server.properties	(date 1552872226000)
+++ src/main/resources/.h2.server.properties	(date 1552872226000)
@@ -0,0 +1,5 @@
+#H2 Server Properties
+0=JHipster H2 (Disk)|org.h2.Driver|jdbc\:h2\:file\:./target/h2db/db/efwservice|efwservice
+webAllowOthers=true
+webPort=8082
+webSSL=false
Index: src/main/resources/banner.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/banner.txt	(date 1552872226000)
+++ src/main/resources/banner.txt	(date 1552872226000)
@@ -0,0 +1,10 @@
+
+  ${AnsiColor.GREEN}      ██╗${AnsiColor.RED} ██╗   ██╗ ████████╗ ███████╗   ██████╗ ████████╗ ████████╗ ███████╗
+  ${AnsiColor.GREEN}      ██║${AnsiColor.RED} ██║   ██║ ╚══██╔══╝ ██╔═══██╗ ██╔════╝ ╚══██╔══╝ ██╔═════╝ ██╔═══██╗
+  ${AnsiColor.GREEN}      ██║${AnsiColor.RED} ████████║    ██║    ███████╔╝ ╚█████╗     ██║    ██████╗   ███████╔╝
+  ${AnsiColor.GREEN}██╗   ██║${AnsiColor.RED} ██╔═══██║    ██║    ██╔════╝   ╚═══██╗    ██║    ██╔═══╝   ██╔══██║
+  ${AnsiColor.GREEN}╚██████╔╝${AnsiColor.RED} ██║   ██║ ████████╗ ██║       ██████╔╝    ██║    ████████╗ ██║  ╚██╗
+  ${AnsiColor.GREEN} ╚═════╝ ${AnsiColor.RED} ╚═╝   ╚═╝ ╚═══════╝ ╚═╝       ╚═════╝     ╚═╝    ╚═══════╝ ╚═╝   ╚═╝
+
+${AnsiColor.BRIGHT_BLUE}:: JHipster 🤓  :: Running Spring Boot ${spring-boot.version} ::
+:: https://www.jhipster.tech ::${AnsiColor.DEFAULT}
Index: src/main/resources/config/application-dev.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/config/application-dev.yml	(date 1552872226000)
+++ src/main/resources/config/application-dev.yml	(date 1552872226000)
@@ -0,0 +1,165 @@
+# ===================================================================
+# Spring Boot configuration for the "dev" profile.
+#
+# This configuration overrides the application.yml file.
+#
+# More information on profiles: https://www.jhipster.tech/profiles/
+# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+# ===================================================================
+# Standard Spring Boot properties.
+# Full reference is available at:
+# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
+# ===================================================================
+
+logging:
+    level:
+        ROOT: DEBUG
+        io.github.jhipster: DEBUG
+        de.iso.apps: DEBUG
+
+eureka:
+    instance:
+        prefer-ip-address: true
+    client:
+        service-url:
+            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/
+
+spring:
+    profiles:
+        active: dev
+        include:
+            - swagger
+            # Uncomment to activate TLS for the dev profile
+            #- tls
+    devtools:
+        restart:
+            enabled: true
+            additional-exclude: .h2.server.properties
+        livereload:
+            enabled: false # we use Webpack dev server + BrowserSync for livereload
+    jackson:
+        serialization:
+            indent-output: true
+    cloud:
+        stream:
+            kafka:
+                binder:
+                    brokers: localhost
+                    zk-nodes: localhost
+            bindings:
+                output:
+                    destination: topic-jhipster
+    datasource:
+        type: com.zaxxer.hikari.HikariDataSource
+        url: jdbc:h2:file:./target/h2db/db/efwservice;DB_CLOSE_DELAY=-1
+        username: efwservice
+        password:
+        hikari:
+            poolName: Hikari
+            auto-commit: false
+    h2:
+        console:
+            enabled: false
+    jpa:
+        database-platform: io.github.jhipster.domain.util.FixedH2Dialect
+        database: H2
+        show-sql: true
+        properties:
+            hibernate.id.new_generator_mappings: true
+            hibernate.connection.provider_disables_autocommit: true
+            hibernate.cache.use_second_level_cache: true
+            hibernate.cache.use_query_cache: false
+            hibernate.generate_statistics: true
+            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
+            hibernate.cache.hazelcast.instance_name: efwservice
+            hibernate.cache.use_minimal_puts: true
+            hibernate.cache.hazelcast.use_lite_member: true
+    data:
+        elasticsearch:
+            properties:
+                path:
+                    home: target/elasticsearch
+    liquibase:
+        contexts: dev
+    mail:
+        host: localhost
+        port: 25
+        username:
+        password:
+    messages:
+        cache-duration: PT1S # 1 second, see the ISO 8601 standard
+    thymeleaf:
+        cache: false
+    sleuth:
+        sampler:
+            probability: 1 # report 100% of traces
+    zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
+        base-url: http://localhost:9411
+        enabled: false
+        locator:
+            discovery:
+                enabled: true
+
+server:
+    port: 8081
+
+# ===================================================================
+# JHipster specific properties
+#
+# Full reference is available at: https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+jhipster:
+    http:
+        version: V_1_1 # To use HTTP/2 you will need to activate TLS (see application-tls.yml)
+    cache: # Cache configuration
+        hazelcast: # Hazelcast distributed cache
+            time-to-live-seconds: 3600
+            backup-count: 1
+            management-center: # Full reference is available at: http://docs.hazelcast.org/docs/management-center/3.9/manual/html/Deploying_and_Starting.html
+                enabled: false
+                update-interval: 3
+                url: http://localhost:8180/mancenter
+    # CORS is disabled by default on microservices, as you should access them through a gateway.
+    # If you want to enable it, please uncomment the configuration below.
+    # cors:
+        # allowed-origins: "*"
+        # allowed-methods: "*"
+        # allowed-headers: "*"
+        # exposed-headers: "Authorization,Link,X-Total-Count"
+        # allow-credentials: true
+        # max-age: 1800
+    security:
+        authentication:
+            jwt:
+                # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
+                base64-secret: NjBkYWExZjI2NzRjY2NiNzRhMjNhMWE1MDViYjdhMDkxOWEwZmY1NWEwNTk4MWU4NWQzNDk0MjdhZmQ2NzU5Y2I0ZjJhMWZkNTlhMTEwYTBlNTUwNGM2OGE5NTIwYjQyOWUyMmI3MTg3ZWJiODBiNjcwOTEzMWFhNGM3Y2JlYWQ=
+                # Token is valid 24 hours
+                token-validity-in-seconds: 86400
+                token-validity-in-seconds-for-remember-me: 2592000
+    mail: # specific JHipster mail property, for standard properties see MailProperties
+        from: efwservice@localhost
+        base-url: http://127.0.0.1:8081
+    metrics:
+        logs: # Reports metrics in the logs
+            enabled: false
+            report-frequency: 60 # in seconds
+    logging:
+        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
+            enabled: false
+            host: localhost
+            port: 5000
+            queue-size: 512
+
+# ===================================================================
+# Application specific properties
+# Add your own application properties here, see the ApplicationProperties class
+# to have type-safe configuration, like in the JHipsterProperties above
+#
+# More documentation is available at:
+# https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+# application:
Index: src/main/resources/config/application-prod.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/config/application-prod.yml	(date 1552872226000)
+++ src/main/resources/config/application-prod.yml	(date 1552872226000)
@@ -0,0 +1,168 @@
+# ===================================================================
+# Spring Boot configuration for the "prod" profile.
+#
+# This configuration overrides the application.yml file.
+#
+# More information on profiles: https://www.jhipster.tech/profiles/
+# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+# ===================================================================
+# Standard Spring Boot properties.
+# Full reference is available at:
+# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
+# ===================================================================
+
+logging:
+    level:
+        ROOT: INFO
+        de.iso.apps: INFO
+        io.github.jhipster: INFO
+
+eureka:
+    instance:
+        prefer-ip-address: true
+    client:
+        service-url:
+            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/
+
+spring:
+    devtools:
+        restart:
+            enabled: false
+        livereload:
+            enabled: false
+    cloud:
+        stream:
+            kafka:
+                binder:
+                    brokers: localhost
+                    zk-nodes: localhost
+            bindings:
+                output:
+                    destination: topic-jhipster
+    datasource:
+        type: com.zaxxer.hikari.HikariDataSource
+        url: jdbc:postgresql://localhost:5432/efwservice
+        username: efwservice
+        password:
+        hikari:
+            poolName: Hikari
+            auto-commit: false
+    jpa:
+        database-platform: io.github.jhipster.domain.util.FixedPostgreSQL82Dialect
+        database: POSTGRESQL
+        show-sql: false
+        properties:
+            hibernate.id.new_generator_mappings: true
+            hibernate.connection.provider_disables_autocommit: true
+            hibernate.cache.use_second_level_cache: true
+            hibernate.cache.use_query_cache: false
+            hibernate.generate_statistics: true
+            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
+            hibernate.cache.hazelcast.instance_name: efwservice
+            hibernate.cache.use_minimal_puts: true
+            hibernate.cache.hazelcast.use_lite_member: true
+    data:
+        jest:
+            uri: http://localhost:9200
+    liquibase:
+        contexts: prod
+    mail:
+        host: localhost
+        port: 25
+        username:
+        password:
+    thymeleaf:
+        cache: true
+    sleuth:
+        sampler:
+            probability: 1 # report 100% of traces
+    zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
+        base-url: http://localhost:9411
+        enabled: false
+        locator:
+            discovery:
+                enabled: true
+
+# ===================================================================
+# To enable TLS in production, generate a certificate using:
+# keytool -genkey -alias efwservice -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
+#
+# You can also use Let's Encrypt:
+# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
+#
+# Then, modify the server.ssl properties so your "server" configuration looks like:
+#
+# server:
+#    port: 443
+#    ssl:
+#        key-store: classpath:config/tls/keystore.p12
+#        key-store-password: password
+#        key-store-type: PKCS12
+#        key-alias: efwservice
+#        # The ciphers suite enforce the security by deactivating some old and deprecated SSL cipher, this list was tested against SSL Labs (https://www.ssllabs.com/ssltest/)
+#        ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
+# ===================================================================
+server:
+    port: 8081
+    compression:
+        enabled: true
+        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
+        min-response-size: 1024
+
+# ===================================================================
+# JHipster specific properties
+#
+# Full reference is available at: https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+jhipster:
+    http:
+        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
+        cache: # Used by the CachingHttpHeadersFilter
+            timeToLiveInDays: 1461
+    cache: # Cache configuration
+        hazelcast: # Hazelcast distributed cache
+            time-to-live-seconds: 3600
+            backup-count: 1
+            management-center: # Full reference is available at: http://docs.hazelcast.org/docs/management-center/3.9/manual/html/Deploying_and_Starting.html
+                enabled: false
+                update-interval: 3
+                url:
+    security:
+        authentication:
+            jwt:
+                # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
+                # As this is the PRODUCTION configuration, you MUST change the default key, and store it securely:
+                # - In the JHipster Registry (which includes a Spring Cloud Config server)
+                # - In a separate `application-prod.yml` file, in the same folder as your executable WAR file
+                # - In the `JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET` environment variable
+                base64-secret: NjBkYWExZjI2NzRjY2NiNzRhMjNhMWE1MDViYjdhMDkxOWEwZmY1NWEwNTk4MWU4NWQzNDk0MjdhZmQ2NzU5Y2I0ZjJhMWZkNTlhMTEwYTBlNTUwNGM2OGE5NTIwYjQyOWUyMmI3MTg3ZWJiODBiNjcwOTEzMWFhNGM3Y2JlYWQ=
+                # Token is valid 24 hours
+                token-validity-in-seconds: 86400
+                token-validity-in-seconds-for-remember-me: 2592000
+    mail: # specific JHipster mail property, for standard properties see MailProperties
+        from: efwservice@localhost
+        base-url: http://my-server-url-to-change # Modify according to your server's URL
+    metrics:
+        logs: # Reports metrics in the logs
+            enabled: false
+            report-frequency: 60 # in seconds
+    logging:
+        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
+            enabled: false
+            host: localhost
+            port: 5000
+            queue-size: 512
+
+# ===================================================================
+# Application specific properties
+# Add your own application properties here, see the ApplicationProperties class
+# to have type-safe configuration, like in the JHipsterProperties above
+#
+# More documentation is available at:
+# https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+# application:
Index: src/main/resources/config/application-tls.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/config/application-tls.yml	(date 1552872226000)
+++ src/main/resources/config/application-tls.yml	(date 1552872226000)
@@ -0,0 +1,20 @@
+# ===================================================================
+# Activate this profile to enable TLS and HTTP/2.
+#
+# JHipster has generated a self-signed certificate, which will be used to encrypt traffic.
+# As your browser will not understand this certificate, you will need to import it.
+#
+# Another (easiest) solution with Chrome is to enable the "allow-insecure-localhost" flag
+# at chrome://flags/#allow-insecure-localhost
+# ===================================================================
+server:
+    ssl:
+        key-store: classpath:config/tls/keystore.p12
+        key-store-password: password
+        key-store-type: PKCS12
+        key-alias: selfsigned
+        ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
+        enabled-protocols: TLSv1.2
+jhipster:
+    http:
+        version: V_2_0
Index: src/main/resources/config/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/config/application.yml	(date 1552872226000)
+++ src/main/resources/config/application.yml	(date 1552872226000)
@@ -0,0 +1,184 @@
+# ===================================================================
+# Spring Boot configuration.
+#
+# This configuration will be overridden by the Spring profile you use,
+# for example application-dev.yml if you use the "dev" profile.
+#
+# More information on profiles: https://www.jhipster.tech/profiles/
+# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+# ===================================================================
+# Standard Spring Boot properties.
+# Full reference is available at:
+# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
+# ===================================================================
+
+eureka:
+    client:
+        enabled: true
+        healthcheck:
+            enabled: true
+        fetch-registry: true
+        register-with-eureka: true
+        instance-info-replication-interval-seconds: 10
+        registry-fetch-interval-seconds: 10
+    instance:
+        appname: efwservice
+        instanceId: efwservice:${spring.application.instance-id:${random.value}}
+        lease-renewal-interval-in-seconds: 5
+        lease-expiration-duration-in-seconds: 10
+        status-page-url-path: ${management.endpoints.web.base-path}/info
+        health-check-url-path: ${management.endpoints.web.base-path}/health
+        metadata-map:
+            zone: primary # This is needed for the load balancer
+            profile: ${spring.profiles.active}
+            version: ${info.project.version:}
+            git-version: ${git.commit.id.describe:}
+            git-commit: ${git.commit.id.abbrev:}
+            git-branch: ${git.branch:}
+ribbon:
+    eureka:
+        enabled: true
+feign:
+    hystrix:
+        enabled: true
+#    client:
+#        config:
+#            default:
+#                connectTimeout: 5000
+#                readTimeout: 5000
+
+# See https://github.com/Netflix/Hystrix/wiki/Configuration
+hystrix:
+    command:
+        default:
+            execution:
+                isolation:
+                    strategy: SEMAPHORE
+# See https://github.com/spring-cloud/spring-cloud-netflix/issues/1330
+#                    thread:
+#                        timeoutInMilliseconds: 10000
+    shareSecurityContext: true
+
+management:
+    endpoints:
+        web:
+            base-path: /management
+            exposure:
+                include: ["configprops", "env", "health", "info", "threaddump", "logfile", "jhi-metrics", "prometheus" ]
+    endpoint:
+        health:
+            show-details: when-authorized
+        jhi-metrics:
+            enabled: true
+    info:
+        git:
+            mode: full
+    health:
+        mail:
+            enabled: false # When using the MailService, configure an SMTP server and set this to true
+    metrics:
+        export:
+            # Prometheus is the default metrics backend
+            prometheus:
+                enabled: true
+                step: 60
+        binders:
+            jvm:
+                enabled: true
+            processor:
+                enabled: true
+            uptime:
+                enabled: true
+            logback:
+                enabled: true
+            files:
+                enabled: true
+            integration:
+                enabled: true
+        distribution:
+            percentiles-histogram:
+                all: true
+            percentiles:
+                all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
+        web:
+            server:
+                auto-time-requests: true
+
+spring:
+    autoconfigure:
+        exclude: org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration,org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration
+    application:
+        name: efwservice
+    jpa:
+        open-in-view: false
+        properties:
+            hibernate.jdbc.time_zone: UTC
+        hibernate:
+            ddl-auto: none
+            naming:
+                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
+                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
+    messages:
+        basename: i18n/messages
+    mvc:
+        favicon:
+            enabled: false
+    thymeleaf:
+        mode: HTML
+
+server:
+    servlet:
+        session:
+            cookie:
+                http-only: true
+
+# Properties to be exposed on the /info management endpoint
+info:
+    # Comma separated list of profiles that will trigger the ribbon to show
+    display-ribbon-on-profiles: "dev"
+
+# ===================================================================
+# JHipster specific properties
+#
+# Full reference is available at: https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+jhipster:
+    async:
+        core-pool-size: 2
+        max-pool-size: 50
+        queue-capacity: 10000
+    # By default CORS is disabled. Uncomment to enable.
+    #cors:
+        #allowed-origins: "*"
+        #allowed-methods: "*"
+        #allowed-headers: "*"
+        #exposed-headers: "Authorization,Link,X-Total-Count"
+        #allow-credentials: true
+        #max-age: 1800
+    mail:
+        from: efwservice@localhost
+    swagger:
+        default-include-pattern: /api/.*
+        title: efwservice API
+        description: efwservice API documentation
+        version: 0.0.1
+        terms-of-service-url:
+        contact-name:
+        contact-url:
+        contact-email:
+        license:
+        license-url:
+
+# ===================================================================
+# Application specific properties
+# Add your own application properties here, see the ApplicationProperties class
+# to have type-safe configuration, like in the JHipsterProperties above
+#
+# More documentation is available at:
+# https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+# application:
Index: src/main/resources/config/bootstrap-prod.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/config/bootstrap-prod.yml	(date 1552872226000)
+++ src/main/resources/config/bootstrap-prod.yml	(date 1552872226000)
@@ -0,0 +1,22 @@
+# ===================================================================
+# Spring Cloud Config bootstrap configuration for the "prod" profile
+# ===================================================================
+
+spring:
+    cloud:
+        config:
+            fail-fast: true
+            retry:
+                initial-interval: 1000
+                max-interval: 2000
+                max-attempts: 100
+            uri: http://admin:${jhipster.registry.password}@localhost:8761/config
+            # name of the config server's property source (file.yml) that we want to use
+            name: efwservice
+            profile: prod # profile(s) of the property source
+            label: master # toggle to switch to a different version of the configuration as stored in git
+            # it can be set to any label, branch or commit of the configuration source Git repository
+
+jhipster:
+    registry:
+        password: admin
Index: src/main/resources/config/bootstrap.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/config/bootstrap.yml	(date 1552872226000)
+++ src/main/resources/config/bootstrap.yml	(date 1552872226000)
@@ -0,0 +1,26 @@
+# ===================================================================
+# Spring Cloud Config bootstrap configuration for the "dev" profile
+# In prod profile, properties will be overwritten by the ones defined in bootstrap-prod.yml
+# ===================================================================
+
+jhipster:
+    registry:
+        password: admin
+
+spring:
+    application:
+        name: efwservice
+    profiles:
+        # The commented value for `active` can be replaced with valid Spring profiles to load.
+        # Otherwise, it will be filled in by maven when building the WAR file
+        # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
+        active: #spring.profiles.active#
+    cloud:
+        config:
+            fail-fast: false # if not in "prod" profile, do not force to use Spring Cloud Config
+            uri: http://admin:${jhipster.registry.password}@localhost:8761/config
+            # name of the config server's property source (file.yml) that we want to use
+            name: efwservice
+            profile: dev # profile(s) of the property source
+            label: master # toggle to switch to a different version of the configuration as stored in git
+            # it can be set to any label, branch or commit of the configuration source Git repository
Index: src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml	(date 1552872226000)
+++ src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml	(date 1552872226000)
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="utf-8"?>
+<databaseChangeLog
+    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
+                        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
+
+    <changeSet id="00000000000000" author="jhipster">
+        <createSequence sequenceName="hibernate_sequence" startValue="1000" incrementBy="50"/>
+    </changeSet>
+
+    <!--
+        JHipster core tables.
+        The initial schema has the '00000000000001' id, so that it is over-written if we re-generate it.
+    -->
+    <changeSet id="00000000000001" author="jhipster">
+        <createTable tableName="jhi_persistent_audit_event">
+            <column name="event_id" type="bigint" autoIncrement="${autoIncrement}">
+                <constraints primaryKey="true" nullable="false"/>
+            </column>
+            <column name="principal" type="varchar(50)">
+                <constraints nullable="false" />
+            </column>
+            <column name="event_date" type="timestamp"/>
+            <column name="event_type" type="varchar(255)"/>
+        </createTable>
+
+        <createTable tableName="jhi_persistent_audit_evt_data">
+            <column name="event_id" type="bigint">
+                <constraints nullable="false"/>
+            </column>
+            <column name="name" type="varchar(150)">
+                <constraints nullable="false"/>
+            </column>
+            <column name="value" type="varchar(255)"/>
+        </createTable>
+        <addPrimaryKey columnNames="event_id, name" tableName="jhi_persistent_audit_evt_data"/>
+
+        <createIndex indexName="idx_persistent_audit_event"
+                     tableName="jhi_persistent_audit_event"
+                     unique="false">
+            <column name="principal" type="varchar(50)"/>
+            <column name="event_date" type="timestamp"/>
+        </createIndex>
+
+        <createIndex indexName="idx_persistent_audit_evt_data"
+                     tableName="jhi_persistent_audit_evt_data"
+                     unique="false">
+            <column name="event_id" type="bigint"/>
+        </createIndex>
+
+        <addForeignKeyConstraint baseColumnNames="event_id"
+                                 baseTableName="jhi_persistent_audit_evt_data"
+                                 constraintName="fk_evt_pers_audit_evt_data"
+                                 referencedColumnNames="event_id"
+                                 referencedTableName="jhi_persistent_audit_event"/>
+    </changeSet>
+
+    <changeSet author="jhipster" id="00000000000002" context="test">
+        <createTable tableName="jhi_date_time_wrapper">
+            <column autoIncrement="${autoIncrement}" name="id" type="BIGINT">
+                <constraints primaryKey="true" primaryKeyName="jhi_date_time_wrapperPK"/>
+            </column>
+            <column name="instant" type="timestamp"/>
+            <column name="local_date_time" type="timestamp"/>
+            <column name="offset_date_time" type="timestamp"/>
+            <column name="zoned_date_time" type="timestamp"/>
+            <column name="local_time" type="time"/>
+            <column name="offset_time" type="time"/>
+            <column name="local_date" type="date"/>
+        </createTable>
+    </changeSet>
+</databaseChangeLog>
Index: src/main/resources/config/liquibase/master.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/config/liquibase/master.xml	(date 1552872226000)
+++ src/main/resources/config/liquibase/master.xml	(date 1552872226000)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<databaseChangeLog
+    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
+
+    <include file="config/liquibase/changelog/00000000000000_initial_schema.xml" relativeToChangelogFile="false"/>
+    <!-- jhipster-needle-liquibase-add-changelog - JHipster will add liquibase changelogs here -->
+    <!-- jhipster-needle-liquibase-add-constraints-changelog - JHipster will add liquibase constraints changelogs here -->
+</databaseChangeLog>
Index: src/main/resources/i18n/messages.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/i18n/messages.properties	(date 1552872226000)
+++ src/main/resources/i18n/messages.properties	(date 1552872226000)
@@ -0,0 +1,21 @@
+# Error page
+error.title=Your request cannot be processed
+error.subtitle=Sorry, an error has occurred.
+error.status=Status:
+error.message=Message:
+
+# Activation email
+email.activation.title=efwservice account activation
+email.activation.greeting=Dear {0}
+email.activation.text1=Your efwservice account has been created, please click on the URL below to activate it:
+email.activation.text2=Regards,
+email.signature=efwservice Team.
+
+# Creation email
+email.creation.text1=Your efwservice account has been created, please click on the URL below to access it:
+
+# Reset email
+email.reset.title=efwservice password reset
+email.reset.greeting=Dear {0}
+email.reset.text1=For your efwservice account a password reset was requested, please click on the URL below to reset it:
+email.reset.text2=Regards,
Index: src/main/resources/i18n/messages_de.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/i18n/messages_de.properties	(date 1552872226000)
+++ src/main/resources/i18n/messages_de.properties	(date 1552872226000)
@@ -0,0 +1,21 @@
+# Error page
+error.title=Ihre Anfrage kann nicht bearbeitet werden
+error.subtitle=Verzeihung, ein Fehler ist aufgetreten.
+error.status=Status:
+error.message=Meldung:
+
+# Activation email
+email.activation.title=efwservice Aktivierung
+email.activation.greeting=Liebe(r) {0}
+email.activation.text1=Ihr efwservice Zugang wurde angelegt, bitte klicken Sie unten auf den Link, um diesen zu aktivieren:
+email.activation.text2=Grüße,
+email.signature=efwservice.
+
+# Creation email
+email.creation.text1=Ihr efwservice Zugang wurde angelegt, bitte klicken Sie auf den Link um sich anzumelden:
+
+# Reset email
+email.reset.title=efwservice Passwort zurücksetzen
+email.reset.greeting=Liebe(r) {0}
+email.reset.text1=Für Ihren efwservice Account wurde ein neues Passwort angefordert, bitte klicken Sie unten auf den Link, um das Passwort zurückzusetzen:
+email.reset.text2=Grüße,
Index: src/main/resources/i18n/messages_en.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/i18n/messages_en.properties	(date 1552872226000)
+++ src/main/resources/i18n/messages_en.properties	(date 1552872226000)
@@ -0,0 +1,21 @@
+# Error page
+error.title=Your request cannot be processed
+error.subtitle=Sorry, an error has occurred.
+error.status=Status:
+error.message=Message:
+
+# Activation email
+email.activation.title=efwservice account activation
+email.activation.greeting=Dear {0}
+email.activation.text1=Your efwservice account has been created, please click on the URL below to activate it:
+email.activation.text2=Regards,
+email.signature=efwservice Team.
+
+# Creation email
+email.creation.text1=Your efwservice account has been created, please click on the URL below to access it:
+
+# Reset email
+email.reset.title=efwservice password reset
+email.reset.greeting=Dear {0}
+email.reset.text1=For your efwservice account a password reset was requested, please click on the URL below to reset it:
+email.reset.text2=Regards,
Index: src/main/resources/logback-spring.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/logback-spring.xml	(date 1552872226000)
+++ src/main/resources/logback-spring.xml	(date 1552872226000)
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE configuration>
+
+<configuration scan="true">
+    <include resource="org/springframework/boot/logging/logback/base.xml"/>
+
+<!-- The FILE and ASYNC appenders are here as examples for a production configuration -->
+<!--
+    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
+        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
+            <fileNamePattern>logFile.%d{yyyy-MM-dd}.log</fileNamePattern>
+            <maxHistory>90</maxHistory>
+        </rollingPolicy>
+        <encoder>
+            <charset>utf-8</charset>
+            <Pattern>%d %-5level [%thread] %logger{0}: %msg%n</Pattern>
+        </encoder>
+    </appender>
+
+    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
+        <queueSize>512</queueSize>
+        <appender-ref ref="FILE"/>
+    </appender>
+
+    <root level="${logging.level.root}">
+        <appender-ref ref="ASYNC"/>
+    </root>
+-->
+
+    <logger name="javax.activation" level="WARN"/>
+    <logger name="javax.mail" level="WARN"/>
+    <logger name="javax.management.remote" level="WARN"/>
+    <logger name="javax.xml.bind" level="WARN"/>
+    <logger name="ch.qos.logback" level="WARN"/>
+    
+    <logger name="com.hazelcast" level="INFO"/>
+    <logger name="com.netflix" level="WARN"/>
+    <logger name="com.netflix.discovery" level="INFO"/>
+    <logger name="com.ryantenney" level="WARN"/>
+    <logger name="com.sun" level="WARN"/>
+    <logger name="com.zaxxer" level="WARN"/>
+    <logger name="io.searchbox" level="WARN"/>
+    <logger name="io.undertow" level="WARN"/>
+    <logger name="io.undertow.websockets.jsr" level="ERROR"/>
+    <logger name="org.apache" level="WARN"/>
+    <logger name="org.apache.catalina.startup.DigesterFactory" level="OFF"/>
+    <logger name="org.bson" level="WARN"/>
+    <logger name="org.elasticsearch" level="WARN"/>
+    <logger name="org.hibernate.validator" level="WARN"/>
+    <logger name="org.hibernate" level="WARN"/>
+    <logger name="org.hibernate.ejb.HibernatePersistence" level="OFF"/>
+    <logger name="org.postgresql.jdbc" level="WARN"/>
+    <logger name="org.springframework" level="WARN"/>
+    <logger name="org.springframework.web" level="WARN"/>
+    <logger name="org.springframework.security" level="WARN"/>
+    <logger name="org.springframework.cache" level="WARN"/>
+    <logger name="org.thymeleaf" level="WARN"/>
+    <logger name="org.xnio" level="WARN"/>
+    <logger name="kafka" level="WARN"/>
+    <logger name="org.I0Itec" level="WARN"/>
+    <logger name="springfox" level="WARN"/>
+    <logger name="sun.rmi" level="WARN"/>
+    <logger name="liquibase" level="WARN"/>
+    <logger name="LiquibaseSchemaResolver" level="INFO"/>
+    <logger name="sun.net.www" level="INFO"/>
+    <logger name="sun.rmi.transport" level="WARN"/>
+
+    <!-- https://logback.qos.ch/manual/configuration.html#shutdownHook and https://jira.qos.ch/browse/LOGBACK-1090 -->
+    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>
+
+    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
+        <resetJUL>true</resetJUL>
+    </contextListener>
+
+</configuration>
Index: src/main/resources/static/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/static/index.html	(date 1552872226000)
+++ src/main/resources/static/index.html	(date 1552872226000)
@@ -0,0 +1,103 @@
+<!DOCTYPE html>
+<html>
+<head>
+    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
+    <title>JHipster microservice homepage</title>
+    <style>
+        ::-moz-selection {
+            background: #b3d4fc;
+            text-shadow: none;
+        }
+
+        ::selection {
+            background: #b3d4fc;
+            text-shadow: none;
+        }
+
+        html {
+            padding: 30px 10px;
+            font-size: 20px;
+            line-height: 1.4;
+            color: #737373;
+            background: #262c31;
+            -webkit-text-size-adjust: 100%;
+            -ms-text-size-adjust: 100%;
+        }
+
+        html,
+        input {
+            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
+        }
+
+        body {
+            max-width: 1000px;
+            _width: 500px;
+            padding: 30px 20px 50px;
+            border: 1px solid #b3b3b3;
+            border-radius: 4px;
+            margin: 0 auto;
+            box-shadow: 0 1px 10px #a7a7a7, inset 0 1px 0 #fff;
+            background: #fcfcfc;
+        }
+
+        h1 {
+            margin: 0 10px;
+            font-size: 50px;
+            text-align: center;
+        }
+
+        h1 span {
+            color: #bbb;
+        }
+
+        h3 {
+            margin: 1.5em 0 0.5em;
+        }
+
+        p {
+            margin: 1em 0;
+        }
+
+        ul {
+            padding: 0 0 0 40px;
+            margin: 1em 0;
+        }
+
+        .container {
+            max-width: 800px;
+            _width: 380px;
+            margin: 0 auto;
+        }
+    </style>
+</head>
+<body>
+<div class="container">
+    <h1>Welcome, Java Hipster!</h1>
+
+    <p>This application is a microservice, which has been generated using <a href="https://www.jhipster.tech/">JHipster</a>.</p>
+
+    <ul>
+        <li>It does not have a front-end. The front-end should be generated on a JHipster gateway</li>
+        <li>It is serving REST APIs, under the '/api' URLs.</li>
+        <li>Swagger documentation endpoint for those APIs is at <a href="./v2/api-docs">/v2/api-docs</a>, but if you want access to the full Swagger UI, you should use a JHipster gateway, which will serve as an API developer portal</li>
+    </ul>
+
+    <h2>
+        If you have any question on JHipster:
+    </h2>
+
+    <ul>
+        <li><a href="https://www.jhipster.tech/" target="_blank">JHipster homepage</a></li>
+        <li><a href="http://stackoverflow.com/tags/jhipster/info" target="_blank">JHipster on Stack Overflow</a></li>
+        <li><a href="https://github.com/jhipster/generator-jhipster/issues?state=open" target="_blank">JHipster bug tracker</a></li>
+        <li><a href="https://gitter.im/jhipster/generator-jhipster" target="_blank">JHipster public chat room</a></li>
+        <li><a href="https://twitter.com/java_hipster" target="_blank">follow @java_hipster on Twitter</a></li>
+    </ul>
+
+    <p>
+        <span>If you like JHipster, don't forget to give us a star on</span> <a href="https://github.com/jhipster/generator-jhipster" target="_blank">GitHub</a>!
+    </p>
+
+</div>
+</body>
+</html>
Index: src/main/resources/swagger/api.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/swagger/api.yml	(date 1552872226000)
+++ src/main/resources/swagger/api.yml	(date 1552872226000)
@@ -0,0 +1,7 @@
+# API-first development with OpenAPI
+# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
+openapi: "3.0.1"
+info:
+  title: "efwservice"
+  version: 0.0.1
+paths: {}
\ No newline at end of file
Index: src/main/resources/templates/error.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/templates/error.html	(date 1552872226000)
+++ src/main/resources/templates/error.html	(date 1552872226000)
@@ -0,0 +1,163 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.thymeleaf.org ">
+<head>
+    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
+    <link rel="shortcut icon" href="${baseUrl}/favicon.ico" />
+    <title>Your request cannot be processed</title>
+    <style>
+        ::-moz-selection {
+            background: #b3d4fc;
+            text-shadow: none;
+        }
+
+        ::selection {
+            background: #b3d4fc;
+            text-shadow: none;
+        }
+
+        html {
+            padding: 30px 10px;
+            font-size: 20px;
+            line-height: 1.4;
+            color: #737373;
+            background: #f0f0f0;
+            -webkit-text-size-adjust: 100%;
+            -ms-text-size-adjust: 100%;
+        }
+
+        html,
+        input {
+            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
+        }
+
+        body {
+            max-width: 500px;
+            _width: 500px;
+            padding: 30px 20px 50px;
+            border: 1px solid #b3b3b3;
+            border-radius: 4px;
+            margin: 0 auto;
+            box-shadow: 0 1px 10px #a7a7a7, inset 0 1px 0 #fff;
+            background: #fcfcfc;
+        }
+
+        h1 {
+            margin: 0 10px;
+            font-size: 50px;
+            text-align: center;
+        }
+
+        h1 span {
+            color: #bbb;
+        }
+
+        h3 {
+            margin: 1.5em 0 0.5em;
+        }
+
+        p {
+            margin: 1em 0;
+        }
+
+        ul {
+            padding: 0 0 0 40px;
+            margin: 1em 0;
+        }
+
+        .container {
+            max-width: 380px;
+            _width: 380px;
+            margin: 0 auto;
+        }
+
+        /* google search */
+
+        #goog-fixurl ul {
+            list-style: none;
+            padding: 0;
+            margin: 0;
+        }
+
+        #goog-fixurl form {
+            margin: 0;
+        }
+
+        #goog-wm-qt,
+        #goog-wm-sb {
+            border: 1px solid #bbb;
+            font-size: 16px;
+            line-height: normal;
+            vertical-align: top;
+            color: #444;
+            border-radius: 2px;
+        }
+
+        #goog-wm-qt {
+            width: 220px;
+            height: 20px;
+            padding: 5px;
+            margin: 5px 10px 0 0;
+            box-shadow: inset 0 1px 1px #ccc;
+        }
+
+        #goog-wm-sb {
+            display: inline-block;
+            height: 32px;
+            padding: 0 10px;
+            margin: 5px 0 0;
+            white-space: nowrap;
+            cursor: pointer;
+            background-color: #f5f5f5;
+            background-image: -webkit-linear-gradient(rgba(255, 255, 255, 0), #f1f1f1);
+            background-image: -moz-linear-gradient(rgba(255, 255, 255, 0), #f1f1f1);
+            background-image: -ms-linear-gradient(rgba(255, 255, 255, 0), #f1f1f1);
+            background-image: -o-linear-gradient(rgba(255, 255, 255, 0), #f1f1f1);
+            -webkit-appearance: none;
+            -moz-appearance: none;
+            appearance: none;
+            *overflow: visible;
+            *display: inline;
+            *zoom: 1;
+        }
+
+        #goog-wm-sb:hover,
+        #goog-wm-sb:focus {
+            border-color: #aaa;
+            box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
+            background-color: #f8f8f8;
+        }
+
+        #goog-wm-qt:hover,
+        #goog-wm-qt:focus {
+            border-color: #105cb6;
+            outline: 0;
+            color: #222;
+        }
+
+        input::-moz-focus-inner {
+            padding: 0;
+            border: 0;
+        }
+    </style>
+</head>
+<body>
+<div class="container">
+    <h1 th:text="#{error.title}">Your request cannot be processed <span>:(</span></h1>
+
+    <p th:text="#{error.subtitle}">Sorry, an error has occurred.</p>
+
+    <span th:text="#{error.status}">Status:</span>&nbsp;<span th:text="${error}"></span>&nbsp;(<span th:text="${error}"></span>)<br/>
+    <span th:if="${!#strings.isEmpty(message)}">
+        <span th:text="#{error.message}">Message:</span>&nbsp;<span th:text="${message}"></span><br/>
+    </span>
+
+    <script th:inline="text">
+        /*<![CDATA[*/
+        var GOOG_FIXURL_LANG = '[[${#locale.language}]]', GOOG_FIXURL_SITE = location.host;
+        /*]]>*/
+    </script>
+    <script src="https://linkhelp.clients.google.com/tbproxy/lh/wm/fixurl.js"></script>
+</div>
+</body>
+</html>
Index: src/test/gatling/conf/gatling.conf
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/gatling/conf/gatling.conf	(date 1552872226000)
+++ src/test/gatling/conf/gatling.conf	(date 1552872226000)
@@ -0,0 +1,132 @@
+#########################
+# Gatling Configuration #
+#########################
+
+# This file contains all the settings configurable for Gatling with their default values
+
+gatling {
+  core {
+    #outputDirectoryBaseName = "" # The prefix for each simulation result folder (then suffixed by the report generation timestamp)
+    #runDescription = ""          # The description for this simulation run, displayed in each report
+    #encoding = "utf-8"           # Encoding to use throughout Gatling for file and string manipulation
+    #simulationClass = ""         # The FQCN of the simulation to run (when used in conjunction with noReports, the simulation for which assertions will be validated)
+    #mute = false                 # When set to true, don't ask for simulation name nor run description (currently only used by Gatling SBT plugin)
+    #elFileBodiesCacheMaxCapacity = 200        # Cache size for request body EL templates, set to 0 to disable
+    #rawFileBodiesCacheMaxCapacity = 200       # Cache size for request body Raw templates, set to 0 to disable
+    #rawFileBodiesInMemoryMaxSize = 1000       # Below this limit, raw file bodies will be cached in memory
+
+    extract {
+      regex {
+        #cacheMaxCapacity = 200 # Cache size for the compiled regexes, set to 0 to disable caching
+      }
+      xpath {
+        #cacheMaxCapacity = 200 # Cache size for the compiled XPath queries,  set to 0 to disable caching
+      }
+      jsonPath {
+        #cacheMaxCapacity = 200 # Cache size for the compiled jsonPath queries, set to 0 to disable caching
+        #preferJackson = false  # When set to true, prefer Jackson over Boon for JSON-related operations
+      }
+      css {
+        #cacheMaxCapacity = 200 # Cache size for the compiled CSS selectors queries,  set to 0 to disable caching
+      }
+    }
+
+    directory {
+      #data = user-files/data               # Folder where user's data (e.g. files used by Feeders) is located
+      #bodies = user-files/bodies           # Folder where bodies are located
+      #simulations = user-files/simulations # Folder where the bundle's simulations are located
+      #reportsOnly = ""                     # If set, name of report folder to look for in order to generate its report
+      #binaries = ""                        # If set, name of the folder where compiles classes are located: Defaults to GATLING_HOME/target.
+      #results = results                    # Name of the folder where all reports folder are located
+    }
+  }
+  charting {
+    #noReports = false       # When set to true, don't generate HTML reports
+    #maxPlotPerSeries = 1000 # Number of points per graph in Gatling reports
+    #useGroupDurationMetric = false  # Switch group timings from cumulated response time to group duration.
+    indicators {
+      #lowerBound = 800      # Lower bound for the requests' response time to track in the reports and the console summary
+      #higherBound = 1200    # Higher bound for the requests' response time to track in the reports and the console summary
+      #percentile1 = 50      # Value for the 1st percentile to track in the reports, the console summary and Graphite
+      #percentile2 = 75      # Value for the 2nd percentile to track in the reports, the console summary and Graphite
+      #percentile3 = 95      # Value for the 3rd percentile to track in the reports, the console summary and Graphite
+      #percentile4 = 99      # Value for the 4th percentile to track in the reports, the console summary and Graphite
+    }
+  }
+  http {
+    #fetchedCssCacheMaxCapacity = 200          # Cache size for CSS parsed content, set to 0 to disable
+    #fetchedHtmlCacheMaxCapacity = 200         # Cache size for HTML parsed content, set to 0 to disable
+    #perUserCacheMaxCapacity = 200             # Per virtual user cache size, set to 0 to disable
+    #warmUpUrl = "http://gatling.io"           # The URL to use to warm-up the HTTP stack (blank means disabled)
+    #enableGA = true                           # Very light Google Analytics, please support
+    ssl {
+      keyStore {
+        #type = ""      # Type of SSLContext's KeyManagers store
+        #file = ""      # Location of SSLContext's KeyManagers store
+        #password = ""  # Password for SSLContext's KeyManagers store
+        #algorithm = "" # Algorithm used SSLContext's KeyManagers store
+      }
+      trustStore {
+        #type = ""      # Type of SSLContext's TrustManagers store
+        #file = ""      # Location of SSLContext's TrustManagers store
+        #password = ""  # Password for SSLContext's TrustManagers store
+        #algorithm = "" # Algorithm used by SSLContext's TrustManagers store
+      }
+    }
+    ahc {
+      #keepAlive = true                                # Allow pooling HTTP connections (keep-alive header automatically added)
+      #connectTimeout = 10000                          # Timeout when establishing a connection
+      #handshakeTimeout = 10000                        # Timeout when performing TLS hashshake
+      #pooledConnectionIdleTimeout = 60000             # Timeout when a connection stays unused in the pool
+      #readTimeout = 60000                             # Timeout when a used connection stays idle
+      #maxRetry = 2                                    # Number of times that a request should be tried again
+      #requestTimeout = 60000                          # Timeout of the requests
+      #acceptAnyCertificate = true                     # When set to true, doesn't validate SSL certificates
+      #httpClientCodecMaxInitialLineLength = 4096      # Maximum length of the initial line of the response (e.g. "HTTP/1.0 200 OK")
+      #httpClientCodecMaxHeaderSize = 8192             # Maximum size, in bytes, of each request's headers
+      #httpClientCodecMaxChunkSize = 8192              # Maximum length of the content or each chunk
+      #webSocketMaxFrameSize = 10240000                # Maximum frame payload size
+      #sslEnabledProtocols = [TLSv1.2, TLSv1.1, TLSv1] # Array of enabled protocols for HTTPS, if empty use the JDK defaults
+      #sslEnabledCipherSuites = []                     # Array of enabled cipher suites for HTTPS, if empty use the AHC defaults
+      #sslSessionCacheSize = 0                         # SSLSession cache size, set to 0 to use JDK's default
+      #sslSessionTimeout = 0                           # SSLSession timeout in seconds, set to 0 to use JDK's default (24h)
+      #useOpenSsl = false                              # if OpenSSL should be used instead of JSSE (requires tcnative jar)
+      #useNativeTransport = false                      # if native transport should be used instead of Java NIO (requires netty-transport-native-epoll, currently Linux only)
+      #tcpNoDelay = true
+      #soReuseAddress = false
+      #soLinger = -1
+      #soSndBuf = -1
+      #soRcvBuf = -1
+      #allocator = "pooled"                            # switch to unpooled for unpooled ByteBufAllocator
+      #maxThreadLocalCharBufferSize = 200000           # Netty's default is 16k
+    }
+    dns {
+      #queryTimeout = 5000                             # Timeout of each DNS query in millis
+      #maxQueriesPerResolve = 6                        # Maximum allowed number of DNS queries for a given name resolution
+    }
+  }
+  jms {
+    #acknowledgedMessagesBufferSize = 5000             # size of the buffer used to tracked acknowledged messages and protect against duplicate receives
+  }
+  data {
+    #writers = [console, file]      # The list of DataWriters to which Gatling write simulation data (currently supported : console, file, graphite, jdbc)
+    console {
+      #light = false                # When set to true, displays a light version without detailed request stats
+    }
+    file {
+      #bufferSize = 8192            # FileDataWriter's internal data buffer size, in bytes
+    }
+    leak {
+      #noActivityTimeout = 30  # Period, in seconds, for which Gatling may have no activity before considering a leak may be happening
+    }
+    graphite {
+      #light = false              # only send the all* stats
+      #host = "localhost"         # The host where the Carbon server is located
+      #port = 2003                # The port to which the Carbon server listens to (2003 is default for plaintext, 2004 is default for pickle)
+      #protocol = "tcp"           # The protocol used to send data to Carbon (currently supported : "tcp", "udp")
+      #rootPathPrefix = "gatling" # The common prefix of all metrics sent to Graphite
+      #bufferSize = 8192          # GraphiteDataWriter's internal data buffer size, in bytes
+      #writeInterval = 1          # GraphiteDataWriter's write interval, in seconds
+    }
+  }
+}
Index: src/test/gatling/conf/logback.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/gatling/conf/logback.xml	(date 1552872226000)
+++ src/test/gatling/conf/logback.xml	(date 1552872226000)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE configuration>
+
+<configuration>
+
+    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
+        <encoder>
+            <pattern>%d{HH:mm:ss.SSS} [%-5level] %logger{15} - %msg%n%rEx</pattern>
+            <immediateFlush>false</immediateFlush>
+        </encoder>
+    </appender>
+
+    <!-- Uncomment for logging ALL HTTP request and responses -->
+    <!--    <logger name="io.gatling.http.ahc" level="TRACE" /> -->
+    <!--    <logger name="io.gatling.http.response" level="TRACE" /> -->
+    <!-- Uncomment for logging ONLY FAILED HTTP request and responses -->
+    <!--    <logger name="io.gatling.http.ahc" level="DEBUG" /> -->
+    <!--    <logger name="io.gatling.http.response" level="DEBUG" /> -->
+
+    <root level="WARN">
+        <appender-ref ref="CONSOLE" />
+    </root>
+
+</configuration>
Index: src/test/java/de/iso/apps/config/WebConfigurerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/config/WebConfigurerTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/config/WebConfigurerTest.java	(date 1552872226000)
@@ -0,0 +1,182 @@
+package de.iso.apps.config;
+
+import io.github.jhipster.config.JHipsterConstants;
+import io.github.jhipster.config.JHipsterProperties;
+import io.undertow.Undertow;
+import io.undertow.Undertow.Builder;
+import io.undertow.UndertowOptions;
+
+import org.h2.server.web.WebServlet;
+import org.junit.Before;
+import org.junit.Test;
+import org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory;
+import org.springframework.http.HttpHeaders;
+import org.springframework.mock.env.MockEnvironment;
+import org.springframework.mock.web.MockServletContext;
+import org.springframework.test.util.ReflectionTestUtils;
+import org.springframework.test.web.servlet.MockMvc;
+import org.springframework.test.web.servlet.setup.MockMvcBuilders;
+import org.xnio.OptionMap;
+
+import javax.servlet.*;
+import java.util.*;
+
+import static org.assertj.core.api.Assertions.assertThat;
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.ArgumentMatchers.anyString;
+import static org.mockito.Mockito.*;
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.options;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.header;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
+
+/**
+ * Unit tests for the WebConfigurer class.
+ *
+ * @see WebConfigurer
+ */
+public class WebConfigurerTest {
+
+    private WebConfigurer webConfigurer;
+
+    private MockServletContext servletContext;
+
+    private MockEnvironment env;
+
+    private JHipsterProperties props;
+
+    @Before
+    public void setup() {
+        servletContext = spy(new MockServletContext());
+        doReturn(mock(FilterRegistration.Dynamic.class))
+            .when(servletContext).addFilter(anyString(), any(Filter.class));
+        doReturn(mock(ServletRegistration.Dynamic.class))
+            .when(servletContext).addServlet(anyString(), any(Servlet.class));
+
+        env = new MockEnvironment();
+        props = new JHipsterProperties();
+
+        webConfigurer = new WebConfigurer(env, props);
+    }
+
+    @Test
+    public void testStartUpProdServletContext() throws ServletException {
+        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_PRODUCTION);
+        webConfigurer.onStartup(servletContext);
+
+        verify(servletContext, never()).addServlet(eq("H2Console"), any(WebServlet.class));
+    }
+
+    @Test
+    public void testStartUpDevServletContext() throws ServletException {
+        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT);
+        webConfigurer.onStartup(servletContext);
+
+        verify(servletContext).addServlet(eq("H2Console"), any(WebServlet.class));
+    }
+
+    @Test
+    public void testCustomizeServletContainer() {
+        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_PRODUCTION);
+        UndertowServletWebServerFactory container = new UndertowServletWebServerFactory();
+        webConfigurer.customize(container);
+        assertThat(container.getMimeMappings().get("abs")).isEqualTo("audio/x-mpeg");
+        assertThat(container.getMimeMappings().get("html")).isEqualTo("text/html;charset=utf-8");
+        assertThat(container.getMimeMappings().get("json")).isEqualTo("text/html;charset=utf-8");
+
+        Builder builder = Undertow.builder();
+        container.getBuilderCustomizers().forEach(c -> c.customize(builder));
+        OptionMap.Builder serverOptions = (OptionMap.Builder) ReflectionTestUtils.getField(builder, "serverOptions");
+        assertThat(serverOptions.getMap().get(UndertowOptions.ENABLE_HTTP2)).isNull();
+    }
+
+    @Test
+    public void testUndertowHttp2Enabled() {
+        props.getHttp().setVersion(JHipsterProperties.Http.Version.V_2_0);
+        UndertowServletWebServerFactory container = new UndertowServletWebServerFactory();
+        webConfigurer.customize(container);
+        Builder builder = Undertow.builder();
+        container.getBuilderCustomizers().forEach(c -> c.customize(builder));
+        OptionMap.Builder serverOptions = (OptionMap.Builder) ReflectionTestUtils.getField(builder, "serverOptions");
+        assertThat(serverOptions.getMap().get(UndertowOptions.ENABLE_HTTP2)).isTrue();
+    }
+
+    @Test
+    public void testCorsFilterOnApiPath() throws Exception {
+        props.getCors().setAllowedOrigins(Collections.singletonList("*"));
+        props.getCors().setAllowedMethods(Arrays.asList("GET", "POST", "PUT", "DELETE"));
+        props.getCors().setAllowedHeaders(Collections.singletonList("*"));
+        props.getCors().setMaxAge(1800L);
+        props.getCors().setAllowCredentials(true);
+
+        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())
+            .addFilters(webConfigurer.corsFilter())
+            .build();
+
+        mockMvc.perform(
+            options("/api/test-cors")
+                .header(HttpHeaders.ORIGIN, "other.domain.com")
+                .header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "POST"))
+            .andExpect(status().isOk())
+            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, "other.domain.com"))
+            .andExpect(header().string(HttpHeaders.VARY, "Origin"))
+            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, "GET,POST,PUT,DELETE"))
+            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, "true"))
+            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_MAX_AGE, "1800"));
+
+        mockMvc.perform(
+            get("/api/test-cors")
+                .header(HttpHeaders.ORIGIN, "other.domain.com"))
+            .andExpect(status().isOk())
+            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, "other.domain.com"));
+    }
+
+    @Test
+    public void testCorsFilterOnOtherPath() throws Exception {
+        props.getCors().setAllowedOrigins(Collections.singletonList("*"));
+        props.getCors().setAllowedMethods(Arrays.asList("GET", "POST", "PUT", "DELETE"));
+        props.getCors().setAllowedHeaders(Collections.singletonList("*"));
+        props.getCors().setMaxAge(1800L);
+        props.getCors().setAllowCredentials(true);
+
+        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())
+            .addFilters(webConfigurer.corsFilter())
+            .build();
+
+        mockMvc.perform(
+            get("/test/test-cors")
+                .header(HttpHeaders.ORIGIN, "other.domain.com"))
+            .andExpect(status().isOk())
+            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));
+    }
+
+    @Test
+    public void testCorsFilterDeactivated() throws Exception {
+        props.getCors().setAllowedOrigins(null);
+
+        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())
+            .addFilters(webConfigurer.corsFilter())
+            .build();
+
+        mockMvc.perform(
+            get("/api/test-cors")
+                .header(HttpHeaders.ORIGIN, "other.domain.com"))
+            .andExpect(status().isOk())
+            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));
+    }
+
+    @Test
+    public void testCorsFilterDeactivated2() throws Exception {
+        props.getCors().setAllowedOrigins(new ArrayList<>());
+
+        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())
+            .addFilters(webConfigurer.corsFilter())
+            .build();
+
+        mockMvc.perform(
+            get("/api/test-cors")
+                .header(HttpHeaders.ORIGIN, "other.domain.com"))
+            .andExpect(status().isOk())
+            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));
+    }
+}
Index: src/test/java/de/iso/apps/config/WebConfigurerTestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/config/WebConfigurerTestController.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/config/WebConfigurerTestController.java	(date 1552872226000)
@@ -0,0 +1,16 @@
+package de.iso.apps.config;
+
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+public class WebConfigurerTestController {
+
+    @GetMapping("/api/test-cors")
+    public void testCorsOnApiPath() {
+    }
+
+    @GetMapping("/test/test-cors")
+    public void testCorsOnOtherPath() {
+    }
+}
Index: src/test/java/de/iso/apps/config/timezone/HibernateTimeZoneTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/config/timezone/HibernateTimeZoneTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/config/timezone/HibernateTimeZoneTest.java	(date 1552872226000)
@@ -0,0 +1,176 @@
+package de.iso.apps.config.timezone;
+
+import de.iso.apps.EfwserviceApp;
+import de.iso.apps.repository.timezone.DateTimeWrapper;
+import de.iso.apps.repository.timezone.DateTimeWrapperRepository;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.jdbc.core.JdbcTemplate;
+import org.springframework.jdbc.support.rowset.SqlRowSet;
+import org.springframework.test.context.junit4.SpringRunner;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.time.*;
+import java.time.format.DateTimeFormatter;
+
+import static java.lang.String.format;
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Unit tests for the UTC Hibernate configuration.
+ */
+@RunWith(SpringRunner.class)
+@SpringBootTest(classes = EfwserviceApp.class)
+public class HibernateTimeZoneTest {
+
+    @Autowired
+    private DateTimeWrapperRepository dateTimeWrapperRepository;
+    @Autowired
+    private JdbcTemplate jdbcTemplate;
+
+    private DateTimeWrapper dateTimeWrapper;
+    private DateTimeFormatter dateTimeFormatter;
+    private DateTimeFormatter timeFormatter;
+    private DateTimeFormatter dateFormatter;
+
+    @Before
+    public void setup() {
+        dateTimeWrapper = new DateTimeWrapper();
+        dateTimeWrapper.setInstant(Instant.parse("2014-11-12T05:50:00.0Z"));
+        dateTimeWrapper.setLocalDateTime(LocalDateTime.parse("2014-11-12T07:50:00.0"));
+        dateTimeWrapper.setOffsetDateTime(OffsetDateTime.parse("2011-12-14T08:30:00.0Z"));
+        dateTimeWrapper.setZonedDateTime(ZonedDateTime.parse("2011-12-14T08:30:00.0Z"));
+        dateTimeWrapper.setLocalTime(LocalTime.parse("14:30:00"));
+        dateTimeWrapper.setOffsetTime(OffsetTime.parse("14:30:00+02:00"));
+        dateTimeWrapper.setLocalDate(LocalDate.parse("2016-09-10"));
+
+        dateTimeFormatter = DateTimeFormatter
+            .ofPattern("yyyy-MM-dd HH:mm:ss.S")
+            .withZone(ZoneId.of("UTC"));
+
+        timeFormatter = DateTimeFormatter
+            .ofPattern("HH:mm:ss")
+            .withZone(ZoneId.of("UTC"));
+
+        dateFormatter = DateTimeFormatter
+            .ofPattern("yyyy-MM-dd");
+    }
+
+    @Test
+    @Transactional
+    public void storeInstantWithUtcConfigShouldBeStoredOnGMTTimeZone() {
+        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);
+
+        String request = generateSqlRequest("instant", dateTimeWrapper.getId());
+        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);
+        String expectedValue = dateTimeFormatter.format(dateTimeWrapper.getInstant());
+
+        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);
+    }
+
+    @Test
+    @Transactional
+    public void storeLocalDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {
+        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);
+
+        String request = generateSqlRequest("local_date_time", dateTimeWrapper.getId());
+        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);
+        String expectedValue = dateTimeWrapper
+            .getLocalDateTime()
+            .atZone(ZoneId.systemDefault())
+            .format(dateTimeFormatter);
+
+        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);
+    }
+
+    @Test
+    @Transactional
+    public void storeOffsetDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {
+        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);
+
+        String request = generateSqlRequest("offset_date_time", dateTimeWrapper.getId());
+        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);
+        String expectedValue = dateTimeWrapper
+            .getOffsetDateTime()
+            .format(dateTimeFormatter);
+
+        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);
+    }
+
+    @Test
+    @Transactional
+    public void storeZoneDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {
+        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);
+
+        String request = generateSqlRequest("zoned_date_time", dateTimeWrapper.getId());
+        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);
+        String expectedValue = dateTimeWrapper
+            .getZonedDateTime()
+            .format(dateTimeFormatter);
+
+        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);
+    }
+
+    @Test
+    @Transactional
+    public void storeLocalTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value() {
+        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);
+
+        String request = generateSqlRequest("local_time", dateTimeWrapper.getId());
+        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);
+        String expectedValue = dateTimeWrapper
+            .getLocalTime()
+            .atDate(LocalDate.of(1970, Month.JANUARY, 1))
+            .atZone(ZoneId.systemDefault())
+            .format(timeFormatter);
+
+        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);
+    }
+
+    @Test
+    @Transactional
+    public void storeOffsetTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value() {
+        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);
+
+        String request = generateSqlRequest("offset_time", dateTimeWrapper.getId());
+        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);
+        String expectedValue = dateTimeWrapper
+            .getOffsetTime()
+            .toLocalTime()
+            .atDate(LocalDate.of(1970, Month.JANUARY, 1))
+            .atZone(ZoneId.systemDefault())
+            .format(timeFormatter);
+
+        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);
+    }
+
+    @Test
+    @Transactional
+    public void storeLocalDateWithUtcConfigShouldBeStoredWithoutTransformation() {
+        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);
+
+        String request = generateSqlRequest("local_date", dateTimeWrapper.getId());
+        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);
+        String expectedValue = dateTimeWrapper
+            .getLocalDate()
+            .format(dateFormatter);
+
+        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);
+    }
+
+    private String generateSqlRequest(String fieldName, long id) {
+        return format("SELECT %s FROM jhi_date_time_wrapper where id=%d", fieldName, id);
+    }
+
+    private void assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(SqlRowSet sqlRowSet, String expectedValue) {
+        while (sqlRowSet.next()) {
+            String dbValue = sqlRowSet.getString(1);
+
+            assertThat(dbValue).isNotNull();
+            assertThat(dbValue).isEqualTo(expectedValue);
+        }
+    }
+}
Index: src/test/java/de/iso/apps/cucumber/CucumberContextConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/cucumber/CucumberContextConfiguration.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/cucumber/CucumberContextConfiguration.java	(date 1552872226000)
@@ -0,0 +1,20 @@
+package de.iso.apps.cucumber;
+
+import de.iso.apps.EfwserviceApp;
+import cucumber.api.java.Before;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.test.context.ContextConfiguration;
+import org.springframework.test.context.web.WebAppConfiguration;
+
+@SpringBootTest
+@WebAppConfiguration
+@ContextConfiguration(classes = EfwserviceApp.class)
+public class CucumberContextConfiguration {
+
+    @Before
+    public void setup_cucumber_spring_context(){
+        // Dummy method so cucumber will recognize this class as glue
+        // and use its context configuration.
+    }
+
+}
Index: src/test/java/de/iso/apps/cucumber/CucumberTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/cucumber/CucumberTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/cucumber/CucumberTest.java	(date 1552872226000)
@@ -0,0 +1,13 @@
+package de.iso.apps.cucumber;
+
+import org.junit.runner.RunWith;
+
+
+import cucumber.api.CucumberOptions;
+import cucumber.api.junit.Cucumber;
+
+@RunWith(Cucumber.class)
+@CucumberOptions(plugin = "pretty", features = "src/test/features")
+public class CucumberTest  {
+
+}
Index: src/test/java/de/iso/apps/cucumber/stepdefs/StepDefs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/cucumber/stepdefs/StepDefs.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/cucumber/stepdefs/StepDefs.java	(date 1552872226000)
@@ -0,0 +1,9 @@
+package de.iso.apps.cucumber.stepdefs;
+
+import org.springframework.test.web.servlet.ResultActions;
+
+public abstract class StepDefs {
+
+    protected ResultActions actions;
+
+}
Index: src/test/java/de/iso/apps/repository/timezone/DateTimeWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/repository/timezone/DateTimeWrapper.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/repository/timezone/DateTimeWrapper.java	(date 1552872226000)
@@ -0,0 +1,132 @@
+package de.iso.apps.repository.timezone;
+
+import javax.persistence.*;
+import java.io.Serializable;
+import java.time.*;
+import java.util.Objects;
+
+@Entity
+@Table(name = "jhi_date_time_wrapper")
+public class DateTimeWrapper implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequenceGenerator")
+    @SequenceGenerator(name = "sequenceGenerator")
+    private Long id;
+
+    @Column(name = "instant")
+    private Instant instant;
+
+    @Column(name = "local_date_time")
+    private LocalDateTime localDateTime;
+
+    @Column(name = "offset_date_time")
+    private OffsetDateTime offsetDateTime;
+
+    @Column(name = "zoned_date_time")
+    private ZonedDateTime zonedDateTime;
+
+    @Column(name = "local_time")
+    private LocalTime localTime;
+
+    @Column(name = "offset_time")
+    private OffsetTime offsetTime;
+
+    @Column(name = "local_date")
+    private LocalDate localDate;
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public Instant getInstant() {
+        return instant;
+    }
+
+    public void setInstant(Instant instant) {
+        this.instant = instant;
+    }
+
+    public LocalDateTime getLocalDateTime() {
+        return localDateTime;
+    }
+
+    public void setLocalDateTime(LocalDateTime localDateTime) {
+        this.localDateTime = localDateTime;
+    }
+
+    public OffsetDateTime getOffsetDateTime() {
+        return offsetDateTime;
+    }
+
+    public void setOffsetDateTime(OffsetDateTime offsetDateTime) {
+        this.offsetDateTime = offsetDateTime;
+    }
+
+    public ZonedDateTime getZonedDateTime() {
+        return zonedDateTime;
+    }
+
+    public void setZonedDateTime(ZonedDateTime zonedDateTime) {
+        this.zonedDateTime = zonedDateTime;
+    }
+
+    public LocalTime getLocalTime() {
+        return localTime;
+    }
+
+    public void setLocalTime(LocalTime localTime) {
+        this.localTime = localTime;
+    }
+
+    public OffsetTime getOffsetTime() {
+        return offsetTime;
+    }
+
+    public void setOffsetTime(OffsetTime offsetTime) {
+        this.offsetTime = offsetTime;
+    }
+
+    public LocalDate getLocalDate() {
+        return localDate;
+    }
+
+    public void setLocalDate(LocalDate localDate) {
+        this.localDate = localDate;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) {
+            return true;
+        }
+        if (o == null || getClass() != o.getClass()) {
+            return false;
+        }
+
+        DateTimeWrapper dateTimeWrapper = (DateTimeWrapper) o;
+        return !(dateTimeWrapper.getId() == null || getId() == null) && Objects.equals(getId(), dateTimeWrapper.getId());
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hashCode(getId());
+    }
+
+    @Override
+    public String toString() {
+        return "TimeZoneTest{" +
+            "id=" + id +
+            ", instant=" + instant +
+            ", localDateTime=" + localDateTime +
+            ", offsetDateTime=" + offsetDateTime +
+            ", zonedDateTime=" + zonedDateTime +
+            '}';
+    }
+}
Index: src/test/java/de/iso/apps/repository/timezone/DateTimeWrapperRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/repository/timezone/DateTimeWrapperRepository.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/repository/timezone/DateTimeWrapperRepository.java	(date 1552872226000)
@@ -0,0 +1,12 @@
+package de.iso.apps.repository.timezone;
+
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+/**
+ * Spring Data JPA repository for the DateTimeWrapper entity.
+ */
+@Repository
+public interface DateTimeWrapperRepository extends JpaRepository<DateTimeWrapper, Long> {
+
+}
Index: src/test/java/de/iso/apps/security/SecurityUtilsUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/security/SecurityUtilsUnitTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/security/SecurityUtilsUnitTest.java	(date 1552872226000)
@@ -0,0 +1,73 @@
+package de.iso.apps.security;
+
+import org.junit.Test;
+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.security.core.context.SecurityContext;
+import org.springframework.security.core.context.SecurityContextHolder;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Optional;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Test class for the SecurityUtils utility class.
+ *
+ * @see SecurityUtils
+ */
+public class SecurityUtilsUnitTest {
+
+    @Test
+    public void testgetCurrentUserLogin() {
+        SecurityContext securityContext = SecurityContextHolder.createEmptyContext();
+        securityContext.setAuthentication(new UsernamePasswordAuthenticationToken("admin", "admin"));
+        SecurityContextHolder.setContext(securityContext);
+        Optional<String> login = SecurityUtils.getCurrentUserLogin();
+        assertThat(login).contains("admin");
+    }
+
+    @Test
+    public void testgetCurrentUserJWT() {
+        SecurityContext securityContext = SecurityContextHolder.createEmptyContext();
+        securityContext.setAuthentication(new UsernamePasswordAuthenticationToken("admin", "token"));
+        SecurityContextHolder.setContext(securityContext);
+        Optional<String> jwt = SecurityUtils.getCurrentUserJWT();
+        assertThat(jwt).contains("token");
+    }
+
+    @Test
+    public void testIsAuthenticated() {
+        SecurityContext securityContext = SecurityContextHolder.createEmptyContext();
+        securityContext.setAuthentication(new UsernamePasswordAuthenticationToken("admin", "admin"));
+        SecurityContextHolder.setContext(securityContext);
+        boolean isAuthenticated = SecurityUtils.isAuthenticated();
+        assertThat(isAuthenticated).isTrue();
+    }
+
+    @Test
+    public void testAnonymousIsNotAuthenticated() {
+        SecurityContext securityContext = SecurityContextHolder.createEmptyContext();
+        Collection<GrantedAuthority> authorities = new ArrayList<>();
+        authorities.add(new SimpleGrantedAuthority(AuthoritiesConstants.ANONYMOUS));
+        securityContext.setAuthentication(new UsernamePasswordAuthenticationToken("anonymous", "anonymous", authorities));
+        SecurityContextHolder.setContext(securityContext);
+        boolean isAuthenticated = SecurityUtils.isAuthenticated();
+        assertThat(isAuthenticated).isFalse();
+    }
+
+    @Test
+    public void testIsCurrentUserInRole() {
+        SecurityContext securityContext = SecurityContextHolder.createEmptyContext();
+        Collection<GrantedAuthority> authorities = new ArrayList<>();
+        authorities.add(new SimpleGrantedAuthority(AuthoritiesConstants.USER));
+        securityContext.setAuthentication(new UsernamePasswordAuthenticationToken("user", "user", authorities));
+        SecurityContextHolder.setContext(securityContext);
+
+        assertThat(SecurityUtils.isCurrentUserInRole(AuthoritiesConstants.USER)).isTrue();
+        assertThat(SecurityUtils.isCurrentUserInRole(AuthoritiesConstants.ADMIN)).isFalse();
+    }
+
+}
Index: src/test/java/de/iso/apps/security/jwt/JWTFilterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/security/jwt/JWTFilterTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/security/jwt/JWTFilterTest.java	(date 1552872226000)
@@ -0,0 +1,115 @@
+package de.iso.apps.security.jwt;
+
+import de.iso.apps.security.AuthoritiesConstants;
+import io.github.jhipster.config.JHipsterProperties;
+import io.jsonwebtoken.io.Decoders;
+import io.jsonwebtoken.security.Keys;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.springframework.http.HttpStatus;
+import org.springframework.mock.web.MockFilterChain;
+import org.springframework.mock.web.MockHttpServletRequest;
+import org.springframework.mock.web.MockHttpServletResponse;
+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.security.core.context.SecurityContextHolder;
+import org.springframework.test.util.ReflectionTestUtils;
+
+import java.util.Collections;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+public class JWTFilterTest {
+
+    private TokenProvider tokenProvider;
+
+    private JWTFilter jwtFilter;
+
+    @Before
+    public void setup() {
+        JHipsterProperties jHipsterProperties = new JHipsterProperties();
+        tokenProvider = new TokenProvider(jHipsterProperties);
+        ReflectionTestUtils.setField(tokenProvider, "key",
+            Keys.hmacShaKeyFor(Decoders.BASE64
+                .decode("fd54a45s65fds737b9aafcb3412e07ed99b267f33413274720ddbb7f6c5e64e9f14075f2d7ed041592f0b7657baf8")));
+
+        ReflectionTestUtils.setField(tokenProvider, "tokenValidityInMilliseconds", 60000);
+        jwtFilter = new JWTFilter(tokenProvider);
+        SecurityContextHolder.getContext().setAuthentication(null);
+    }
+
+    @Test
+    public void testJWTFilter() throws Exception {
+        UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(
+            "test-user",
+            "test-password",
+            Collections.singletonList(new SimpleGrantedAuthority(AuthoritiesConstants.USER))
+        );
+        String jwt = tokenProvider.createToken(authentication, false);
+        MockHttpServletRequest request = new MockHttpServletRequest();
+        request.addHeader(JWTFilter.AUTHORIZATION_HEADER, "Bearer " + jwt);
+        request.setRequestURI("/api/test");
+        MockHttpServletResponse response = new MockHttpServletResponse();
+        MockFilterChain filterChain = new MockFilterChain();
+        jwtFilter.doFilter(request, response, filterChain);
+        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());
+        assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("test-user");
+        assertThat(SecurityContextHolder.getContext().getAuthentication().getCredentials().toString()).isEqualTo(jwt);
+    }
+
+    @Test
+    public void testJWTFilterInvalidToken() throws Exception {
+        String jwt = "wrong_jwt";
+        MockHttpServletRequest request = new MockHttpServletRequest();
+        request.addHeader(JWTFilter.AUTHORIZATION_HEADER, "Bearer " + jwt);
+        request.setRequestURI("/api/test");
+        MockHttpServletResponse response = new MockHttpServletResponse();
+        MockFilterChain filterChain = new MockFilterChain();
+        jwtFilter.doFilter(request, response, filterChain);
+        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());
+        assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull();
+    }
+
+    @Test
+    public void testJWTFilterMissingAuthorization() throws Exception {
+        MockHttpServletRequest request = new MockHttpServletRequest();
+        request.setRequestURI("/api/test");
+        MockHttpServletResponse response = new MockHttpServletResponse();
+        MockFilterChain filterChain = new MockFilterChain();
+        jwtFilter.doFilter(request, response, filterChain);
+        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());
+        assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull();
+    }
+
+    @Test
+    public void testJWTFilterMissingToken() throws Exception {
+        MockHttpServletRequest request = new MockHttpServletRequest();
+        request.addHeader(JWTFilter.AUTHORIZATION_HEADER, "Bearer ");
+        request.setRequestURI("/api/test");
+        MockHttpServletResponse response = new MockHttpServletResponse();
+        MockFilterChain filterChain = new MockFilterChain();
+        jwtFilter.doFilter(request, response, filterChain);
+        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());
+        assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull();
+    }
+
+    @Test
+    public void testJWTFilterWrongScheme() throws Exception {
+        UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(
+            "test-user",
+            "test-password",
+            Collections.singletonList(new SimpleGrantedAuthority(AuthoritiesConstants.USER))
+        );
+        String jwt = tokenProvider.createToken(authentication, false);
+        MockHttpServletRequest request = new MockHttpServletRequest();
+        request.addHeader(JWTFilter.AUTHORIZATION_HEADER, "Basic " + jwt);
+        request.setRequestURI("/api/test");
+        MockHttpServletResponse response = new MockHttpServletResponse();
+        MockFilterChain filterChain = new MockFilterChain();
+        jwtFilter.doFilter(request, response, filterChain);
+        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());
+        assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull();
+    }
+
+}
Index: src/test/java/de/iso/apps/security/jwt/TokenProviderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/security/jwt/TokenProviderTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/security/jwt/TokenProviderTest.java	(date 1552872226000)
@@ -0,0 +1,111 @@
+package de.iso.apps.security.jwt;
+
+import de.iso.apps.security.AuthoritiesConstants;
+
+import java.security.Key;
+import java.util.*;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.mockito.Mockito;
+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.test.util.ReflectionTestUtils;
+
+import io.github.jhipster.config.JHipsterProperties;
+import io.jsonwebtoken.Jwts;
+import io.jsonwebtoken.SignatureAlgorithm;
+import io.jsonwebtoken.io.Decoders;
+import io.jsonwebtoken.security.Keys;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+public class TokenProviderTest {
+
+    private final long ONE_MINUTE = 60000;
+    private Key key;
+    private JHipsterProperties jHipsterProperties;
+    private TokenProvider tokenProvider;
+
+    @Before
+    public void setup() {
+        jHipsterProperties = Mockito.mock(JHipsterProperties.class);
+        tokenProvider = new TokenProvider(jHipsterProperties);
+        key = Keys.hmacShaKeyFor(Decoders.BASE64
+            .decode("fd54a45s65fds737b9aafcb3412e07ed99b267f33413274720ddbb7f6c5e64e9f14075f2d7ed041592f0b7657baf8"));
+
+        ReflectionTestUtils.setField(tokenProvider, "key", key);
+        ReflectionTestUtils.setField(tokenProvider, "tokenValidityInMilliseconds", ONE_MINUTE);
+    }
+
+    @Test
+    public void testReturnFalseWhenJWThasInvalidSignature() {
+        boolean isTokenValid = tokenProvider.validateToken(createTokenWithDifferentSignature());
+
+        assertThat(isTokenValid).isEqualTo(false);
+    }
+
+    @Test
+    public void testReturnFalseWhenJWTisMalformed() {
+        Authentication authentication = createAuthentication();
+        String token = tokenProvider.createToken(authentication, false);
+        String invalidToken = token.substring(1);
+        boolean isTokenValid = tokenProvider.validateToken(invalidToken);
+
+        assertThat(isTokenValid).isEqualTo(false);
+    }
+
+    @Test
+    public void testReturnFalseWhenJWTisExpired() {
+        ReflectionTestUtils.setField(tokenProvider, "tokenValidityInMilliseconds", -ONE_MINUTE);
+
+        Authentication authentication = createAuthentication();
+        String token = tokenProvider.createToken(authentication, false);
+
+        boolean isTokenValid = tokenProvider.validateToken(token);
+
+        assertThat(isTokenValid).isEqualTo(false);
+    }
+
+    @Test
+    public void testReturnFalseWhenJWTisUnsupported() {
+        String unsupportedToken = createUnsupportedToken();
+
+        boolean isTokenValid = tokenProvider.validateToken(unsupportedToken);
+
+        assertThat(isTokenValid).isEqualTo(false);
+    }
+
+    @Test
+    public void testReturnFalseWhenJWTisInvalid() {
+        boolean isTokenValid = tokenProvider.validateToken("");
+
+        assertThat(isTokenValid).isEqualTo(false);
+    }
+
+    private Authentication createAuthentication() {
+        Collection<GrantedAuthority> authorities = new ArrayList<>();
+        authorities.add(new SimpleGrantedAuthority(AuthoritiesConstants.ANONYMOUS));
+        return new UsernamePasswordAuthenticationToken("anonymous", "anonymous", authorities);
+    }
+
+    private String createUnsupportedToken() {
+        return Jwts.builder()
+            .setPayload("payload")
+            .signWith(key, SignatureAlgorithm.HS512)
+            .compact();
+    }
+
+    private String createTokenWithDifferentSignature() {
+        Key otherKey = Keys.hmacShaKeyFor(Decoders.BASE64
+            .decode("Xfd54a45s65fds737b9aafcb3412e07ed99b267f33413274720ddbb7f6c5e64e9f14075f2d7ed041592f0b7657baf8"));
+
+        return Jwts.builder()
+            .setSubject("anonymous")
+            .signWith(otherKey, SignatureAlgorithm.HS512)
+            .setExpiration(new Date(new Date().getTime() + ONE_MINUTE))
+            .compact();
+    }
+}
Index: src/test/java/de/iso/apps/web/rest/LogsResourceIntTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/web/rest/LogsResourceIntTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/web/rest/LogsResourceIntTest.java	(date 1552872226000)
@@ -0,0 +1,66 @@
+package de.iso.apps.web.rest;
+
+import de.iso.apps.EfwserviceApp;
+import de.iso.apps.web.rest.vm.LoggerVM;
+import ch.qos.logback.classic.AsyncAppender;
+import ch.qos.logback.classic.LoggerContext;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.slf4j.LoggerFactory;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.http.MediaType;
+import org.springframework.test.context.junit4.SpringRunner;
+import org.springframework.test.web.servlet.MockMvc;
+import org.springframework.test.web.servlet.setup.MockMvcBuilders;
+
+import static org.assertj.core.api.Assertions.assertThat;
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.put;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
+
+/**
+ * Test class for the LogsResource REST controller.
+ *
+ * @see LogsResource
+ */
+@RunWith(SpringRunner.class)
+@SpringBootTest(classes = EfwserviceApp.class)
+public class LogsResourceIntTest {
+
+    private MockMvc restLogsMockMvc;
+
+    @Before
+    public void setup() {
+        LogsResource logsResource = new LogsResource();
+        this.restLogsMockMvc = MockMvcBuilders
+            .standaloneSetup(logsResource)
+            .build();
+    }
+
+    @Test
+    public void getAllLogs() throws Exception {
+        restLogsMockMvc.perform(get("/management/logs"))
+            .andExpect(status().isOk())
+            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE));
+    }
+
+    @Test
+    public void changeLogs() throws Exception {
+        LoggerVM logger = new LoggerVM();
+        logger.setLevel("INFO");
+        logger.setName("ROOT");
+
+        restLogsMockMvc.perform(put("/management/logs")
+            .contentType(TestUtil.APPLICATION_JSON_UTF8)
+            .content(TestUtil.convertObjectToJsonBytes(logger)))
+            .andExpect(status().isNoContent());
+    }
+
+    @Test
+    public void testLogstashAppender() {
+        LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
+        assertThat(context.getLogger("ROOT").getAppender("ASYNC_LOGSTASH")).isInstanceOf(AsyncAppender.class);
+    }
+}
Index: src/test/java/de/iso/apps/web/rest/TestUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/web/rest/TestUtil.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/web/rest/TestUtil.java	(date 1552872226000)
@@ -0,0 +1,141 @@
+package de.iso.apps.web.rest;
+
+import com.fasterxml.jackson.annotation.JsonInclude;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
+import org.hamcrest.Description;
+import org.hamcrest.TypeSafeDiagnosingMatcher;
+import org.springframework.format.datetime.standard.DateTimeFormatterRegistrar;
+import org.springframework.format.support.DefaultFormattingConversionService;
+import org.springframework.format.support.FormattingConversionService;
+import org.springframework.http.MediaType;
+
+import java.io.IOException;
+import java.nio.charset.StandardCharsets;
+import java.time.ZonedDateTime;
+import java.time.format.DateTimeParseException;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * Utility class for testing REST controllers.
+ */
+public final class TestUtil {
+
+    private static final ObjectMapper mapper = createObjectMapper();
+
+    /** MediaType for JSON UTF8 */
+    public static final MediaType APPLICATION_JSON_UTF8 = new MediaType(
+            MediaType.APPLICATION_JSON.getType(),
+            MediaType.APPLICATION_JSON.getSubtype(), StandardCharsets.UTF_8);
+
+
+    private static ObjectMapper createObjectMapper() {
+        ObjectMapper mapper = new ObjectMapper();
+        mapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);
+        mapper.registerModule(new JavaTimeModule());
+        return mapper;
+    }
+
+    /**
+     * Convert an object to JSON byte array.
+     *
+     * @param object
+     *            the object to convert
+     * @return the JSON byte array
+     * @throws IOException
+     */
+    public static byte[] convertObjectToJsonBytes(Object object)
+            throws IOException {
+        return mapper.writeValueAsBytes(object);
+    }
+
+    /**
+     * Create a byte array with a specific size filled with specified data.
+     *
+     * @param size the size of the byte array
+     * @param data the data to put in the byte array
+     * @return the JSON byte array
+     */
+    public static byte[] createByteArray(int size, String data) {
+        byte[] byteArray = new byte[size];
+        for (int i = 0; i < size; i++) {
+            byteArray[i] = Byte.parseByte(data, 2);
+        }
+        return byteArray;
+    }
+
+    /**
+     * A matcher that tests that the examined string represents the same instant as the reference datetime.
+     */
+    public static class ZonedDateTimeMatcher extends TypeSafeDiagnosingMatcher<String> {
+
+        private final ZonedDateTime date;
+
+        public ZonedDateTimeMatcher(ZonedDateTime date) {
+            this.date = date;
+        }
+
+        @Override
+        protected boolean matchesSafely(String item, Description mismatchDescription) {
+            try {
+                if (!date.isEqual(ZonedDateTime.parse(item))) {
+                    mismatchDescription.appendText("was ").appendValue(item);
+                    return false;
+                }
+                return true;
+            } catch (DateTimeParseException e) {
+                mismatchDescription.appendText("was ").appendValue(item)
+                    .appendText(", which could not be parsed as a ZonedDateTime");
+                return false;
+            }
+
+        }
+
+        @Override
+        public void describeTo(Description description) {
+            description.appendText("a String representing the same Instant as ").appendValue(date);
+        }
+    }
+
+    /**
+     * Creates a matcher that matches when the examined string reprensents the same instant as the reference datetime
+     * @param date the reference datetime against which the examined string is checked
+     */
+    public static ZonedDateTimeMatcher sameInstant(ZonedDateTime date) {
+        return new ZonedDateTimeMatcher(date);
+    }
+
+    /**
+     * Verifies the equals/hashcode contract on the domain object.
+     */
+    public static <T> void equalsVerifier(Class<T> clazz) throws Exception {
+        T domainObject1 = clazz.getConstructor().newInstance();
+        assertThat(domainObject1.toString()).isNotNull();
+        assertThat(domainObject1).isEqualTo(domainObject1);
+        assertThat(domainObject1.hashCode()).isEqualTo(domainObject1.hashCode());
+        // Test with an instance of another class
+        Object testOtherObject = new Object();
+        assertThat(domainObject1).isNotEqualTo(testOtherObject);
+        assertThat(domainObject1).isNotEqualTo(null);
+        // Test with an instance of the same class
+        T domainObject2 = clazz.getConstructor().newInstance();
+        assertThat(domainObject1).isNotEqualTo(domainObject2);
+        // HashCodes are equals because the objects are not persisted yet
+        assertThat(domainObject1.hashCode()).isEqualTo(domainObject2.hashCode());
+    }
+
+    /**
+     * Create a FormattingConversionService which use ISO date format, instead of the localized one.
+     * @return the FormattingConversionService
+     */
+    public static FormattingConversionService createFormattingConversionService() {
+        DefaultFormattingConversionService dfcs = new DefaultFormattingConversionService ();
+        DateTimeFormatterRegistrar registrar = new DateTimeFormatterRegistrar();
+        registrar.setUseIsoFormat(true);
+        registrar.registerFormatters(dfcs);
+        return dfcs;
+    }
+
+    private TestUtil() {}
+}
Index: src/test/java/de/iso/apps/web/rest/errors/ExceptionTranslatorIntTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/web/rest/errors/ExceptionTranslatorIntTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/web/rest/errors/ExceptionTranslatorIntTest.java	(date 1552872226000)
@@ -0,0 +1,150 @@
+package de.iso.apps.web.rest.errors;
+
+import de.iso.apps.EfwserviceApp;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.http.MediaType;
+import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
+import org.springframework.test.context.junit4.SpringRunner;
+import org.springframework.test.web.servlet.MockMvc;
+import org.springframework.test.web.servlet.setup.MockMvcBuilders;
+
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
+
+/**
+ * Test class for the ExceptionTranslator controller advice.
+ *
+ * @see ExceptionTranslator
+ */
+@RunWith(SpringRunner.class)
+@SpringBootTest(classes = EfwserviceApp.class)
+public class ExceptionTranslatorIntTest {
+
+    @Autowired
+    private ExceptionTranslatorTestController controller;
+
+    @Autowired
+    private ExceptionTranslator exceptionTranslator;
+
+    @Autowired
+    private MappingJackson2HttpMessageConverter jacksonMessageConverter;
+
+    private MockMvc mockMvc;
+
+    @Before
+    public void setup() {
+        mockMvc = MockMvcBuilders.standaloneSetup(controller)
+            .setControllerAdvice(exceptionTranslator)
+            .setMessageConverters(jacksonMessageConverter)
+            .build();
+    }
+
+    @Test
+    public void testConcurrencyFailure() throws Exception {
+        mockMvc.perform(get("/test/concurrency-failure"))
+            .andExpect(status().isConflict())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value(ErrorConstants.ERR_CONCURRENCY_FAILURE));
+    }
+
+    @Test
+    public void testMethodArgumentNotValid() throws Exception {
+         mockMvc.perform(post("/test/method-argument").content("{}").contentType(MediaType.APPLICATION_JSON))
+             .andExpect(status().isBadRequest())
+             .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+             .andExpect(jsonPath("$.message").value(ErrorConstants.ERR_VALIDATION))
+             .andExpect(jsonPath("$.fieldErrors.[0].objectName").value("testDTO"))
+             .andExpect(jsonPath("$.fieldErrors.[0].field").value("test"))
+             .andExpect(jsonPath("$.fieldErrors.[0].message").value("NotNull"));
+    }
+
+    @Test
+    public void testParameterizedError() throws Exception {
+        mockMvc.perform(get("/test/parameterized-error"))
+            .andExpect(status().isBadRequest())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("test parameterized error"))
+            .andExpect(jsonPath("$.params.param0").value("param0_value"))
+            .andExpect(jsonPath("$.params.param1").value("param1_value"));
+    }
+
+    @Test
+    public void testParameterizedError2() throws Exception {
+        mockMvc.perform(get("/test/parameterized-error2"))
+            .andExpect(status().isBadRequest())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("test parameterized error"))
+            .andExpect(jsonPath("$.params.foo").value("foo_value"))
+            .andExpect(jsonPath("$.params.bar").value("bar_value"));
+    }
+
+    @Test
+    public void testMissingServletRequestPartException() throws Exception {
+        mockMvc.perform(get("/test/missing-servlet-request-part"))
+            .andExpect(status().isBadRequest())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("error.http.400"));
+    }
+
+    @Test
+    public void testMissingServletRequestParameterException() throws Exception {
+        mockMvc.perform(get("/test/missing-servlet-request-parameter"))
+            .andExpect(status().isBadRequest())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("error.http.400"));
+    }
+
+    @Test
+    public void testAccessDenied() throws Exception {
+        mockMvc.perform(get("/test/access-denied"))
+            .andExpect(status().isForbidden())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("error.http.403"))
+            .andExpect(jsonPath("$.detail").value("test access denied!"));
+    }
+
+    @Test
+    public void testUnauthorized() throws Exception {
+        mockMvc.perform(get("/test/unauthorized"))
+            .andExpect(status().isUnauthorized())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("error.http.401"))
+            .andExpect(jsonPath("$.path").value("/test/unauthorized"))
+            .andExpect(jsonPath("$.detail").value("test authentication failed!"));
+    }
+
+    @Test
+    public void testMethodNotSupported() throws Exception {
+        mockMvc.perform(post("/test/access-denied"))
+            .andExpect(status().isMethodNotAllowed())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("error.http.405"))
+            .andExpect(jsonPath("$.detail").value("Request method 'POST' not supported"));
+    }
+
+    @Test
+    public void testExceptionWithResponseStatus() throws Exception {
+        mockMvc.perform(get("/test/response-status"))
+            .andExpect(status().isBadRequest())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("error.http.400"))
+            .andExpect(jsonPath("$.title").value("test response status"));
+    }
+
+    @Test
+    public void testInternalServerError() throws Exception {
+        mockMvc.perform(get("/test/internal-server-error"))
+            .andExpect(status().isInternalServerError())
+            .andExpect(content().contentType(MediaType.APPLICATION_PROBLEM_JSON))
+            .andExpect(jsonPath("$.message").value("error.http.500"))
+            .andExpect(jsonPath("$.title").value("Internal Server Error"));
+    }
+
+}
Index: src/test/java/de/iso/apps/web/rest/errors/ExceptionTranslatorTestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/web/rest/errors/ExceptionTranslatorTestController.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/web/rest/errors/ExceptionTranslatorTestController.java	(date 1552872226000)
@@ -0,0 +1,86 @@
+package de.iso.apps.web.rest.errors;
+
+import org.springframework.dao.ConcurrencyFailureException;
+import org.springframework.http.HttpStatus;
+import org.springframework.security.access.AccessDeniedException;
+import org.springframework.security.authentication.BadCredentialsException;
+import org.springframework.web.bind.annotation.*;
+
+import javax.validation.Valid;
+import javax.validation.constraints.NotNull;
+import java.util.HashMap;
+import java.util.Map;
+
+@RestController
+public class ExceptionTranslatorTestController {
+
+    @GetMapping("/test/concurrency-failure")
+    public void concurrencyFailure() {
+        throw new ConcurrencyFailureException("test concurrency failure");
+    }
+
+    @PostMapping("/test/method-argument")
+    public void methodArgument(@Valid @RequestBody TestDTO testDTO) {
+    }
+
+    @GetMapping("/test/parameterized-error")
+    public void parameterizedError() {
+        throw new CustomParameterizedException("test parameterized error", "param0_value", "param1_value");
+    }
+
+    @GetMapping("/test/parameterized-error2")
+    public void parameterizedError2() {
+        Map<String, Object> params = new HashMap<>();
+        params.put("foo", "foo_value");
+        params.put("bar", "bar_value");
+        throw new CustomParameterizedException("test parameterized error", params);
+    }
+
+    @GetMapping("/test/missing-servlet-request-part")
+    public void missingServletRequestPartException(@RequestPart String part) {
+    }
+
+    @GetMapping("/test/missing-servlet-request-parameter")
+    public void missingServletRequestParameterException(@RequestParam String param) {
+    }
+
+    @GetMapping("/test/access-denied")
+    public void accessdenied() {
+        throw new AccessDeniedException("test access denied!");
+    }
+
+    @GetMapping("/test/unauthorized")
+    public void unauthorized() {
+        throw new BadCredentialsException("test authentication failed!");
+    }
+
+    @GetMapping("/test/response-status")
+    public void exceptionWithReponseStatus() {
+        throw new TestResponseStatusException();
+    }
+
+    @GetMapping("/test/internal-server-error")
+    public void internalServerError() {
+        throw new RuntimeException();
+    }
+
+    public static class TestDTO {
+
+        @NotNull
+        private String test;
+
+        public String getTest() {
+            return test;
+        }
+
+        public void setTest(String test) {
+            this.test = test;
+        }
+    }
+
+    @ResponseStatus(value = HttpStatus.BAD_REQUEST, reason = "test response status")
+    @SuppressWarnings("serial")
+    public static class TestResponseStatusException extends RuntimeException {
+    }
+
+}
Index: src/test/java/de/iso/apps/web/rest/util/PaginationUtilUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/de/iso/apps/web/rest/util/PaginationUtilUnitTest.java	(date 1552872226000)
+++ src/test/java/de/iso/apps/web/rest/util/PaginationUtilUnitTest.java	(date 1552872226000)
@@ -0,0 +1,158 @@
+package de.iso.apps.web.rest.util;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.junit.Test;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageImpl;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.http.HttpHeaders;
+
+/**
+ * Tests based on parsing algorithm in app/components/util/pagination-util.service.js
+ *
+ * @see PaginationUtil
+ */
+public class PaginationUtilUnitTest {
+
+    @Test
+    public void generatePaginationHttpHeadersTest() {
+        String baseUrl = "/api/_search/example";
+        List<String> content = new ArrayList<>();
+        Page<String> page = new PageImpl<>(content, PageRequest.of(6, 50), 400L);
+        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(page, baseUrl);
+        List<String> strHeaders = headers.get(HttpHeaders.LINK);
+        assertNotNull(strHeaders);
+        assertTrue(strHeaders.size() == 1);
+        String headerData = strHeaders.get(0);
+        assertTrue(headerData.split(",").length == 4);
+        String expectedData = "</api/_search/example?page=7&size=50>; rel=\"next\","
+                + "</api/_search/example?page=5&size=50>; rel=\"prev\","
+                + "</api/_search/example?page=7&size=50>; rel=\"last\","
+                + "</api/_search/example?page=0&size=50>; rel=\"first\"";
+        assertEquals(expectedData, headerData);
+        List<String> xTotalCountHeaders = headers.get("X-Total-Count");
+        assertTrue(xTotalCountHeaders.size() == 1);
+        assertTrue(Long.valueOf(xTotalCountHeaders.get(0)).equals(400L));
+    }
+
+    @Test
+    public void commaTest() {
+        String baseUrl = "/api/_search/example";
+        List<String> content = new ArrayList<>();
+        Page<String> page = new PageImpl<>(content);
+        String query = "Test1, test2";
+        HttpHeaders headers = PaginationUtil.generateSearchPaginationHttpHeaders(query, page, baseUrl);
+        List<String> strHeaders = headers.get(HttpHeaders.LINK);
+        assertNotNull(strHeaders);
+        assertTrue(strHeaders.size() == 1);
+        String headerData = strHeaders.get(0);
+        assertTrue(headerData.split(",").length == 2);
+        String expectedData = "</api/_search/example?page=0&size=0&query=Test1%2C+test2>; rel=\"last\","
+                + "</api/_search/example?page=0&size=0&query=Test1%2C+test2>; rel=\"first\"";
+        assertEquals(expectedData, headerData);
+        List<String> xTotalCountHeaders = headers.get("X-Total-Count");
+        assertTrue(xTotalCountHeaders.size() == 1);
+        assertTrue(Long.valueOf(xTotalCountHeaders.get(0)).equals(0L));
+    }
+
+    @Test
+    public void multiplePagesTest() {
+        String baseUrl = "/api/_search/example";
+        List<String> content = new ArrayList<>();
+
+        // Page 0
+        Page<String> page = new PageImpl<>(content, PageRequest.of(0, 50), 400L);
+        String query = "Test1, test2";
+        HttpHeaders headers = PaginationUtil.generateSearchPaginationHttpHeaders(query, page, baseUrl);
+        List<String> strHeaders = headers.get(HttpHeaders.LINK);
+        assertNotNull(strHeaders);
+        assertTrue(strHeaders.size() == 1);
+        String headerData = strHeaders.get(0);
+        assertTrue(headerData.split(",").length == 3);
+        String expectedData = "</api/_search/example?page=1&size=50&query=Test1%2C+test2>; rel=\"next\","
+                + "</api/_search/example?page=7&size=50&query=Test1%2C+test2>; rel=\"last\","
+                + "</api/_search/example?page=0&size=50&query=Test1%2C+test2>; rel=\"first\"";
+        assertEquals(expectedData, headerData);
+        List<String> xTotalCountHeaders = headers.get("X-Total-Count");
+        assertTrue(xTotalCountHeaders.size() == 1);
+        assertTrue(Long.valueOf(xTotalCountHeaders.get(0)).equals(400L));
+
+        // Page 1
+        page = new PageImpl<>(content, PageRequest.of(1, 50), 400L);
+        query = "Test1, test2";
+        headers = PaginationUtil.generateSearchPaginationHttpHeaders(query, page, baseUrl);
+        strHeaders = headers.get(HttpHeaders.LINK);
+        assertNotNull(strHeaders);
+        assertTrue(strHeaders.size() == 1);
+        headerData = strHeaders.get(0);
+        assertTrue(headerData.split(",").length == 4);
+        expectedData = "</api/_search/example?page=2&size=50&query=Test1%2C+test2>; rel=\"next\","
+                + "</api/_search/example?page=0&size=50&query=Test1%2C+test2>; rel=\"prev\","
+                + "</api/_search/example?page=7&size=50&query=Test1%2C+test2>; rel=\"last\","
+                + "</api/_search/example?page=0&size=50&query=Test1%2C+test2>; rel=\"first\"";
+        assertEquals(expectedData, headerData);
+        xTotalCountHeaders = headers.get("X-Total-Count");
+        assertTrue(xTotalCountHeaders.size() == 1);
+        assertTrue(Long.valueOf(xTotalCountHeaders.get(0)).equals(400L));
+
+        // Page 6
+        page = new PageImpl<>(content, PageRequest.of(6, 50), 400L);
+        headers = PaginationUtil.generateSearchPaginationHttpHeaders(query, page, baseUrl);
+        strHeaders = headers.get(HttpHeaders.LINK);
+        assertNotNull(strHeaders);
+        assertTrue(strHeaders.size() == 1);
+        headerData = strHeaders.get(0);
+        assertTrue(headerData.split(",").length == 4);
+        expectedData = "</api/_search/example?page=7&size=50&query=Test1%2C+test2>; rel=\"next\","
+                + "</api/_search/example?page=5&size=50&query=Test1%2C+test2>; rel=\"prev\","
+                + "</api/_search/example?page=7&size=50&query=Test1%2C+test2>; rel=\"last\","
+                + "</api/_search/example?page=0&size=50&query=Test1%2C+test2>; rel=\"first\"";
+        assertEquals(expectedData, headerData);
+        xTotalCountHeaders = headers.get("X-Total-Count");
+        assertTrue(xTotalCountHeaders.size() == 1);
+        assertTrue(Long.valueOf(xTotalCountHeaders.get(0)).equals(400L));
+
+        // Page 7
+        page = new PageImpl<>(content, PageRequest.of(7, 50), 400L);
+        headers = PaginationUtil.generateSearchPaginationHttpHeaders(query, page, baseUrl);
+        strHeaders = headers.get(HttpHeaders.LINK);
+        assertNotNull(strHeaders);
+        assertTrue(strHeaders.size() == 1);
+        headerData = strHeaders.get(0);
+        assertTrue(headerData.split(",").length == 3);
+        expectedData = "</api/_search/example?page=6&size=50&query=Test1%2C+test2>; rel=\"prev\","
+                + "</api/_search/example?page=7&size=50&query=Test1%2C+test2>; rel=\"last\","
+                + "</api/_search/example?page=0&size=50&query=Test1%2C+test2>; rel=\"first\"";
+        assertEquals(expectedData, headerData);
+    }
+
+    @Test
+    public void greaterSemicolonTest() {
+        String baseUrl = "/api/_search/example";
+        List<String> content = new ArrayList<>();
+        Page<String> page = new PageImpl<>(content);
+        String query = "Test>;test";
+        HttpHeaders headers = PaginationUtil.generateSearchPaginationHttpHeaders(query, page, baseUrl);
+        List<String> strHeaders = headers.get(HttpHeaders.LINK);
+        assertNotNull(strHeaders);
+        assertTrue(strHeaders.size() == 1);
+        String headerData = strHeaders.get(0);
+        assertTrue(headerData.split(",").length == 2);
+        String[] linksData = headerData.split(",");
+        assertTrue(linksData.length == 2);
+        assertTrue(linksData[0].split(">;").length == 2);
+        assertTrue(linksData[1].split(">;").length == 2);
+        String expectedData = "</api/_search/example?page=0&size=0&query=Test%3E%3Btest>; rel=\"last\","
+                + "</api/_search/example?page=0&size=0&query=Test%3E%3Btest>; rel=\"first\"";
+        assertEquals(expectedData, headerData);
+        List<String> xTotalCountHeaders = headers.get("X-Total-Count");
+        assertTrue(xTotalCountHeaders.size() == 1);
+        assertTrue(Long.valueOf(xTotalCountHeaders.get(0)).equals(0L));
+    }
+}
Index: src/test/resources/config/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/resources/config/application.yml	(date 1552872226000)
+++ src/test/resources/config/application.yml	(date 1552872226000)
@@ -0,0 +1,124 @@
+# ===================================================================
+# Spring Boot configuration.
+#
+# This configuration is used for unit/integration tests.
+#
+# More information on profiles: https://www.jhipster.tech/profiles/
+# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+# ===================================================================
+# Standard Spring Boot properties.
+# Full reference is available at:
+# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
+# ===================================================================
+
+eureka:
+    client:
+        enabled: false
+    instance:
+        appname: efwservice
+        instanceId: efwservice:${spring.application.instance-id:${random.value}}
+
+spring:
+    application:
+        name: efwservice
+    cache:
+        type: simple
+    cloud:
+        stream:
+            kafka:
+                binder:
+                    brokers: localhost
+                    zk-nodes: localhost
+            bindings:
+                output:
+                    destination: topic-jhipster
+    datasource:
+        type: com.zaxxer.hikari.HikariDataSource
+        url: jdbc:h2:mem:efwservice;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
+        name:
+        username:
+        password:
+        hikari:
+            auto-commit: false
+    jpa:
+        database-platform: io.github.jhipster.domain.util.FixedH2Dialect
+        database: H2
+        open-in-view: false
+        show-sql: false
+        hibernate:
+            ddl-auto: none
+            naming:
+                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
+                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
+        properties:
+            hibernate.id.new_generator_mappings: true
+            hibernate.connection.provider_disables_autocommit: true
+            hibernate.cache.use_second_level_cache: false
+            hibernate.cache.use_query_cache: false
+            hibernate.generate_statistics: false
+            hibernate.hbm2ddl.auto: validate
+            hibernate.jdbc.time_zone: UTC
+    data:
+        elasticsearch:
+            properties:
+                path:
+                    home: target/elasticsearch
+    liquibase:
+        contexts: test
+    mail:
+        host: localhost
+    messages:
+        basename: i18n/messages
+    mvc:
+        favicon:
+            enabled: false
+    thymeleaf:
+        mode: HTML
+
+
+server:
+    port: 10344
+    address: localhost
+
+# ===================================================================
+# JHipster specific properties
+#
+# Full reference is available at: https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+jhipster:
+    async:
+        core-pool-size: 1
+        max-pool-size: 50
+        queue-capacity: 10000
+    # To test logstash appender
+    logging:
+        logstash:
+            enabled: true
+            host: localhost
+            port: 5000
+            queue-size: 512
+    security:
+        authentication:
+            jwt:
+                # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
+                base64-secret: NjBkYWExZjI2NzRjY2NiNzRhMjNhMWE1MDViYjdhMDkxOWEwZmY1NWEwNTk4MWU4NWQzNDk0MjdhZmQ2NzU5Y2I0ZjJhMWZkNTlhMTEwYTBlNTUwNGM2OGE5NTIwYjQyOWUyMmI3MTg3ZWJiODBiNjcwOTEzMWFhNGM3Y2JlYWQ=
+                # Token is valid 24 hours
+                token-validity-in-seconds: 86400
+    metrics:
+        logs: # Reports metrics in the logs
+            enabled: true
+            report-frequency: 60 # in seconds
+
+# ===================================================================
+# Application specific properties
+# Add your own application properties here, see the ApplicationProperties class
+# to have type-safe configuration, like in the JHipsterProperties above
+#
+# More documentation is available at:
+# https://www.jhipster.tech/common-application-properties/
+# ===================================================================
+
+# application:
Index: src/test/resources/config/bootstrap.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/resources/config/bootstrap.yml	(date 1552872226000)
+++ src/test/resources/config/bootstrap.yml	(date 1552872226000)
@@ -0,0 +1,4 @@
+spring:
+    cloud:
+        config:
+            enabled: false
Index: src/test/resources/logback.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/resources/logback.xml	(date 1552872226000)
+++ src/test/resources/logback.xml	(date 1552872226000)
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE configuration>
+
+<configuration scan="true">
+    <include resource="org/springframework/boot/logging/logback/base.xml"/>
+
+    <logger name="de.iso.apps" level="INFO"/>
+
+    <logger name="io.github.jhipster" level="WARN"/>
+
+    <logger name="javax.activation" level="WARN"/>
+    <logger name="javax.mail" level="WARN"/>
+    <logger name="javax.xml.bind" level="WARN"/>
+    <logger name="ch.qos.logback" level="WARN"/>
+    <logger name="com.netflix" level="WARN"/>
+    <logger name="com.netflix.discovery" level="INFO"/>
+    <logger name="com.ryantenney" level="WARN"/>
+    <logger name="com.sun" level="WARN"/>
+    <logger name="com.zaxxer" level="WARN"/>
+    <logger name="io.searchbox" level="WARN"/>
+    <logger name="io.undertow" level="WARN"/>
+    <logger name="io.undertow.websockets.jsr" level="ERROR"/>
+    <logger name="org.apache" level="WARN"/>
+    <logger name="org.apache.catalina.startup.DigesterFactory" level="OFF"/>
+    <logger name="org.bson" level="WARN"/>
+    <logger name="org.elasticsearch" level="WARN"/>
+    <logger name="org.hibernate.validator" level="WARN"/>
+    <logger name="org.hibernate" level="WARN"/>
+    <logger name="org.hibernate.ejb.HibernatePersistence" level="OFF"/>
+    <logger name="org.postgresql.jdbc" level="WARN"/>
+    <logger name="org.springframework" level="WARN"/>
+    <logger name="org.springframework.web" level="WARN"/>
+    <logger name="org.springframework.security" level="WARN"/>
+    <logger name="org.springframework.cache" level="WARN"/>
+    <logger name="org.thymeleaf" level="WARN"/>
+    <logger name="org.xnio" level="WARN"/>
+    <logger name="kafka" level="WARN"/>
+    <logger name="org.I0Itec" level="WARN"/>
+    <logger name="springfox" level="WARN"/>
+    <logger name="sun.rmi" level="WARN"/>
+    <logger name="liquibase" level="WARN"/>
+    <logger name="LiquibaseSchemaResolver" level="INFO"/>
+    <logger name="sun.net.www" level="INFO"/>
+    <logger name="sun.rmi.transport" level="WARN"/>
+
+    <root level="WARN">
+        <appender-ref ref="CONSOLE"/>
+    </root>
+
+</configuration>
diff --git .mvn/wrapper/maven-wrapper.jar .mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..01e67997377a393fd672c7dcde9dccbedf0cb1e9
GIT binary patch
literal 48337
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

diff --git src/main/resources/config/tls/keystore.p12 src/main/resources/config/tls/keystore.p12
new file mode 100644
index 0000000000000000000000000000000000000000..3296f8014cf434d1b422e92210ce4cdd76685847
GIT binary patch
literal 2591
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

diff --git src/test/features/gitkeep src/test/features/gitkeep
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

